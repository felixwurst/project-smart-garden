{"version":3,"sources":["actions/index.js","services/api.js","hooks/useWindowDimension.js","imgs/account_outlined.svg","imgs/account_filled.svg","components/Navigation.js","components/Footer.js","components/Fader.js","components/ScrollTop.js","components/Main.js","components/PopUpModal.js","components/Register.js","components/Login.js","components/CheckLogin.js","components/UserVerification.js","components/ForgotPassword.js","components/ResetPassword.js","components/ConfirmModal.js","imgs/humidity.svg","imgs/temperature.svg","imgs/soil_moisture.svg","imgs/light.svg","components/monitors/MonitorAll.js","components/LineChart.js","services/productsApi.js","services/capitalizeName.js","components/monitors/MonitorSoil.js","components/monitors/MonitorWater.js","components/LineChartMultiple.js","components/monitors/MonitorTempHum.js","components/monitors/MonitorLight.js","components/monitors/MonitorKitchen.js","components/monitors/MonitorHomeOffice.js","components/monitors/MonitorGarden.js","components/monitors/MonitorBalcony.js","components/Dashboard.js","components/UserProfile.js","components/Admin.js","components/SubAdmin.js","components/About.js","components/Contact.js","components/Terms.js","components/Protection.js","components/ErrorPage.js","components/Router.js","App.js","serviceWorker.js","reducers/index.js","index.js"],"names":["setUserAction","user","type","payload","setSocketAction","socket","setBackgroundImageAction","backgroundUrl","setBackgroundColor5Action","backgroundColor5","setBackgroundColor1Action","backgroundColor1","checkLoginPost","Promise","resolve","reject","fetch","method","headers","then","response","status","json","data","catch","err","Error","getAllUsersPost","changeVerificationPost","id","email","verified","body","JSON","stringify","deleteUserPost","useWindowDimension","useState","window","innerWidth","innerHeight","dimension","setDimension","useEffect","debouncedResizeHandler","fn","ms","timer","_","clearTimeout","setTimeout","apply","arguments","debounce","addEventListener","removeEventListener","_extends","Object","assign","target","i","length","source","key","prototype","hasOwnProperty","call","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","_ref3","fill","stroke","strokeWidth","strokeLinecap","strokeMiterlimit","cx","cy","r","_ref4","d","_ref","svgRef","title","props","x","y","width","height","viewBox","enableBackground","ref","ForwardRef","forwardRef","connect","state","nav","openRefNAV","useRef","openRefACC","activeRef","outlinedAccRef","filledAccRef","isOpenNAV","isOpenACC","account","isEnter","scrollUp","setState","color5","useSelector","history","useHistory","toggleNAV","current","classList","toggle","remove","toggleACC","prevScrollpos","Math","abs","pageYOffset","onscroll","currentScrollPos","style","display","document","globalClickListener","location","useLocation","menuNAV","NavItem","active","pathname","NavLink","onClick","tag","Link","to","role","menuACC","href","e","preventDefault","push","console","log","Navbar","fixed","className","top","Container","fluid","NavbarBrand","Button","toggleAccIcon","data-attribute","hidden","NavbarToggler","Nav","vertical","Collapse","isOpen","navbar","horizontal","withRouter","Col","fadeDiv","unlisten","listen","action","add","children","ScrollToTop","prevProps","scrollTo","React","Component","backgroundColor","backgroundColor100","fontSize","PopUpModal","Modal","show","close","ModalHeader","ModalBody","ModalFooter","color","Register","validateInp","firstName","lastName","userName","password","repassword","validateChar","match","validator","isEmail","handleBlur","field","touched","onRegisterBtnClick","registerPost","modalClass","modalTitle","modalMessage","showModal","modalContent","class","message","inputErrs","charErrs","markInpError","hasError","showError","markCharError","isEnabled","some","Row","xs","sm","size","offset","lg","xl","Form","FormGroup","Label","Input","placeholder","value","onChange","onBlur","required","trim","disabled","loginName","name","inpErrs","loginPost","UserVerification","params","useParams","ForgotPassword","md","ResetPassword","modalContentElement","pass","ConfirmModal","delete","_ref5","_ref6","strokeLinejoin","x1","y1","x2","y2","MonitorAll","Table","tableLayout","borderless","scope","Chart","defaults","global","defaultFontFamily","legend","defaultFontColor","LineChart","fontsize","chartRef","createRef","myChart","labels","map","time","datasets","update","myChartRef","getContext","gradientLine","createLinearGradient","min","max","addColorStop","options","scales","xAxes","ticks","padding","chartData","fontColor","unit","gridLines","drawBorder","borderWidth","yAxes","label","pointRadius","borderColor","lineTension","plugins","indexlabels","context","chart","round","deviceMoistureDataPost","deviceID","deviceTempHumDataPost","deviceLightDataPost","capitalizeName","search","newName","arr","split","charAt","toUpperCase","slice","MonitorSoil","device","results","result","Number","Date","hub","device_name","connected","MonitorWater","onBtnInputRangeTime","output","innerText","inputRangeTime","setProperty","offsetWidth","onBtnInputRangeDuration","inputRangeDuration","onSoilMoistureSelect","soilMoistureDevice","water_time","water_duration","moisture_device_id","rangeStatusMinRef","rangeStatusMaxRef","devices","filter","hub_id","type_id","checked","statusChange","CustomInput","for","htmlFor","LineChartMultiple","hData","tData","MonitorTempHum","humidity","temp","substring","capitalizeTemp","capitalizeHum","MonitorLight","MonitorKitchen","MonitorHomeOffice","MonitorGarden","MonitorBalcony","addHubIconRef","addDeviceIconRefs","openHubIconRefs","shineHubRefs","shineDeviceRefs","hubs","hubName","deviceName","hubNum","deviceNum","collapseHub","collapseAddHub","collapseAddDevice","confirmModalShow","confirmModalContent","confirmModalDelete","realTimeData","currentHub","currentDevice","currentMonitor","mounted","alert","io","on","emit","sn","find","sn_number","idx","disconnect","userImg","shineHub","forEach","item","index","toggleHubs","toggleHub","onDeleteHubBtnClick","hubID","deleteHub","deleteHubPost","onDeleteDeviceBtnClick","deleteDevice","deleteDevicePost","onAddDeviceBtnClick","addDevicePost","deviceSN","deviceStatus","newDevices","onSaveBtnClick","deviceSn","saveRangesPost","duration","img","m_date","Intl","DateTimeFormat","formatToParts","reduce","m_ca","m_it","day","month","year","Breadcrumb","BreadcrumbItem","src","alt","borderRadius","Card","CardHeader","CardTitle","resetHubs","fontWeight","CardSubtitle","innerRef","addHubPost","CardBody","openHubIconRef","addDeviceIconRef","shineHubRef","toggleDevices","toggleAddDevice","toggleDeleteDevice","shineDeviceRef","userId","onShowDeviceDataClick","shineDevice","CardText","save","imageInpRef","city","badgeContent","firstname","lastname","username","onEditBtnClick","files","fd","FormData","append","badgeClass","badgeMessage","badgeContentElement","accept","URL","createObjectURL","visibility","Birthday","birthday","zipCode","country","users","changeUserRole","userID","changeUserRolePost","newUsers","onDeleteBtnClick","splice","deleteUser","hover","dark","responsive","userRole","outline","ButtonGroup","onVerifiedBtnClick","rel","rows","marginTop","textDecoration","ScrollTop","path","exact","component","Main","Login","About","Contact","Terms","Protection","ErrorPage","App","Boolean","hostname","combineReducers","ReactDOM","render","store","createStore","reducers","__REDUX_DEVTOOLS_EXTENSION__","querySelector","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.72153ad8.chunk.js","sourcesContent":["export const setUserAction = user => {\n    return {\n        type: 'CHANGE_USER',\n        payload: user\n    };\n}\n\nexport const setSocketAction = socket => {\n    return {\n        type: 'CHANGE_SOCKET',\n        payload: socket\n    };\n}\n\nexport const setBackgroundImageAction = backgroundUrl => {\n    return {\n        type: 'CHANGE_BGIMG',\n        payload: backgroundUrl\n    };\n};\nexport const setBackgroundColor5Action = backgroundColor5 => {\n    return {\n        type: 'CHANGE_BGCOLOR_5',\n        payload: backgroundColor5\n    };\n}\n\nexport const setBackgroundColor1Action = backgroundColor1 => {\n    return {\n        type: 'CHANGE_BGCOLOR_1',\n        payload: backgroundColor1\n    };\n}\n\nexport const setNavAction = nav => {\n    return {\n        type: 'CHANGE_NAV',\n        payload: nav\n    };\n}","/* ***************************************************** REGISTRATION ******************************************************* */\nexport const registerPost = (firstName, lastName, userName, email, password, repassword) => {\n    const data = {\n        firstName,\n        lastName,\n        userName,\n        email,\n        password,\n        repassword\n    };\n    return new Promise((resolve, reject) => {\n        fetch('/register', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(data => {\n                    resolve(data);\n                }).catch(err => {\n                    reject(err);\n                });\n            } else {\n                reject(new Error('can not send data to server. response number is: ' + response.status));\n            }\n        }).catch(err => {\n            reject(err);\n        });\n    });\n};\n\nexport const verifyUserPost = email => {\n    return new Promise((resolve, reject) => {\n        fetch('/verifyuser', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({email})\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(data => {\n                    resolve(data);\n                }).catch(err => {\n                    reject(err);\n                });\n            } else {\n                reject(new Error('can not get the data, response number is: ' + response.status));\n            }\n        }).catch(err => {\n            reject(err);\n        });\n    });\n};\n\n/* ***************************************************** LOGIN ******************************************************* */\nexport const loginPost = (loginName, password) => {\n    return new Promise((resolve, reject) => {\n        const data = {\n            loginName,\n            password\n        };\n        fetch('/login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(data => {\n                    resolve(data);\n                }).catch(err => {\n                    reject(err);\n                });\n            } else {\n                reject(new Error('can not send the data, response number is: ' + response.status));\n            }\n        }).catch(err => {\n            reject(err);\n        });\n    });\n};\n\nexport const checkLoginPost = () => {\n    return new Promise((resolve, reject) => {\n        fetch('/checklogin', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(data => {\n                    resolve(data);\n                }).catch(err => {\n                    reject(err);\n                });\n            } else {\n                reject(new Error('Can not send data to server. Response number: ' + response.status));\n            }\n        }).catch(err => {\n            reject(err);\n        });\n    });\n};\n\n/* ***************************************************** LOGOUT ******************************************************* */\nexport const logoutPost = () => {\n    return new Promise((resolve, reject) => {\n        fetch('/user/logout', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(data => {\n                    resolve(data);\n                }).catch(err => {\n                    reject(err);\n                });\n            } else {\n                reject(new Error('Can not send data to server. Response number: ' + response.status));\n            }\n        }).catch(err => {\n            reject(err);\n        });\n    });\n};\n\n/* ***************************************************** USER PROFILE ******************************************************* */\nexport const getUserPost = id => {\n    return new Promise((resolve, reject) => {\n        fetch('/getuser', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({id})\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(data => {\n                    resolve(data);\n                }).catch(err => {\n                    reject(err);\n                });\n            } else {\n                reject(new Error('Can not send data to server. Response number: ' + response.status));\n            }\n        }).catch(err => {\n            reject(err);\n        });\n    });\n};\n\nexport const editUserPost = (id, firstName, lastName, userName, city, password, repassword, userImg) => {\n    return new Promise((resolve, reject) => {\n        const fd = new FormData();\n        if (userImg) {\n            fd.append('userImg', userImg);\n        }\n        fd.append('id', id);\n        fd.append('firstName', firstName);\n        fd.append('lastName', lastName);\n        fd.append('userName', userName);\n        fd.append('city', city);\n        fd.append('password', password);\n        fd.append('repassword', repassword);\n        fetch('/edituser', {\n            method: 'POST',\n            body: fd\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(data => {\n                    resolve(data);\n                }).catch(err => {\n                    reject(err);\n                });\n            } else {\n                reject(new Error('can not send data to server. response number is: ' + response.status));\n            }\n        }).catch(err => {\n            reject(err);\n        });\n    });\n};\n\n/* ***************************************************** RESET PASSWORD ******************************************************* */\nexport const sendResetLinkPost = email => {\n    return new Promise((resolve, reject) => {\n        fetch('/sendresetlink', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({email})\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(data => {\n                    resolve(data);\n                }).catch(err => {\n                    reject(err);\n                });\n            } else {\n                reject(new Error('can not get the data, response number is: ' + response.status));\n            }\n        }).catch(err => {\n            reject(err);\n        });\n    });\n};\n\nexport const resetPasswordPost = (email, id, pass) => {\n    return new Promise((resolve, reject) => {\n        const data = {\n            email,\n            id,\n            pass\n        };\n        fetch('/resetpassword', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(data => {\n                    resolve(data);\n                }).catch(err => {\n                    reject(err);\n                });\n            } else {\n                reject(new Error('can not get the data, response number is: ' + response.status));\n            }\n        }).catch(err => {\n            reject(err);\n        });\n    });\n};\n\n/* ***************************************************** ADMIN PANEL ******************************************************* */\nexport const getAllUsersPost = () => {\n    return new Promise((resolve, reject) => {\n        fetch('/getallusers', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(data => {\n                    resolve(data);\n                }).catch(err => {\n                    reject(err);\n                });\n            } else {\n                reject(new Error('Can not send data to server. Response number: ' + response.status));\n            }\n        }).catch(err => {\n            reject(err);\n        });\n    });\n};\n\nexport const changeVerificationPost = (id, email, verified)  => {\n    return new Promise((resolve, reject) => {\n        const data = {\n            id,\n            email,\n            verified\n        };\n        fetch('/changeverification', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(data => {\n                    resolve(data);\n                }).catch(err => {\n                    reject(err);\n                });\n            } else {\n                reject(new Error('can not get the data, response number is: ' + response.status));\n            }\n        }).catch(err => {\n            reject(err);\n        });\n    });\n};\n\nexport const deleteUserPost = (id)  => {\n    return new Promise((resolve, reject) => {\n        fetch('/deleteuser', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({id})\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(data => {\n                    resolve(data);\n                }).catch(err => {\n                    reject(err);\n                });\n            } else {\n                reject(new Error('can not get the data, response number is: ' + response.status));\n            }\n        }).catch(err => {\n            reject(err);\n        });\n    });\n};\n\nexport const changeUserRolePost = (id, role)  => {\n    return new Promise((resolve, reject) => {\n        const data = {\n            id,\n            role\n        };\n        fetch('/changeuserrole', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(data => {\n                    resolve(data);\n                }).catch(err => {\n                    reject(err);\n                });\n            } else {\n                reject(new Error('can not get the data, response number is: ' + response.status));\n            }\n        }).catch(err => {\n            reject(err);\n        });\n    });\n};\n\n/* ***************************************************** CONTACT ******************************************************* */\nexport const sendMessagePost = (email, message)  => {\n    return new Promise((resolve, reject) => {\n        const data = {\n            email,\n            message\n        };\n        fetch('/sendmessage', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(data => {\n                    resolve(data);\n                }).catch(err => {\n                    reject(err);\n                });\n            } else {\n                reject(new Error('can not get the data, response number is: ' + response.status));\n            }\n        }).catch(err => {\n            reject(err);\n        });\n    });\n};\n","// eslint-disable-next-line\nimport React, {useState, useEffect} from 'react';\n\nexport function useWindowDimension() {\n\n    const [dimension, setDimension] = useState([window.innerWidth, window.innerHeight]);\n\n    useEffect(() => {\n        const debouncedResizeHandler = debounce(() => {\n            setDimension([window.innerWidth, window.innerHeight]);\n        }, 100); // 100ms\n\n        window.addEventListener('resize', debouncedResizeHandler);\n\n        return () => window.removeEventListener('resize', debouncedResizeHandler);\n    }, []);\n    return dimension;\n}\n\nfunction debounce(fn, ms) {\n    let timer;\n    return _ => {\n        clearTimeout(timer);\n        timer = setTimeout(_ => {\n            timer = null;\n            fn.apply(this, arguments);\n        }, ms);\n    };\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null);\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"circle\", {\n  fill: \"none\",\n  stroke: \"current\",\n  strokeWidth: 10,\n  strokeLinecap: \"round\",\n  strokeMiterlimit: 10,\n  cx: 89.665,\n  cy: 89.664,\n  r: 84.665\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"current\",\n  strokeWidth: 10,\n  strokeMiterlimit: 10,\n  d: \"M69.744,136.784 c6.293,2.671,12.979,4.022,19.921,4.022c6.936,0,13.622-1.354,19.918-4.027v-28.288l2.176-1.489 c10.69-7.319,17.072-19.408,17.072-32.338c0-21.597-17.569-39.167-39.166-39.167s-39.167,17.57-39.167,39.167 c0,12.929,6.382,25.018,17.072,32.338l2.174,1.49V136.784z\"\n});\n\nvar SvgAccountOutlined = function SvgAccountOutlined(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    x: \"0px\",\n    y: \"0px\",\n    width: \"179px\",\n    height: \"179px\",\n    viewBox: \"0 0 179 179\",\n    enableBackground: \"new 0 0 179 179\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgAccountOutlined, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/account_outlined.423d1ec3.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null);\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M88.665,0C39.775,0,0,39.774,0,88.664c0,48.889,39.775,88.664,88.665,88.664s88.664-39.774,88.664-88.664 C177.329,39.774,137.554,0,88.665,0z M113.018,109.303l-0.436,0.298v28.825l-2.437,1.035c-6.79,2.884-14.017,4.346-21.481,4.346 c-7.47,0-14.699-1.46-21.483-4.34l-2.437-1.035v-28.831l-0.436-0.298c-11.779-8.066-18.812-21.389-18.812-35.638 c0-23.802,19.365-43.167,43.167-43.167c23.802,0,43.166,19.365,43.166,43.167C131.831,87.916,124.798,101.238,113.018,109.303z\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M76.744,130.148c7.677,2.202,16.151,2.206,23.838-0.003v-26.872l5.657-3.872c8.51-5.826,13.591-15.447,13.591-25.737 c0-17.186-13.981-31.167-31.166-31.167c-17.186,0-31.167,13.981-31.167,31.167c0,10.288,5.082,19.909,13.593,25.738l5.654,3.874 V130.148z\"\n});\n\nvar SvgAccountFilled = function SvgAccountFilled(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    x: \"0px\",\n    y: \"0px\",\n    width: \"177px\",\n    height: \"177px\",\n    viewBox: \"0 0 177 177\",\n    enableBackground: \"new 0 0 177 177\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgAccountFilled, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/account_filled.c69b18bf.svg\";\nexport { ForwardRef as ReactComponent };","/* ********************************************************* IMPORT ********************************************************* */\n// react\nimport React, {Fragment, useState, useEffect, useRef} from 'react';\n// redux\nimport {connect, useSelector} from 'react-redux';\nimport {setSocketAction, setUserAction} from '../actions';\n// router dom\nimport {Link, useHistory, useLocation} from 'react-router-dom';\n// reactstrap\nimport {Container, Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, Button} from 'reactstrap';\n// services\nimport {logoutPost} from '../services/api';\n// window dimension hook\nimport {useWindowDimension} from '../hooks/useWindowDimension';\n// images\nimport {ReactComponent as AccountOutlined} from '../imgs/account_outlined.svg';\nimport {ReactComponent as AccountFilled} from '../imgs/account_filled.svg';\n\n/* ******************************************************** COMPONENT ********************************************************* */\nfunction Navigation(props) {\n\n    // The screen width is determined by this hook and is used to make the component responsive. \n    const [width] = useWindowDimension();\n\n/* *********************************************************** REFERENCE ********************************************************* */\n    const openRefNAV = useRef();\n    const openRefACC = useRef();\n    const activeRef = useRef();\n    const outlinedAccRef = useRef();\n    const filledAccRef = useRef();\n\n/* *********************************************************** STATE ********************************************************* */  \n    const initialState = {\n        isOpenNAV: true,\n        isOpenACC: true,\n        account: true,\n        isEnter: true,\n        scrollUp: null,\n    };\n    const [state, setState] = useState(initialState);\n    const color5 = useSelector(state => state.backgroundColor5);\n\n/* *********************************************************** LOGOUT ********************************************************* */\n    const history = useHistory();\n\n    // delete the user data stored in the mainstate of redux and redirect the user to the login page\n    const logoutBtnClick = e => {\n        e.preventDefault();\n        logoutPost().then(data => {\n            if (data === 10) {\n                props.setUserAction(null);\n                history.push('/login');\n            }\n        }).catch(err => {\n            console.log(err);\n        });\n        toggleACC();\n    };\n\n/* *********************************************************** TOGGLES ********************************************************* */\n    const toggleNAV = () => {\n        if (!state.isOpenACC) {\n            // close sidebar of acc\n            openRefACC.current.classList.remove('open');\n            setTimeout(() => {\n                // toggle menu icon\n                activeRef.current.classList.toggle('active');\n                // toggle topbar of nav\n                setState({...state, isOpenNAV: !state.isOpenNAV, account: false, isOpenACC: true});\n                // toggle sidebar of nav\n                openRefNAV.current.classList.toggle('open');\n            }, 300);\n        } else {\n            // toggle menu icon\n            activeRef.current.classList.toggle('active');\n            // toggle topbar of nav\n            setState({...state, isOpenNAV: !state.isOpenNAV, account: false, isOpenACC: true});\n            // toggle sidebar of nav\n            openRefNAV.current.classList.toggle('open');\n        };\n    };\n\n    const toggleACC = () => {\n        if (!state.isOpenNAV) {\n            // close sidebar of nav\n            openRefNAV.current.classList.remove('open');\n            // deactivate menu icon\n            activeRef.current.classList.remove('active');\n            setTimeout(() => {\n                // toggle topbar of acc\n                setState({...state, isOpenNAV: true, account: true, isOpenACC: !state.isOpenACC});\n                // toggle sidebar of acc\n                openRefACC.current.classList.toggle('open');\n            }, 300);\n        } else {\n            // toggle topbar of acc\n            setState({...state, isOpenNAV: true, account: true, isOpenACC: !state.isOpenACC});\n            // toggle sidebar of acc\n            openRefACC.current.classList.toggle('open');\n        };\n    };\n\n    const toggleAccIcon = e => {\n        e.preventDefault();\n        outlinedAccRef.current.style.display = 'none';\n        filledAccRef.current.style.display = 'block';\n    }\n\n/* ********************************************************* FUNCTIONS ********************************************************* */\n// change colour of background\n\n// hide menubar at viewpoint <= 576px    \nlet prevScrollpos = Math.abs(window.pageYOffset);\n    // set media query\n    if (width <= 576) {\n        window.onscroll = function() {\n            let currentScrollPos = Math.abs(window.pageYOffset);\n            if (prevScrollpos > currentScrollPos) {\n                // show menubar while scroll up\n                setState({...state, scrollUp: 0});\n            } else if (prevScrollpos === 0) {\n                setState({...state, scrollUp: 0});\n            } else {\n                // hide menubar while scroll down\n                setState({...state, scrollUp: '-50px'});\n            }\n            prevScrollpos = currentScrollPos;\n        }\n    } else {\n        window.onscroll = false;\n    }\n\n/* ********************************************************* USE EFFECT ********************************************************* */\n    // show outlined account-icon\n    useEffect(() => {\n        outlinedAccRef.current.style.display = 'block';\n        filledAccRef.current.style.display = 'none';\n    // eslint-disable-next-line\n    }, []);\n    // set outside listener\n    useEffect(() => {\n        // toggle account-icon\n        if (filledAccRef.current.style.display === 'block') {\n            setTimeout(() => {\n                outlinedAccRef.current.style.display = 'block';\n                filledAccRef.current.style.display = 'none';\n            }, 100);\n        };\n        // console.log(openRefACC.current.classList.contains(item => item === 'open'));\n        document.addEventListener('click', globalClickListener);\n        // cleanup \n        return () => {\n            document.removeEventListener('click', globalClickListener);\n        };\n    // eslint-disable-next-line\n    });\n    // close menubar\n    const globalClickListener = () => {\n        if (activeRef.current) activeRef.current.classList.remove('active');\n        if (openRefNAV.current) openRefNAV.current.classList.remove('open');\n        if (openRefACC.current) openRefACC.current.classList.remove('open');\n        // cleanup\n        document.removeEventListener('click', globalClickListener);\n        setState({...state, isOpenNAV: true, isOpenACC: true});\n    }\n\n/* *********************************************************** NAV ITEMS ********************************************************* */\n    let location = useLocation();\n    // navigation menu\n    const menuNAV = (\n        <Fragment>\n            <NavItem active={location.pathname === '/' ? true : false}>\n                <NavLink onClick={toggleNAV} title=\"home\" tag={Link} to=\"/\">\n                    Home\n                </NavLink>\n            </NavItem>\n            {props.user && (\n                <Fragment>\n                    <NavItem active={location.pathname === '/user/dashboard' ? true : false}>\n                        <NavLink title=\"dashboard\" onClick={toggleNAV} tag={Link} to=\"/user/dashboard\">\n                            Dashboard\n                        </NavLink>\n                    </NavItem>\n                    {props.user.role === 'admin' && (\n                        <NavItem active={location.pathname === '/user/admin' ? true : false}>\n                            <NavLink onClick={toggleNAV} tag={Link} to=\"/user/admin\">\n                                Panel\n                            </NavLink>\n                        </NavItem>\n                    )}\n                    {props.user.role === 'subadmin' && (\n                        <NavItem active={location.pathname === '/user/subadmin' ? true : false}>\n                            <NavLink onClick={toggleNAV} tag={Link} to=\"/user/subadmin\">\n                                Panel\n                            </NavLink>\n                        </NavItem>\n                    )}\n                </Fragment>\n            )}\n        </Fragment>\n    );\n    // account menu\n    const menuACC = (\n        <Fragment>\n            {props.user ? (\n                <Fragment>\n                    <NavItem active={location.pathname === '/user/profile' ? true : false}>\n                        <NavLink title=\"profile\" onClick={toggleACC} tag={Link} to=\"/user/profile\">\n                            Profile\n                        </NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink title=\"logout\" href=\"#\" onClick={logoutBtnClick}>\n                            Logout\n                        </NavLink>\n                    </NavItem>\n                </Fragment>\n            ) : (\n                <Fragment>\n                    <NavItem active={location.pathname === '/login' ? true : false}>\n                        <NavLink onClick={toggleACC} title=\"login\" tag={Link} to=\"/login\">\n                            Login\n                        </NavLink>\n                    </NavItem>\n                    <NavItem active={location.pathname === '/register' ? true : false}>\n                        <NavLink onClick={toggleACC} title=\"register\" tag={Link} to=\"/register\">\n                            Register\n                        </NavLink>\n                    </NavItem>\n                </Fragment>\n            )}\n        </Fragment>\n    );\n\n/* *********************************************************** RETURN ********************************************************* */\n    return (\n        <Navbar fixed=\"top\" className={`p-0 justify-content-center ${props.backgroundColor5} ${props.backgroundColor1}`} style={{top: state.scrollUp}}>\n            <Container fluid={true} className=\"px-4 px-sm-5 pt-1 mt-2 mt-sm-0\">\n{/* *********************************************************** LOGO ********************************************************* */}\n                <div className=\"flex-grow-1\">\n                    <NavbarBrand className=\"m-0\" title=\"home\" tag={Link} to=\"/\" />\n                </div>\n{/* *********************************************************** ACCOUNT ********************************************************* */}\n                <Button title=\"100\" className=\"p-0\" onClick={e => {toggleACC(e); toggleAccIcon(e)}}>\n                    <h4 data-attribute='hidden' hidden={true} className=\"d-flex text-align-center justify-content-center m-0\">\n                        <AccountOutlined width=\"1.5rem\" height=\"1.5rem\" stroke={color5 ? \"#1C2C22\" : \"#FDD79D\"} ref={outlinedAccRef} />\n                        <AccountFilled width=\"1.5rem\" height=\"1.5rem\" fill={color5 ? \"#1C2C22\" : \"#FDD79D\"} ref={filledAccRef} />\n                    </h4>\n                </Button>\n                {/* navbar toggle for devices smaller than 576px */}\n                <NavbarToggler className=\"d-block p-0 py-3 ml-3\" onClick={toggleNAV}>\n                    <div ref={activeRef} className=\"menu-icon\">\n                        <span></span><span></span><span></span>\n                    </div>\n                </NavbarToggler>\n{/* *********************************************************** SIDEBAR ********************************************************* */}\n                <div ref={openRefNAV} className=\"sidebar text-center\">\n                    <Nav vertical className=\"mx-3\">\n                        {menuNAV}\n                    </Nav>\n                </div>\n{/* *********************************************************** SIDEBAR ********************************************************* */}\n                <div ref={openRefACC} className=\"sidebar text-center\">\n                    <Nav vertical className=\"mx-3\">\n                        {menuACC}\n                    </Nav>\n                </div>\n{/* *********************************************************** TOPBAR ********************************************************* */}\n                <Collapse className=\"topbar\" isOpen={!state.isOpenNAV} navbar>\n                    <Nav horizontal=\"center\" vertical=\"align-items-end\">\n                        {menuNAV}\n                    </Nav>\n                </Collapse>\n{/* *********************************************************** ACCOUNTBAR ********************************************************* */}\n                <Collapse className=\"topbar\" isOpen={!state.isOpenACC} navbar>\n                    <Nav horizontal=\"center\" vertical=\"align-items-end\">\n                        {menuACC}\n                    </Nav>\n                </Collapse>\n            </Container>\n        </Navbar>\n    );\n}\n\n/* ********************************************************* MAP STATE TO PROPS ********************************************************* */\nconst mapStateToProps = state => {\n    return {\n        user: state.user,\n        socket: state.socket,\n        backgroundColor1: state.backgroundColor1,\n        backgroundColor5: state.backgroundColor5,\n        nav: state.nav\n    };\n};\n\n/* ********************************************************* EXPORT ********************************************************* */\nexport default connect(mapStateToProps, {setUserAction, setSocketAction})(Navigation);\n","/* ********************************************************* IMPORT ********************************************************* */\n// react\nimport React from 'react';\n// redux\nimport {connect} from 'react-redux';\n// router dom\nimport {Link, withRouter} from 'react-router-dom';\n// reactstrap\nimport {Col, Container} from 'reactstrap';\n\n/* ******************************************************** COMPONENT ********************************************************* */\nfunction Footer({location}) {\n    if (location.pathname !== '/') {\n        return (\n            <Container fluid={true} className=\"px-4 px-sm-5 mt-auto\">\n                <Col className=\"d-flex justify-content-center mt-4 mb-3 px-0\">\n                    <a href=\"https://www.youtube.com\" className=\"mx-3\">\n                        <i className=\"fab fa-youtube\"></i>\n                    </a>\n                    <a href=\"https://www.instagram.com\" className=\"mx-3\">\n                        <i className=\"fab fa-instagram\"></i>\n                    </a>\n                    <a href=\"https://www.facebook.com\" className=\"mx-3\">\n                        <i className=\"fab fa-facebook\"></i>\n                    </a>\n                </Col>\n                <Col className=\"d-flex justify-content-center text-center pb-4 px-0\">\n                    <Link to=\"/about\" className=\"mx-2 mx-md-3\">\n                        About\n                    </Link>\n                    <Link to=\"/contact\" className=\"mx-2 mx-md-3\">\n                        Contact\n                    </Link>\n                    <Link to=\"/terms\" className=\"mx-2 mx-md-3\">\n                        Terms &amp; Conditions\n                    </Link>\n                    <Link to=\"/protection\" className=\"mx-2 mx-md-3\">\n                        Data Protection\n                    </Link>\n                </Col>\n            </Container>\n        );\n    } else {\n        return null;\n    }\n}\n\n/* ********************************************************* MAP STATE TO PROPS ********************************************************* */\nconst mapStateToProps = state => {\n    return {user: state.user};\n};\n\n/* ********************************************************* EXPORT ********************************************************* */\nexport default connect(mapStateToProps)(withRouter(Footer));\n","import React , {useEffect, useRef} from 'react';\nimport {withRouter} from 'react-router-dom';\n// redux\nimport {connect} from 'react-redux';\n\nconst Fader = props => {\n\n    const fadeDiv = useRef(null);\n\n    const fadeAnimation = () => {\n        fadeDiv.current.classList.add(\"fadeIn\");\n        setTimeout(() => {\n            fadeDiv.current.classList.remove(\"fadeIn\");\n        }, 700);\n    }\n\n    useEffect(() => {\n        let unlisten = props.history.listen((location,action) => {\n            fadeAnimation();\n        })\n        return () => {\n            unlisten();\n        };\n    });\n\n    return (\n        <div ref={fadeDiv} className={`d-flex flex-column align-items-end ${props.backgroundColor5} ${props.backgroundColor1}`}>\n            {props.children}\n        </div>\n    );\n}\n\n/* ********************************************************* MAP STATE TO PROPS ********************************************************* */\nconst mapStateToProps = state => {\n    return {\n        backgroundColor1: state.backgroundColor1,\n        backgroundColor5: state.backgroundColor5\n    };\n};\n\n/* ********************************************************* EXPORT ********************************************************* */\nexport default connect(mapStateToProps)(withRouter(Fader));\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nclass ScrollToTop extends React.Component {\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.location.pathname !== prevProps.location.pathname\n    ) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default withRouter(ScrollToTop);","/* ********************************************************* IMPORT ********************************************************* */\n// react\nimport React, {Fragment, useEffect} from 'react';\n// redux\nimport {connect} from \"react-redux\";\nimport {setBackgroundImageAction, setBackgroundColor5Action, setBackgroundColor1Action} from '../actions';\n// router dom\nimport {Link} from 'react-router-dom';\n// components\n// import Slider from \"./Slider\"\n// import Images from \"./images\"\n\n/* ********************************************************* COMPONENT ********************************************************* */\nfunction Main(props) {\n\n    useEffect(() => {\n        // sets background color in redux\n        props.setBackgroundImageAction(\"../imgs/800px_COLOURBOX10774649.jpg\");\n        props.setBackgroundColor5Action(null);\n        props.setBackgroundColor1Action(null);\n    // eslint-disable-next-line\n    }, []);\n\n    return(\n        <Fragment>\n            {/* <Slider images={Images} className={`${props.backgroundColor} ${props.backgroundColor100} ${props.backgroundColor70}`} /> */}\n            <div className=\"bg-image\" style={{width: \"100vw\", height: \"100vh\"}}></div>\n            <article>\n                <h2>Welcome to the world of planting!</h2>\n                <p style={{fontSize: \"1.2rem\"}}>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\n                <Link tag={Link} to=\"/register\"><h4 className=\"mb-0\">Register</h4></Link>\n            </article>\n        </Fragment>\n    );\n}\n\n/* ********************************************************* MAP STATE TO PROPS ********************************************************* */\nconst mapStateToProps = state => {\n    return {\n        backgroundUrl: state.backgroundUrl,\n        backgroundColor: state.backgroundColor5,\n        backgroundColor100: state.backgroundColor1\n    };\n};\n\n/* ********************************************************* EXPORT ********************************************************* */\nexport default connect(mapStateToProps, {setBackgroundImageAction, setBackgroundColor5Action, setBackgroundColor1Action})(Main);","/* ********************************************************* IMPORT ********************************************************* */\nimport React from 'react';\nimport {Button, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\n\n/* ********************************************************* COMPONENT ********************************************************* */\n// Used to give the user hints in the form of a modal. For example, if a required field has not been filled in.\nclass PopUpModal extends React.Component {\n    render() {\n        return (\n            <Modal isOpen={this.props.show} toggle={this.props.close} className=\"modal-dialog-centered\">\n                <ModalHeader toggle={this.props.close} className={this.props.className}>\n                    {this.props.title}\n                </ModalHeader>\n                <ModalBody className=\"text-dark\">\n                    {this.props.children}\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"secondary\" onClick={this.props.close}>\n                        Close\n                    </Button>\n                </ModalFooter>\n            </Modal>\n        );\n    }\n}\n\n/* ********************************************************* EXPORT ********************************************************* */\nexport default PopUpModal;","/* ********************************************************* IMPORT ********************************************************* */\n// react\nimport React, {Fragment} from 'react';\n// redux\nimport {connect} from 'react-redux';\nimport {setBackgroundImageAction, setBackgroundColor1Action, setBackgroundColor5Action} from '../actions';\n// router dom\nimport {Link} from 'react-router-dom';\n// reactstrap\nimport {Container, Row, Col, Form, FormGroup, Label, Input, Button} from 'reactstrap';\n// components\nimport PopUpModal from './PopUpModal';\n// services\nimport {registerPost} from '../services/api';\n// validator\nimport validator from 'validator';\n\n/* ********************************************************* COMPONENT ********************************************************* */\nclass Register extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            firstName: '',\n            lastName: '',\n            userName: '',\n            email: '',\n            password: '',\n            repassword: '',\n            showModal: false,\n            modalContent: {\n                class: '',\n                title: '',\n                message: ''\n            },\n            touched: {\n                firstName: false,\n                lastName: false,\n                userName: false,\n                email: false,\n                password: false,\n                repassword: false\n            }\n        };\n    }\n\n    componentDidMount() {\n        this.props.setBackgroundColor1Action(\"color-1\");\n        this.props.setBackgroundColor5Action(null);\n    }\n    \n/* ********************************************************* FUNCTIONS ********************************************************* */    \n    // check exsiting input\n    validateInp = (firstName, lastName, userName, email, password, repassword) => {\n        return {\n            firstName: firstName.length === 0,\n            lastName: lastName.length === 0,\n            userName: userName.length === 0,\n            email: email.length === 0,\n            password: password.length === 0,\n            repassword: repassword.length === 0\n        };\n    }  \n    // check characters\n    validateChar = (firstName, lastName, userName, email, password) => {\n        return {\n            // eslint-disable-next-line\n            firstName: !firstName.match(/^[A-ZÀ-Üa-zß-ü]+[\\.]?[ \\-]?([A-ZÀ-Üa-zß-ü ]*)$/g),           // [^0-9!@#$%^&*()_+\\=\\[\\]{};':\"\\\\|,<>\\/?]?\n            // eslint-disable-next-line\n            lastName: !lastName.match(/^[A-ZÀ-Üa-zß-ü]+[\\.]?[ \\-]?([A-ZÀ-Üa-zß-ü ]*)$/g),\n            // eslint-disable-next-line\n            userName: !userName.match(/^([A-ZÀ-Üa-zß-ü0-9!?@#$: \\+\\.\\-]*)([A-ZÀ-Üa-zß-ü0-9!?@#$: \\+\\.\\-]*)$/g),\n            email: !validator.isEmail(email),\n            // password: validator.isStrongPassword(password)\n        };\n    }\n    // check blur of inputs\n    handleBlur = field => e => {\n        e.preventDefault();\n        this.setState({\n            ...this.state,\n            touched: {...this.state.touched, [field]: true}\n        });\n    }\n\n/* ********************************************************* REGISTRATION ********************************************************* */\n    // The user can register on the site by entering his name, email, a user name of his choice and a password. \n    // If all fields are filled in correctly, the user will receive an email with a link to verify the email \n    // and complete the registration.\n    onRegisterBtnClick = e => {\n        e.preventDefault();\n        registerPost(\n            this.state.firstName,\n            this.state.lastName,\n            this.state.userName,\n            this.state.email,\n            this.state.password,\n            this.state.repassword\n        ).then(data => {\n            let modalClass = '';\n            let modalTitle = '';\n            let modalMessage = '';\n            switch (data) {\n                case 1:\n                    this.setState({showModal: true});\n                    modalClass = 'success';\n                    modalTitle = 'Success';\n                    modalMessage = <p>Congratulation, you registered successfully!<br />Please check your mails to verify your account.</p>;\n                    break;\n                case 2:\n                    this.setState({showModal: true});\n                    modalClass = 'danger';\n                    modalTitle = 'Warning';\n                    modalMessage = <p>Server error, please contact the administrator!</p>;\n                    break;\n                case 3:\n                    this.setState({showModal: true});\n                    modalClass = 'danger';\n                    modalTitle = 'Warning';\n                    modalMessage = <p>There is already a user with this email.<br />Please choose another one.</p>;\n                    break;\n                case 4:\n                    this.setState({showModal: true});\n                    modalClass = 'danger';\n                    modalTitle = 'Warning';\n                    modalMessage = <p>There is already a user with this username.<br />Please choose another one.</p>;\n                    break;\n                case 5:\n                    this.setState({showModal: true});\n                    modalClass = 'danger';\n                    modalTitle = 'Warning';\n                    modalMessage = <p>There is already a user with this username and email.<br />Please choose another one.</p>;\n                    break;\n                case 6:\n                    this.setState({showModal: true});\n                    modalClass = 'danger';\n                    modalTitle = 'Warning';\n                    modalMessage = <p>The email does not answer.<br />Please choose another one.</p>;\n                    break;\n                case 10:\n                    this.setState({showModal: true});\n                    modalClass = 'danger';\n                    modalTitle = 'Warning';\n                    modalMessage = <p>Please fill out correctly!</p>;\n                    break;\n                default:\n                    break;\n            }\n            this.setState({\n                modalContent: {\n                    class: modalClass,\n                    title: modalTitle,\n                    message: modalMessage\n                }\n            });\n        }).catch(() => {\n            this.setState({\n                modalContent: {\n                    class: 'danger',\n                    title: 'Warning',\n                    message: <p>Can not send the registration data to server!</p>\n                }\n            });\n        });\n    };\n\n/* ********************************************************* RENDER ********************************************************* */\n    render() {\n        // change border-color of inputs to danger\n        const inputErrs = this.validateInp(\n            this.state.firstName,\n            this.state.lastName,\n            this.state.userName,\n            this.state.email,\n            this.state.password,\n            this.state.repassword\n        );\n        // change border-color of inputs to danger\n        const charErrs = this.validateChar(\n            this.state.firstName,\n            this.state.lastName,\n            this.state.userName,\n            this.state.email,\n            this.state.password\n        );\n        // show error message for input error\n        const touched = this.state.touched\n        function markInpError(field) {\n            const hasError = inputErrs[field];\n            const showError = touched[field];\n            return hasError ? showError : false;\n        }\n        // show error message for character error\n        function markCharError(field) {\n            const hasError = charErrs[field];\n            const showError = touched[field];\n            return hasError ? showError : false;\n        }\n        // enable login-button\n        const isEnabled = !Object.keys(inputErrs).some(x => inputErrs[x]) && !Object.keys(charErrs).some(x => charErrs[x]);\n\n/* ********************************************************* RETURN ********************************************************* */\n        return (\n            <Fragment>\n                <PopUpModal\n                    className={this.state.modalContent.class}\n                    title={this.state.modalContent.title}                \n                    show={this.state.showModal}\n                    close={() => this.setState({showModal: false})}\n                >\n                    {this.state.modalContent.message}\n                </PopUpModal>\n                <Container fluid={true} className=\"px-4 px-sm-5 pt-5 mt-5\">\n                    <Row>\n                        <Col xs=\"12\" sm={{size: 8, offset: 2}} lg={{size: 6, offset: 3}} xl={{size: 4, offset: 4}}>\n                            <h1 className=\"text-trans mb-4\">Registration</h1>\n                            <p className=\"text-trans mb-4\">You are only one step away from your smart garden.</p>\n                        </Col>\n                    </Row>\n                    <Form className=\"pb-md-0 pb-5\">\n                        <Row>\n                            <Col xs=\"12\" sm={{size: 8, offset: 2}} lg={{size: 6, offset: 3}} xl={{size: 4, offset: 4}}>\n                                <FormGroup className=\"text-left mb-1\">\n                                    <Label className=\"w-100 h5 text-trans mb-2 ml-2\">First Name:</Label>\n                                    <Input\n                                        className={\"badge-pill bg-transparent \" + (markInpError('firstName') || markCharError('firstName') ? \"error\" : \"\")}\n                                        type=\"text\"\n                                        placeholder=\"Enter your first name\"\n                                        value={this.state.firstName}\n                                        onChange={e => this.setState({firstName: e.target.value})}\n                                        onBlur={this.handleBlur('firstName')}\n                                        required\n                                    />\n                                </FormGroup>\n                                <p className=\"error mb-2 ml-2\">\n                                    &nbsp;\n                                    {\n                                        this.state.firstName.trim() === ''\n                                    ?\n                                        markInpError('firstName') ? \"Please enter your first name.\" : \"\"\n                                    :\n                                        markCharError('firstName') ? \"Please use only letters seperated by dot, hyphen or space.\" : \"\"\n                                    }\n                                </p>\n                            </Col>\n                            <Col xs=\"12\" sm={{size: 8, offset: 2}} lg={{size: 6, offset: 3}} xl={{size: 4, offset: 4}}>\n                                <FormGroup className=\"text-left mb-1\">\n                                    <Label className=\"w-100 h5 text-trans mb-2 ml-2\">Last Name:</Label>\n                                    <Input\n                                        className={\"badge-pill bg-transparent \" + (markInpError('lastName') || markCharError('lastName') ? \"error\" : \"\")}\n                                        type=\"text\"\n                                        placeholder=\"Enter your last name\"\n                                        value={this.state.lastName}\n                                        onChange={e => this.setState({lastName: e.target.value})}\n                                        onBlur={this.handleBlur('lastName')}\n                                        required\n                                    />\n                                </FormGroup>\n                                <p className=\"error mb-2 ml-2\">\n                                    &nbsp;\n                                    {\n                                        this.state.lastName.trim() === ''\n                                    ?\n                                        markInpError('lastName') ? \"Please enter your last name.\" : \"\"\n                                    :\n                                        markCharError('lastName') ? \"Please use only letters seperated by dot, hyphen or space.\" : \"\"\n                                    }\n                                </p>\n                            </Col>\n                            <Col xs=\"12\" sm={{size: 8, offset: 2}} lg={{size: 6, offset: 3}} xl={{size: 4, offset: 4}}>\n                                <FormGroup className=\"text-left mb-1\">\n                                    <Label className=\"w-100 h5 text-trans mb-2 ml-2\">Email:</Label>\n                                    <Input\n                                        className={\"badge-pill bg-transparent \" + (markInpError('email') || markCharError('email') ? \"error\" : \"\")}\n                                        type=\"email\"\n                                        placeholder=\"Enter your email\"\n                                        value={this.state.email}\n                                        onChange={e => this.setState({email: e.target.value})}\n                                        onBlur={this.handleBlur('email')}\n                                        required\n                                    />\n                                </FormGroup>\n                                <p className=\"error mb-2 ml-2\">\n                                    &nbsp;\n                                    {\n                                        this.state.email === ''\n                                    ?\n                                        markInpError('email') ? \"Please enter your email.\" : \"\"\n                                    :\n                                        markCharError('email') ? \"Please enter a valid email.\" : \"\"\n                                    }\n                                </p>\n                            </Col>\n                            <Col xs=\"12\" sm={{size: 8, offset: 2}} lg={{size: 6, offset: 3}} xl={{size: 4, offset: 4}}>\n                                <FormGroup className=\"text-left mb-1\">\n                                    <Label className=\"w-100 h5 text-trans mb-2 ml-2\">User Name:</Label>\n                                    <Input\n                                        className={\"badge-pill bg-transparent \" + (markInpError('userName') || markCharError('userName') ? \"error\" : \"\")}\n                                        type=\"text\"\n                                        placeholder=\"Enter an user name\"\n                                        value={this.state.userName}\n                                        onChange={e => this.setState({userName: e.target.value})}\n                                        onBlur={this.handleBlur('userName')}\n                                        required\n                                    />\n                                </FormGroup>\n                                <p className=\"error mb-2 ml-2\">\n                                    &nbsp;\n                                    {\n                                        this.state.userName.trim() === \"\"\n                                    ?\n                                        markInpError('userName') ? \"Please enter a user name.\" : \"\"\n                                    :\n                                        markCharError('userName') ? \"Please use only letters, numbers and several charachters.\" : \"\"\n                                    }\n                                </p>\n                            </Col>\n                            <Col xs=\"12\" sm={{size: 8, offset: 2}} lg={{size: 6, offset: 3}} xl={{size: 4, offset: 4}}>\n                                <FormGroup className=\"text-left mb-1\">\n                                    <Label className=\"w-100 h5 text-trans mb-2 ml-2\">Password:</Label>\n                                    <Input\n                                        className={\"badge-pill bg-transparent \" + (markInpError('password') ? \"error\" : \"\")}\n                                        type=\"password\"\n                                        placeholder=\"Enter a password\"\n                                        value={this.state.password}\n                                        onChange={e => this.setState({password: e.target.value})}\n                                        onBlur={this.handleBlur('password')}\n                                        required\n                                    />\n                                </FormGroup>\n                                <p className=\"error mb-2 ml-2\">&nbsp;{markInpError('password') ? \"Please enter a password.\" : \"\"}</p>\n                            </Col>\n                            <Col xs=\"12\" sm={{size: 8, offset: 2}} lg={{size: 6, offset: 3}} xl={{size: 4, offset: 4}}>\n                                <FormGroup className=\"text-left mb-1\">\n                                    <Label className=\"w-100 h5 text-trans mb-2 ml-2\">Repeat Password:</Label>\n                                    <Input\n                                        className={\"badge-pill bg-transparent \" + (markInpError('repassword') ? \"error\" : \"\")}\n                                        type=\"password\"\n                                        placeholder=\"Repeat your password\"\n                                        value={this.state.repassword}\n                                        onChange={e => this.setState({repassword: e.target.value})}\n                                        onBlur={this.handleBlur('repassword')}\n                                        required\n                                    />\n                                </FormGroup>\n                                <p className=\"error mb-2 ml-2\">&nbsp;{markInpError('repassword') ? \"Please repeat the password.\" : \"\"}</p>\n                            </Col>\n                            <Col xs=\"12\" sm={{size: 8, offset: 2}} lg={{size: 6, offset: 3}} xl={{size: 4, offset: 4}}>\n                                <h5 className=\"text-trans mt-2\">\n                                    Already registered?&nbsp;\n                                    <Link to=\"/login\">Login</Link>\n                                </h5>\n                            </Col>\n                        </Row>\n                        <Col className=\"text-center\">\n                            <Button className=\"badge-pill btn-outline-light bg-transparent my-4\" onClick={this.onRegisterBtnClick} disabled={!isEnabled}>\n                                Register\n                            </Button>\n                        </Col>\n                    </Form>\n                </Container>\n            </Fragment>\n        );\n    }\n};\n\n/* ********************************************************* EXPORT ********************************************************* */\nexport default connect(null, {setBackgroundImageAction, setBackgroundColor1Action, setBackgroundColor5Action})(Register);\n","/* ********************************************************* IMPORT ********************************************************* */\n// react\nimport React, {Fragment, useState, useEffect} from 'react';\n// reactstrap\nimport {Container, Row, Col, Form, FormGroup, Label, Input, Button} from 'reactstrap';\n// router dom\nimport {Link, useHistory} from 'react-router-dom';\n// redux\nimport {connect} from 'react-redux';\nimport {setUserAction, setSocketAction, setBackgroundColor5Action, setBackgroundColor1Action} from '../actions';\n// components\nimport PopUpModal from './PopUpModal';\n// services\nimport {loginPost} from '../services/api';\n\n/* ********************************************************* COMPONENT ********************************************************* */\nconst Login = props => {\n\n    const history = useHistory();\n\n    const initialState = {\n        loginName: '',\n        password: '',\n        showModal: false,\n        modalClass: '',\n        modalTitle: '',\n        modalContent: null,\n        touched: {\n            loginName: false,\n            password: false\n        }\n    };\n    const [state, setState] = useState(initialState);\n\n    useEffect(() => {\n        // deletes user and sets background color in redux\n        props.setUserAction(null);\n        props.setBackgroundColor1Action('color-1');\n        props.setBackgroundColor5Action(null);\n    // eslint-disable-next-line\n    }, []);\n\n/* ********************************************************* FUNCTIONS ********************************************************* */    \n    // check exsiting input\n    const validateInp = (name, password) => {\n        return {loginName: name.length === 0, password: password.length === 0};\n    }\n    // change border-color of inputs to danger\n    const inpErrs = validateInp(state.loginName, state.password);\n    // const isEnabled =  state.loginName.trim().length > 0 &&  state.password.length > 0;\n    // check blur of inputs\n    const handleBlur = field => e => {\n        e.preventDefault();\n        setState({\n            ...state,\n            touched: {...state.touched, [field]: true}\n        });\n    }\n    // show input error message\n    const markInpError = field => {\n        const hasError = inpErrs[field];\n        const showError = state.touched[field];\n        return hasError ? showError : false;\n    }\n    // check characters\n    const validateChar = (name) => {\n        // eslint-disable-next-line\n        return {loginName: !name.match(/^([A-ZÀ-Üa-zß-ü0-9!?@#$: \\+\\.\\-]*)([A-ZÀ-Üa-zß-ü0-9!?@#$: \\+\\.\\-]*)$/g)};\n    }\n    const charErrs = validateChar(state.loginName);\n    // show character error message\n    const markCharError = field => {\n        const hasError = charErrs[field];\n        const showError = state.touched[field];\n        return hasError ? showError : false;\n    }\n    // enable login-button\n    const isEnabled = !Object.keys(inpErrs).some(x => inpErrs[x]) && !Object.keys(charErrs).some(x => charErrs[x]);\n  \n    // The user can log in and enter the secure user area by entering the email or username and password.\n    const onLoginBtnClick = e => {\n        e.preventDefault();\n        loginPost(state.loginName, state.password).then(data => {\n            switch (data) {\n                case 2:\n                    setState({\n                        ...state,\n                        showModal: true,\n                        modalClass: 'danger',\n                        modalTitle: 'Server Error',\n                        modalContent: <p>The server is not responding.</p>\n                    });\n                    break;\n                case 3:\n                    setState({\n                        ...state,\n                        showModal: true,\n                        modalClass: 'danger',\n                        modalTitle: 'Warning',\n                        modalContent: <p>The email does not exist.</p>\n                    });\n                    break;\n                case 4:\n                    setState({\n                        ...state,\n                        showModal: true,\n                        modalClass: 'danger',\n                        modalTitle: 'Warning',\n                        modalContent: <p>The username does not exist.</p>\n                    });\n                    break;\n                case 5:\n                    setState({\n                        ...state,\n                        showModal: true,\n                        modalClass: 'danger',\n                        modalTitle: 'Warning',\n                        modalContent: <p>The password is wrong.</p>\n                    });\n                    break;\n                case 6:\n                    setState({\n                        ...state,\n                        showModal: true,\n                        modalClass: 'danger',\n                        modalTitle: 'Warning',\n                        modalContent: <p>Please fill out correctly!</p>\n                    });\n                    break;\n                default:\n                    props.setUserAction(data);\n                    if (data.role === 'admin') {\n                        history.push('/user/admin');\n                    } else if (data.role === 'subadmin') {\n                        history.push('/user/subadmin');\n                    } else {\n                        history.push('/user/dashboard');\n                    }\n                    break;\n            }\n        }).catch(() => {\n            setState({\n                ...state,\n                showModal: true,\n                modalClass: 'danger',\n                modalTitle: 'Unkown Error',\n                modalContent: <p>The data cannot been sent.</p>\n            });\n        });\n    };\n\n/* ********************************************************* RETURN ********************************************************* */\n    return (\n        <Fragment>\n            <PopUpModal\n                className={state.modalClass}\n                title={state.modalTitle}\n                show={state.showModal} \n                close={() => setState({...state, showModal: false})} \n            >\n                {state.modalContent}\n            </PopUpModal>\n            <Container fluid={true} className=\"px-4 px-sm-5 px-md-0 pt-5 pb-0 mt-5\">\n                <Col xs=\"12\" sm={{size: 8, offset: 2}} lg={{size: 6, offset: 3}} xl={{size: 4, offset: 4}} className=\"px-0 px-md-auto\">\n                    <h1 className=\"text-trans mb-4 px-0\">Login</h1>\n                    <h5 className=\"text-trans mb-4 px-0\">\n                        Sign in to access your device management.\n                    </h5>\n                </Col>\n                <Form className=\"pb-md-0 pb-3\">\n                    <Col xs=\"12\" sm={{size: 8, offset: 2}} lg={{size: 6, offset: 3}} xl={{size: 4, offset: 4}} className=\"px-0 px-md-auto\">\n                        <FormGroup className=\"mb-1 text-left\">\n                            <Label className=\"w-100 h5 text-trans mb-2 ml-2\">Username / Email:</Label>\n                            <Input\n                                className={\"badge-pill bg-transparent \" + (markInpError('loginName') ? \"error\" : \"\")}\n                                type=\"text\"\n                                placeholder=\"Enter your username or email\"\n                                value={state.loginName}\n                                onChange={e => setState({...state, loginName: e.target.value})}\n                                onBlur={handleBlur('loginName')}\n                                required\n                            />\n                        </FormGroup>\n                        <p className=\"error mb-2 ml-2\">\n                            &nbsp;\n                            {\n                                state.loginName.trim() === ''\n                            ?\n                                markInpError('loginName') ? \"Please enter your user name or email.\" : \"\"\n                            :\n                                markCharError('loginName') ? \"Please enter a valid user name or email.\" : \"\"\n                            }\n                        </p>\n                    </Col>\n                    <Col xs=\"12\" sm={{size: 8, offset: 2}} lg={{size: 6, offset: 3}} xl={{size: 4, offset: 4}} className=\"px-0 px-md-auto\">\n                        <FormGroup className=\"mb-1 text-left\">\n                            <Row>\n                                <Col xs=\"4\" lg=\"6\">\n                                    <Label className=\"w-100 h5 text-trans mb-2 ml-2\">Password:</Label>\n                                </Col>\n                                <Col xs=\"8\" lg=\"6\" className=\"text-right\">\n                                    <span className=\"pr-2\">\n                                        Forgot your{' '}\n                                        <Link to=\"/password\" className=\"pr-1\">\n                                            Password\n                                        </Link>\n                                        ?\n                                    </span>\n                                </Col>\n                            </Row>\n                            <Input\n                                className={\"badge-pill bg-transparent \" + (markInpError('password') ? \"error\" : \"\")}\n                                type=\"password\"\n                                placeholder=\"Enter your password\"\n                                value={state.password}\n                                onChange={e => setState({...state, password: e.target.value})}\n                                onBlur={handleBlur('password')}\n                                required\n                            />\n                        </FormGroup>\n                        <p className=\"error mb-2 ml-2\">&nbsp;{markInpError('password') ? \"Please enter your password.\" : \"\"}</p>\n                    </Col>\n                    <Col xs=\"12\" sm={{size: 8, offset: 2}} lg={{size: 6, offset: 3}} xl={{size: 4, offset: 4}} className=\"px-0 px-md-auto\">\n                        <h5 className=\"mt-2\">\n                            Not registered?&nbsp;\n                            <Link to=\"/register\">Register</Link>\n                        </h5>\n                    </Col>\n                </Form>\n                <Col xs=\"12\" className=\"text-center text-trans\">\n                    <Button className=\"badge-pill btn-outline-light bg-transparent my-4\" onClick={onLoginBtnClick} disabled={!isEnabled}>\n                        Login\n                    </Button>\n                </Col>\n            </Container>\n        </Fragment>\n    );\n};\n\n/* ********************************************************* EXPORT ********************************************************* */\nexport default connect(null, {setUserAction, setSocketAction, setBackgroundColor5Action, setBackgroundColor1Action})(Login);\n","/* ********************************************************* IMPORT ********************************************************* */\n// react\nimport React, {useEffect} from 'react';\n// router dom\nimport {useHistory} from 'react-router-dom';\n// redux\nimport {connect} from 'react-redux';\nimport {setUserAction} from '../actions';\n// services\nimport {checkLoginPost} from '../services/api';\n\n/* ********************************************************* COMPONENT ********************************************************* */\nconst CheckLogin = props => {\n\n    const history = useHistory();\n\n    // Checks if the user is logged in and if there is a session. \n    // If so, the user is redirected to the secured component.\n    // If not, the user is brought back to the login area.\n    useEffect(() => {\n        checkLoginPost().then(data => {\n            if (data === 10) {\n                history.push('/login');\n            } else {\n                props.setUserAction(data);\n            }\n        }).catch(() => {\n            history.push('/login');\n        });\n    // eslint-disable-next-line\n    }, []);\n\n    if (props.user) {\n        return props.children;\n    } else {\n        return <div>Loading...</div>;\n    }\n};\n\n/* ********************************************************* MAP STATE TO PROPS ********************************************************* */\nconst mapStateToProps = state => {\n    return {user: state.user};\n};\n\n/* ********************************************************* EXPORT ********************************************************* */\nexport default connect(mapStateToProps, {setUserAction})(CheckLogin);","/* ********************************************************* IMPORT ********************************************************* */\n// react\nimport React, {useEffect} from 'react';\n// router dom\nimport {useParams, Link, useHistory} from 'react-router-dom';\n// services\nimport {verifyUserPost} from '../services/api';\n\n/* ********************************************************* COMPONENT ********************************************************* */\nconst UserVerification = () => {\n\n    // hooks\n    const params = useParams();\n    const history = useHistory();\n\n    // Changes the status of the user in the database to verified. \n    // If everything has worked, the user is taken to the login, otherwise to the register page.\n    useEffect(() => {\n        verifyUserPost(params.email).then(data => {\n            if (data !== 2) {\n                history.push('/login');\n            } else {\n                history.push('/register');\n            }\n        }).catch(() => {\n            history.push('/register');\n        });\n    // eslint-disable-next-line\n    }, []);\n\n/* ********************************************************* RETURN ********************************************************* */\n    return (\n            <div className=\"breadcrumb\">\n                <p>Thanks for registering!</p>\n                <div className=\"container\">\n                    <Link className=\"breadcrumb-item\" to=\"/login\">\n                        Login\n                    </Link>\n                </div>\n            </div>\n    );\n};\n\n/* ********************************************************* EXPORT ********************************************************* */\nexport default UserVerification;\n","/* ********************************************************* IMPORT ********************************************************* */\n// react\nimport React, {Fragment, useState} from 'react';\n// reactstrap\nimport {Container, Row, Col, Form, FormGroup, Label, Input, Button} from 'reactstrap';\n// components\nimport PopUpModal from './PopUpModal';\n// services\nimport {sendResetLinkPost} from '../services/api';\n\n/* ********************************************************* COMPONENT ********************************************************* */\nconst ForgotPassword = props => {\n\n    const initialState = {\n        email: '',\n        showModal: false,\n        modalClass: '',\n        modalTitle: '',\n        modalContent: null\n    };\n    const [state, setState] = useState(initialState);\n\n/* ********************************************************* SEND BUTTON ********************************************************* */\n    // The user can enter his email address in the field and press the send button \n    // to request an email with a link to reset his password.\n    const onSendBtnClick = e => {\n        e.preventDefault();\n        if (state.email.trim() === '') {\n            setState({\n                ...state,\n                showModal: true,\n                modalTitle: 'Entry Error',\n                modalContent: <p>Please enter your email</p>,\n                modalClass: 'bg-danger'\n            });\n        } else {\n            sendResetLinkPost(state.email.trim()).then(data => {\n                switch (data) {\n                    case 1:\n                        setState({\n                            ...state,\n                            showModal: true,\n                            modalTitle: 'Reset Email Sent',\n                            modalContent: <p>We have sent you a reset email,<br/>please check your emails!</p>,\n                            modalClass: 'bg-success'\n                        });\n                        break;\n                    case 2:\n                        setState({\n                            ...state,\n                            showModal: true,\n                            modalTitle: 'Server Error',\n                            modalContent: <p>There was a server error</p>,\n                            modalClass: 'bg-danger'\n                        });\n                        break;\n                    case 3:\n                        setState({\n                            ...state,\n                            showModal: true,\n                            modalTitle: 'Email Does Not Exist',\n                            modalContent: <p>The email you have used does not exist</p>,\n                            modalClass: 'bg-danger'\n                        });\n                        break;\n                    default:\n                        break;\n                }\n            }).catch(() => {\n                setState({\n                    ...state,\n                    showModal: true,\n                    modalTitle: 'Unknown Error',\n                    modalContent: <p>Can not send the data</p>,\n                    modalClass: 'bg-danger'\n                });\n            });\n        }\n    };\n\n/* ********************************************************* RETURN ********************************************************* */\n    return (\n        <Fragment>\n            <PopUpModal\n                className={state.modalClass} \n                title={state.modalTitle}            \n                show={state.showModal} \n                close={() => setState({...state, showModal: false})} \n            >\n                {state.modalContent}\n            </PopUpModal>\n            <Container className=\"pt-4 mt-5\">\n                <Col sm=\"12\" md={{size: 6, offset: 3}}>\n                    <h1 className=\"text-trans mb-4\">Password</h1>\n                    <p className=\"text-trans mb-4\">Forgot your password? Enter your email address to receive a link to reset it.</p>\n                </Col>\n                <Form className=\"pb-md-0 pb-5\">\n                    <Row>\n                        <Col sm=\"12\" md={{size: 6, offset: 3}}>\n                            <FormGroup className=\"mb-md-4 mb-3 text-left\">\n                                <Label className=\"w-100 h5 text-trans mb-2 ml-2\">Email:</Label>\n                                <Input\n                                    className=\"badge-pill bg-transparent\"\n                                    type=\"email\"\n                                    placeholder=\"Enter your email\"\n                                    required\n                                    onChange={e => setState({...state, email: e.target.value})}\n                                    value={state.email}\n                                />\n                            </FormGroup>\n                        </Col>\n                        <Col sm=\"12\" className=\"text-center text-trans\">\n                            <Button className=\"badge-pill btn-outline-light bg-transparent mt-4\" onClick={onSendBtnClick}>\n                                Send\n                            </Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </Container>\n        </Fragment>\n    );\n};\n\n/* ********************************************************* EXPORT ********************************************************* */\nexport default ForgotPassword;","/* ********************************************************* IMPORT ********************************************************* */\n// react\nimport React, {Fragment, useState} from 'react';\n// reactstrap\nimport {Container, Row, Col, Form, FormGroup, Label, Input, Button} from 'reactstrap';\n// router dom\nimport {useParams, Link} from 'react-router-dom';\n// components\nimport PopUpModal from './PopUpModal';\n// services\nimport {resetPasswordPost} from '../services/api';\n\n/* ********************************************************* COMPONENT ********************************************************* */\nconst ResetPassword = () => {\n\n    const params = useParams();\n\n    const initialState = {\n        password: '',\n        repassword: '',\n        showModal: false,\n        modalTitle: '',\n        modalContent: null\n    };\n    const [state, setState] = useState(initialState);\n\n/* ********************************************************* SET NEW PASSWORD ********************************************************* */\n    // If the user has indicated on the page that he has forgotten his password, he will receive an email with a link. \n    // Here he can enter a new password and use his account again.\n    const onConfirmBtnClick = e => {\n        e.preventDefault();\n        if (state.password !== state.repassword || state.password.trim() === '') {\n            const modalContentElement = (\n                <ul>\n                    {state.password.trim() === '' && <li>Please enter a password</li>}\n                    {state.password !== state.repassword && <li>Passwords do not match</li>}\n                </ul>\n            );\n            setState({\n                ...state,\n                showModal: true,\n                modalContent: modalContentElement,\n                modalTitle: 'Entry Error'\n            });\n        } else {\n            resetPasswordPost(params.email, params.id, state.password).then(data => {\n                switch (data) {\n                    case 1:\n                        setState({\n                            ...state,\n                            showModal: true,\n                            modalContent: (\n                                <p> \n                                    We have reset your password.<br/>\n                                    Just log in <Link className=\"pr-1\" to=\"/login\">here</Link>!\n                                </p>\n                            ),\n                            modalTitle: 'Password Was Successfully Changed'\n                        });\n                        break;\n                    case 2:\n                        setState({\n                            ...state,\n                            showModal: true,\n                            modalContent: <p>There was a server error</p>,\n                            modalTitle: 'Server Error'\n                        });\n                        break;\n                    case 3:\n                        setState({\n                            ...state,\n                            showModal: true,\n                            modalContent: <p>The email you have used does not exist</p>,\n                            modalTitle: 'Email Does Not Exist'\n                        });\n                        break;\n                    default:\n                        break;\n                }\n            }).catch(() => {\n                setState({\n                    ...state,\n                    showModal: true,\n                    modalContent: <p>Can not send the data</p>,\n                    modalTitle: 'Unknown Error'\n                });\n            });\n        }\n    };\n\n/* ********************************************************* RETURN ********************************************************* */\n    return (\n        <Fragment>\n            <PopUpModal \n                className=\"bg-danger\" \n                title={state.modalTitle}            \n                show={state.showModal} \n                close={() => setState({...state, showModal: false})} \n            >\n                {state.modalContent}\n            </PopUpModal>\n            <Container>\n                <h1 className=\"text-trans mb-4\">Reset Password</h1><br />\n                <p className=\"text-trans mb-4\">Please enter your new password.</p><br />\n                <Form className=\"text-center pb-md-0 pb-5\">\n                    <Row>\n                        <FormGroup>\n                            <Col>\n                                <Label className=\"w-100 h5 text-trans mb-2 ml-2\">Password:</Label>\n                                <Input\n                                    className=\"badge-pill bg-transparent\"\n                                    type=\"password\"\n                                    placeholder=\"Enter your new password\"\n                                    required\n                                    onChange={e => setState({...state, password: e.target.value})}\n                                    value={state.password}\n                                />\n                                <span className=\"required-star\">*</span>\n                            </Col>\n                            <Col>\n                                <Label className=\"w-100 h5 text-trans mb-2 ml-2\">Repeat Password:</Label>\n                                <Input\n                                    className=\"badge-pill bg-transparent\"\n                                    type=\"password\"\n                                    placeholder=\"Repeat your new password\"\n                                    required\n                                    onChange={e => setState({...state, repassword: e.target.value})}\n                                    value={state.repassword}\n                                />\n                                <span className=\"required-star\">*</span>\n                            </Col>\n                        </FormGroup>\n                        <Col>\n                            <Button className=\"badge-pill btn-outline-light bg-transparent mt-8\" onClick={onConfirmBtnClick}>\n                                Confirm\n                            </Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </Container>\n        </Fragment>\n    );\n};\n\n/* ********************************************************* EXPORT ********************************************************* */\nexport default ResetPassword;\n","/* ********************************************************* IMPORT ********************************************************* */\nimport React from 'react';\nimport {Button, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\n\n/* ********************************************************* COMPONENT ********************************************************* */\n// Is used to let the user confirm an action once again in the form of a modal. \n// For example, if something is to be irrevocably deleted, the user must press the delete button again. \n// At this point, the user can also cancel the action.\nconst ConfirmModal = props => {\n    return (\n        <Modal isOpen={props.show} toggle={props.close}>\n            <ModalHeader toggle={props.close} className={props.className}>\n                {props.title}\n            </ModalHeader>\n            <ModalBody className=\"text-dark\">{props.children}</ModalBody>\n            <ModalFooter>\n                <Button color=\"danger\" onClick={props.delete}>\n                    Delete\n                </Button>{' '}\n                <Button color=\"secondary\" onClick={props.close}>\n                    Cancel\n                </Button>\n            </ModalFooter>\n        </Modal>\n    );\n}\n\n/* ********************************************************* EXPORT ********************************************************* */\nexport default ConfirmModal;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null);\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"current\",\n  strokeWidth: 10,\n  strokeMiterlimit: 10,\n  d: \"M186.86,97.451c0-15.922-12.099-29.02-27.604-30.6 c0.24-1.553,0.367-3.144,0.367-4.763c0-16.99-13.772-30.763-30.762-30.763c-4.478,0-8.725,0.964-12.561,2.684 C110.217,17.096,94.038,5,75.031,5C50.813,5,31.18,24.634,31.18,48.852c0,6.362,1.365,12.401,3.804,17.857 C18.354,67.125,5,80.724,5,97.451c0,16.989,13.771,30.763,30.762,30.763h123.862v-0.207 C174.953,126.257,186.86,113.248,186.86,97.451z\"\n});\n\nvar SvgHumidity = function SvgHumidity(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    x: \"0px\",\n    y: \"0px\",\n    width: \"192px\",\n    height: \"133px\",\n    viewBox: \"0 0 192 133\",\n    enableBackground: \"new 0 0 192 133\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgHumidity, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/humidity.601237b6.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null);\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 38.347,\n  y: 76.587,\n  width: 13.248,\n  height: 73.131\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 44.971,\n  cy: 76.587,\n  r: 6.624\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"circle\", {\n  fill: \"#333333\",\n  cx: 44.612,\n  cy: 142.676,\n  r: 23.74\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"current\",\n  strokeWidth: 10,\n  strokeMiterlimit: 10,\n  d: \"M44.971,182.288 C22.931,182.288,5,164.357,5,142.317c0-13.751,6.851-26.244,18.383-33.643V26.587C23.383,14.684,33.067,5,44.971,5 s21.588,9.684,21.588,21.587v82.087c11.532,7.399,18.383,19.891,18.383,33.643C84.941,164.357,67.011,182.288,44.971,182.288z\"\n});\n\nvar SvgTemperature = function SvgTemperature(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    x: \"0px\",\n    y: \"0px\",\n    width: \"90px\",\n    height: \"187px\",\n    viewBox: \"0 0 90 187\",\n    enableBackground: \"new 0 0 90 187\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgTemperature, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/temperature.2e43ff82.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null);\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"current\",\n  strokeWidth: 10,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  strokeMiterlimit: 10,\n  d: \" M95.615,104.155L53,5h-0.136L9.66,105.58h0.004C6.676,111.837,5,118.841,5,126.237c0,26.509,21.491,48,48,48c26.51,0,48-21.49,48-48 C101,118.272,99.049,110.768,95.615,104.155z\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"current\",\n  strokeWidth: 14,\n  strokeLinecap: \"round\",\n  strokeMiterlimit: 10,\n  d: \"M54,149.944 c-11.246,0-25.188-13.944-25.188-25.188\"\n});\n\nvar SvgSoilMoisture = function SvgSoilMoisture(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    x: \"0px\",\n    y: \"0px\",\n    width: \"106px\",\n    height: \"179px\",\n    viewBox: \"0 0 106 179\",\n    enableBackground: \"new 0 0 106 179\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgSoilMoisture, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/soil_moisture.789665d3.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null);\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"current\",\n  strokeWidth: 10,\n  strokeMiterlimit: 10,\n  d: \"M90.744,94.965C101.336,85.533,108,71.799,108,56.5 C108,28.057,84.943,5,56.5,5C28.058,5,5,28.057,5,56.5c0,15.299,6.665,29.033,17.257,38.465c8.422,7.865,12.849,10.04,12.849,28.037 v14.743H56.5c0.001,0,21.396,0,21.396,0v-14.743C77.896,105.005,82.322,102.83,90.744,94.965z\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"current\",\n  strokeWidth: 10,\n  strokeMiterlimit: 10,\n  d: \"M56.359,149.206h21.832c0,0-0.171,19.168-8,25.531 H56.359H42.527c-7.829-6.362-8-25.531-8-25.531H56.359z\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"line\", {\n  fill: \"none\",\n  stroke: \"current\",\n  strokeWidth: 10,\n  strokeMiterlimit: 10,\n  x1: 36.47,\n  y1: 163.538,\n  x2: 76.249,\n  y2: 163.538\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#FFFFFF\",\n  stroke: \"current\",\n  strokeWidth: 15,\n  strokeLinecap: \"round\",\n  strokeMiterlimit: 10,\n  d: \"M28.729,56.847 c0.817-14.983,12.699-27.022,27.615-28.088\"\n});\n\nvar SvgLight = function SvgLight(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    x: \"0px\",\n    y: \"0px\",\n    width: \"113px\",\n    height: \"180px\",\n    viewBox: \"0 0 113 180\",\n    enableBackground: \"new 0 0 113 180\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLight, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/light.111b5743.svg\";\nexport { ForwardRef as ReactComponent };","/* ********************************************************* IMPORT ********************************************************* */\n// react\nimport React, {Fragment} from 'react';\n// reactstrap\nimport {Table} from 'reactstrap';\n// icons\nimport { ReactComponent as Humidity } from '../../imgs/humidity.svg';\nimport { ReactComponent as Temperature } from '../../imgs/temperature.svg';\nimport { ReactComponent as Moisture } from '../../imgs/soil_moisture.svg';\nimport { ReactComponent as Light } from '../../imgs/light.svg';\n\n/* ********************************************************* COMPONENT ********************************************************* */\nconst MonitorAll = props => {\n\n    return (\n        <Fragment>\n            <h3 className=\"text-center\">kitchen</h3>\n            <Table style={{tableLayout: \"fixed\"}} borderless size=\"sm\" className=\"mb-4\">\n                <thead>\n                    <tr>\n                        <th className=\"align-bottom text-uppercase\">Devices</th>\n                        <th className=\"align-top\">\n                            <Temperature width='1rem' height='1.2rem' stroke='#241B12' className=\"temperature\" />\n                        </th>\n                        <th className=\"align-top\">\n                            <Humidity width='1.4rem' height='1.1rem' stroke='#241B12' className=\"humidity\" />\n                        </th>\n                        <th className=\"align-top\">\n                            <Moisture width='0.8rem' height='1.2rem' stroke='#241B12' className=\"moisture\" />\n                        </th>\n                        <th className=\"align-top\">\n                            <Light width='1rem' height='1.2rem' stroke='#241B12' className=\"light\" />\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <th scope=\"row\">herbs</th>\n                        <td></td>\n                        <td></td>\n                        <td>51%</td>\n                        <td></td>\n                    </tr>\n                </tbody>\n            </Table>\n            <h3 className=\"text-center\">home office</h3>\n            <Table style={{tableLayout: \"fixed\"}} borderless size=\"sm\" className=\"mb-4\">\n                <thead>\n                    <tr>\n                        <th className=\"align-bottom text-uppercase\">Devices</th>\n                        <th className=\"align-top\">\n                            <Temperature width='1rem' height='1.2rem' stroke='#241B12' className=\"temperature\" />\n                        </th>\n                        <th className=\"align-top\">\n                            <Humidity width='1.4rem' height='1.1rem' stroke='#241B12' className=\"humidity\" />\n                        </th>\n                        <th className=\"align-top\">\n                            <Moisture width='0.8rem' height='1.2rem' stroke='#241B12' className=\"moisture\" />\n                        </th>\n                        <th className=\"align-top\">\n                            <Light width='1rem' height='1.2rem' stroke='#241B12' className=\"light\" />\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <th scope=\"row\">cactus</th>\n                        <td>21°</td>\n                        <td>54%</td>\n                        <td>37%</td>\n                        <td>52%</td>\n                    </tr>\n                </tbody>\n            </Table>\n            <h3 className=\"text-center\">garden</h3>\n            <Table style={{tableLayout: \"fixed\"}} borderless size=\"sm\" className=\"mb-4\">\n                <thead>\n                    <tr>\n                        <th className=\"align-bottom text-uppercase\">Devices</th>\n                        <th className=\"align-top\">\n                            <Temperature width='1rem' height='1.2rem' stroke='#241B12' className=\"temperature\" />\n                        </th>\n                        <th className=\"align-top\">\n                            <Humidity width='1.4rem' height='1.1rem' stroke='#241B12' className=\"humidity\" />\n                        </th>\n                        <th className=\"align-top\">\n                            <Moisture width='0.8rem' height='1.2rem' stroke='#241B12' className=\"moisture\" />\n                        </th>\n                        <th className=\"align-top\">\n                            <Light width='1rem' height='1.2rem' stroke='#241B12' className=\"light\" />\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <th scope=\"row\">tomatoes</th>\n                        <td>17°</td>\n                        <td>39%</td>\n                        <td>62%</td>\n                        <td>71%</td>\n                    </tr>\n                </tbody>\n            </Table>\n            <h3 className=\"text-center\">balcony</h3>\n            <Table style={{tableLayout: \"fixed\"}} borderless size=\"sm\" className=\"mb-4\">\n                <thead>\n                    <tr>\n                        <th className=\"align-bottom text-uppercase\">Devices</th>\n                        <th className=\"align-top\">\n                            <Temperature width='1rem' height='1.2rem' stroke='#241B12' className=\"temperature\" />\n                        </th>\n                        <th className=\"align-top\">\n                            <Humidity width='1.4rem' height='1.1rem' stroke='#241B12' className=\"humidity\" />\n                        </th>\n                        <th className=\"align-top\">\n                            <Moisture width='0.8rem' height='1.2rem' stroke='#241B12' className=\"moisture\" />\n                        </th>\n                        <th className=\"align-top\">\n                            <Light width='1rem' height='1.2rem' stroke='#241B12' className=\"light\" />\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <th scope=\"row\">palm</th>\n                        <td></td>\n                        <td></td>\n                        <td>54%</td>\n                        <td></td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\">lavender</th>\n                        <td></td>\n                        <td></td>\n                        <td>58%</td>\n                        <td></td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\">fuchsias</th>\n                        <td></td>\n                        <td></td>\n                        <td>48%</td>\n                        <td></td>\n                    </tr>\n                </tbody>\n            </Table>\n        </Fragment>\n    )    \n}\n\n/* ********************************************************* EXPORT ********************************************************* */\nexport default MonitorAll;\n","/* ********************************************************* IMPORT ********************************************************* */\nimport React from 'react';\nimport Chart from 'chart.js';\n\n/* ******************************************************** CHART STYLE OPTIONS ********************************************************* */\nChart.defaults.global.defaultFontFamily = \"Ubuntu\";\nChart.defaults.global.legend.display = false;\nChart.defaults.global.defaultFontColor = 'white';\n\n/* ******************************************************** COMPONENT ********************************************************* */\n// Generates a line chart, which in our case is used to display the daily average values \n// of the sensors for soil moisture and light intensity.\nclass LineChart extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            fontsize: null\n        }\n        this.chartRef = React.createRef();\n    }\n\n    // get timestamp for labels and dataset from props\n    componentDidUpdate() {\n        this.myChart.data.labels = this.props.data.map(d => d.time);\n        this.myChart.data.datasets[0].data = this.props.data.map(d => d.value);\n        this.myChart.update();\n    }\n\n    componentDidMount() {\n        // get canvas\n        const myChartRef = this.chartRef.current.getContext(\"2d\");\n        // const {height: graphHeight} = myChartRef.canvas;\n        // set gradient line\n        let gradientLine = myChartRef.createLinearGradient(0, this.props.min, 0, this.props.max);\n        gradientLine.addColorStop(0, \"rgb(255, 0, 0)\");\n        gradientLine.addColorStop(.2, \"rgb(0, 122, 167)\");\n        gradientLine.addColorStop(.8, \"rgb(0, 122, 167)\");\n        gradientLine.addColorStop(1, \"rgb(255, 0, 0)\");\n        // create chart\n        this.myChart = new Chart(myChartRef, {\n            type: 'line',\n            options: {\n                scales: {\n                    xAxes: [\n                        {\n                            ticks: {\n                                min: 0,\n                                padding: 10,\n                                fontSize: this.props.chartData.fontSize,\n                                fontColor: 'rgb(29, 44, 34)'\n\n                            },\n                            type: 'time',\n                            time: {\n                                unit: 'day'\n                            },\n                            gridLines: {\n                                color: 'rgba(29, 44, 34, .3)'\n                            },\n                            drawBorder: true,\n                            borderWidth: .5\n                        }\n                    ],\n                    yAxes: [\n                        {\n                            ticks: {\n                                min: 0,\n                                padding: 10,\n                                fontSize: this.props.chartData.fontSize,\n                                fontColor: 'rgb(29, 44, 34)'\n                            },\n                            gridLines: {\n                                color: 'rgba(29, 44, 34, .3)'\n                            },\n                            borderWidth: .5\n                        }\n                    ]\n                }\n            },\n            data: {\n                labels: this.props.data.map(d => d.time),\n                datasets: [{\n                    label: this.props.title,\n                    data: this.props.data.map(d => d.value),\n                    fill: 'none',\n                    backgroundColor: 0,\n                    pointRadius: this.props.chartData.pointRadius,\n                    borderColor: gradientLine,\n                    borderWidth: 1,\n                    lineTension: 0\n                }]\n            },\n            plugins: {\n                indexlabels: {\n                    fontSize: function (context) {\n                        var width = context.chart.width;\n                        var size = Math.round(width / 32);\n                        return {\n                            size: size\n                        };\n                    }\n                }\n            }\n        });\n    }\n\n/* ******************************************************** RENDER ********************************************************* */\n    render() {\n        return (\n            <div className=\"lineGraph\">\n                <canvas ref={this.chartRef} />\n            </div>\n        );\n    }\n}\n\n/* ********************************************************* EXPORT ********************************************************* */\nexport default LineChart;","/* ******************************************************* PRODUCT REGISTRATION ******************************************************* */\nexport const checkHubNumPost = hubNum => {\n    return new Promise((resolve, reject) => {\n        fetch('/user/checkhubnum', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({hubNum})\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(data => {\n                    resolve(data);\n                }).catch(err => {\n                    reject(err);\n                });\n            } else {\n                reject(new Error('Can not send data to server. Response number: ' + response.status));\n            }\n        }).catch(err => {\n            reject(err);\n        });\n    });\n};\n\nexport const checkDeviceNumPost = deviceNum => {\n    return new Promise((resolve, reject) => {\n        fetch('/user/checkdevicenum', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({deviceNum})\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(data => {\n                    resolve(data);\n                }).catch(err => {\n                    reject(err);\n                });\n            } else {\n                reject(new Error('Can not send data to server. Response number: ' + response.status));\n            }\n        }).catch(err => {\n            reject(err);\n        });\n    });\n};\n\nexport const addHubPost = (hubName, hubNum) => {\n    return new Promise((resolve, reject) => {\n        fetch('/user/addhub', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({hubName, hubNum})\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(data => {\n                    resolve(data);\n                }).catch(err => {\n                    reject(err);\n                });\n            } else {\n                reject(new Error('Can not send data to server. Response number: ' + response.status));\n            }\n        }).catch(err => {\n            reject(err);\n        });\n    });\n};\n\nexport const addDevicePost = (deviceName, deviceNum, hubID) => {\n    return new Promise((resolve, reject) => {\n        fetch('/user/adddevice', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({deviceName, deviceNum, hubID})\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(data => {\n                    resolve(data);\n                }).catch(err => {\n                    reject(err);\n                });\n            } else {\n                reject(new Error('Can not send data to server. Response number: ' + response.status));\n            }\n        }).catch(err => {\n            reject(err);\n        });\n    });\n};\n\n/* ******************************************************* GET PRODUCTS ******************************************************* */\nexport const getHubsPost = () => {\n    return new Promise((resolve, reject) => {\n        fetch('/user/gethubs', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(data => {\n                    resolve(data);\n                }).catch(err => {\n                    reject(err);\n                });\n            } else {\n                reject(new Error('Can not send data to server. Response number: ' + response.status));\n            }\n        }).catch(err => {\n            reject(err);\n        });\n    });\n};\n\nexport const getDevicesPost = () => {\n    return new Promise((resolve, reject) => {\n        fetch('/user/getdevices', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(data => {\n                    resolve(data);\n                }).catch(err => {\n                    reject(err);\n                });\n            } else {\n                reject(new Error('Can not send data to server. Response number: ' + response.status));\n            }\n        }).catch(err => {\n            reject(err);\n        });\n    });\n};\n\n/* ******************************************************* DELETE PRODUCTS ******************************************************* */\nexport const deleteHubPost = hubID => {\n    return new Promise((resolve, reject) => {\n        fetch('/user/deletehub', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({hubID})\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(data => {\n                    resolve(data);\n                }).catch(err => {\n                    reject(err);\n                });\n            } else {\n                reject(new Error('Can not send data to server. Response number: ' + response.status));\n            }\n        }).catch(err => {\n            reject(err);\n        });\n    });\n};\n\nexport const deleteDevicePost = deviceID => {\n    return new Promise((resolve, reject) => {\n        fetch('/user/deletedevice', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({deviceID})\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(data => {\n                    resolve(data);\n                }).catch(err => {\n                    reject(err);\n                });\n            } else {\n                reject(new Error('Can not send data to server. Response number: ' + response.status));\n            }\n        }).catch(err => {\n            reject(err);\n        });\n    });\n};\n\n/* ******************************************************* CONTROL WATER PUMP ******************************************************* */\nexport const deviceOnOffPost = (deviceSN, deviceStatus) => {\n    return new Promise((resolve, reject) => {\n        fetch('/user/deviceonoff', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({deviceSN, deviceStatus})\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(data => {\n                    resolve(data);\n                }).catch(err => {\n                    reject(err);\n                });\n            } else {\n                reject(new Error('Can not send data to server. Response number: ' + response.status));\n            }\n        }).catch(err => {\n            reject(err);\n        });\n    });\n};\n\nexport const saveRangesPost = (inputRangeTime, inputRangeDuration, deviceSn, soilMoistureDevice) => {\n    return new Promise((resolve, reject) => {\n        fetch('/user/saveranges', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({inputRangeTime, inputRangeDuration, deviceSn, soilMoistureDevice})\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(data => {\n                    resolve(data);\n                }).catch(err => {\n                    reject(err);\n                });\n            } else {\n                reject(new Error('Can not send data to server. Response number: ' + response.status));\n            }\n        }).catch(err => {\n            reject(err);\n        });\n    });\n};\n\n/* ******************************************************* GET SENSOR DATA ******************************************************* */\nexport const deviceMoistureDataPost = (deviceID) => {\n    return new Promise((resolve, reject) => {\n        fetch('/user/devicemoisturedata', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({deviceID})\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(data => {\n                    resolve(data);\n                }).catch(err => {\n                    reject(err);\n                });\n            } else {\n                reject(new Error('Can not send data to server. Response number: ' + response.status));\n            }\n        }).catch(err => {\n            reject(err);\n        });\n    });\n};\n\nexport const deviceTempHumDataPost = (deviceID) => {\n    return new Promise((resolve, reject) => {\n        fetch('/user/devicetemphumdata', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({deviceID})\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(data => {\n                    resolve(data);\n                }).catch(err => {\n                    reject(err);\n                });\n            } else {\n                reject(new Error('Can not send data to server. Response number: ' + response.status));\n            }\n        }).catch(err => {\n            reject(err);\n        });\n    });\n};\n\nexport const deviceLightDataPost = (deviceID) => {\n    return new Promise((resolve, reject) => {\n        fetch('/user/devicelightdata', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({deviceID})\n        }).then(response => {\n            if (response.status === 200) {\n                response.json().then(data => {\n                    resolve(data);\n                }).catch(err => {\n                    reject(err);\n                });\n            } else {\n                reject(new Error('Can not send data to server. Response number: ' + response.status));\n            }\n        }).catch(err => {\n            reject(err);\n        });\n    });\n};\n","export const capitalizeName = name => {\n    if (name.search(' ') > -1) {\n        let newName = '';\n        let arr = name.trim().split(' ');\n        for (let i = 0; i < arr.length; i++) {\n            newName += arr[i].charAt(0).toUpperCase() + arr[i].slice(1) + ' ';   \n        }\n        return newName;\n    } else {\n        return name.trim().charAt(0).toUpperCase() + name.slice(1);\n    }\n};","/* ********************************************************* IMPORT ********************************************************* */\n// react\nimport React, {Fragment, Component} from 'react';\n// reactstrap\nimport {Table} from 'reactstrap';\n// components\nimport LineChart from '../LineChart';\n// services\nimport {deviceMoistureDataPost} from '../../services/productsApi';\nimport {capitalizeName} from '../../services/capitalizeName';\n// icons\nimport { ReactComponent as Moisture } from '../../imgs/soil_moisture.svg';\n\n/* ********************************************************* COMPONENT ********************************************************* */\nclass MonitorSoil extends Component {\n\n    state = {\n        data: [],\n        deviceID: null\n    };\n    \n    componentDidMount() {\n        deviceMoistureDataPost(this.props.device.id).then(results => {\n            const data = results.map(result => {return {value : Number(result.value), time: new Date(result.time)}});\n            this.setState({data: data, deviceID: this.props.device.id});\n        });\n    };\n    componentDidUpdate() {\n        if(this.props.device.id !== this.state.deviceID) {\n            deviceMoistureDataPost(this.props.device.id).then(results => {\n                const data = results.map(result => {return {value : Number(result.value), time: new Date(result.time)}});\n                this.setState({data: data, deviceID: this.props.device.id});\n            });  \n        };\n    };\n\n/* ********************************************************* RENDER ********************************************************* */\n    render() {\n        let chart = null;\n        if (this.state.data.length) {\n            chart = (\n                <LineChart\n                    data={this.state.data}\n                    title={this.props.device.name}\n                    color=\"rgb(0, 168, 230)\"\n                    min=\"10\"\n                    max=\"200\"\n                    chartData={this.props.chartData}\n                />\n            );\n        };\n        return (\n            <Fragment>\n                <h3 className=\"text-center\">{this.props.hub.name}</h3>\n                <Table borderless size=\"sm\" className=\"mb-5\">\n                    <thead>\n                        <tr>\n                            <th className=\"align-bottom text-uppercase\">{this.props.device.name}</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">\n                                {capitalizeName(this.props.device.device_name)}\n                                <Moisture width='0.8rem' height='1.2rem' stroke='#241B12' className=\"moisture ml-2\" />\n                            </th>\n                            <td>\n                                {this.props.device.connected\n                                    ? this.props.data[0]\n                                        ? this.props.data[0] + '%'\n                                        : 'loading'\n                                    : 'not connected'}\n                            </td>\n                        </tr>\n                    </tbody>\n                </Table>\n                {chart}\n            </Fragment>\n        );\n    };\n};\n\n/* ********************************************************* EXPORT ********************************************************* */\nexport default MonitorSoil;\n","/* ********************************************************* IMPORT ********************************************************* */\n// react\nimport React, {Fragment, Component} from 'react';\n// reactstrap\nimport {\n    Input,\n    Label,\n    Table,\n    // Button,\n    FormGroup,\n    CustomInput\n} from 'reactstrap';\n// service\nimport {capitalizeName} from '../../services/capitalizeName';\n\n/* ********************************************************* COMPONENT ********************************************************* */\nclass MonitorWater extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputRangeTime: this.props.device.water_time,\n            inputRangeDuration: this.props.device.water_duration,\n            soilMoistureDevice: this.props.device.moisture_device_id,\n            deviceID: null\n        };\n        this.rangeStatusMinRef = React.createRef();\n        this.rangeStatusMaxRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.rangeStatusMinRef.current.style.setProperty('--thumb-input', this.state.inputRangeTime);\n        this.rangeStatusMinRef.current.style.setProperty('--output-width', this.rangeStatusMinRef.current.offsetWidth + \"px\");\n        this.rangeStatusMaxRef.current.style.setProperty('--thumb-input', this.state.inputRangeDuration);\n        this.rangeStatusMaxRef.current.style.setProperty('--output-width', this.rangeStatusMaxRef.current.offsetWidth + \"px\");\n        this.setState({\n            deviceID: this.props.device.id,\n            inputRangeTime: this.props.device.water_time,\n            inputRangeDuration: this.props.device.water_duration,\n            soilMoistureDevice: this.props.device.moisture_device_id,\n        });     \n    }\n    componentDidUpdate() {\n        if(this.props.device.id !== this.state.deviceID) {\n            this.rangeStatusMinRef.current.style.setProperty('--thumb-input', this.props.device.water_time);\n            this.rangeStatusMinRef.current.style.setProperty('--output-width', this.rangeStatusMinRef.current.offsetWidth + \"px\");\n            this.rangeStatusMaxRef.current.style.setProperty('--thumb-input', this.props.device.water_duration);\n            this.rangeStatusMaxRef.current.style.setProperty('--output-width', this.rangeStatusMaxRef.current.offsetWidth + \"px\");  \n            this.setState({\n                deviceID: this.props.device.id,\n                inputRangeTime: this.props.device.water_time,\n                inputRangeDuration: this.props.device.water_duration,\n                soilMoistureDevice: this.props.device.moisture_device_id,\n            }); \n        }\n    }\n\n/* ********************************************************* EVENTS ********************************************************* */\n    onBtnInputRangeTime = (e, output) => {\n        e.preventDefault();\n        // output of current value\n        output.current.innerText = e.target.value;\n        this.setState({ inputRangeTime: e.target.value });\n        // send current properties to css\n        output.current.style.setProperty('--thumb-input', e.target.value);\n        output.current.style.setProperty('--output-width', output.current.offsetWidth + \"px\");\n    }\n    onBtnInputRangeDuration = (e, output) => {\n        e.preventDefault();\n        // output of current value\n        output.current.innerText = e.target.value;\n        this.setState({ inputRangeDuration: e.target.value });\n        // send current properties to css\n        output.current.style.setProperty('--thumb-input', e.target.value);\n        output.current.style.setProperty('--output-width', output.current.offsetWidth + \"px\");\n    }\n    onSoilMoistureSelect = e => {\n        e.preventDefault();\n        this.setState({soilMoistureDevice: e.target.value});\n    }\n\n/* ********************************************************* RENDER ********************************************************* */\n    render() {\n        let options = null;\n        if(this.props.devices){\n            const soilMoistureDevices = this.props.devices.filter(device => device.hub_id === this.props.device.hub_id && device.type_id === 1)\n            options = soilMoistureDevices.map(device => {\n                return (\n                    <option value={device.id} key={device.id}>{device.name}</option>\n                )\n            })\n        }\n        return (\n            <Fragment>\n                <h3 className=\"text-center\">{this.props.hub.name}</h3>\n                <Table borderless size=\"sm\" className=\"mb-4\">\n                    <thead>\n                        <tr>                            \n                            <th className=\"align-bottom text-uppercase\">{this.props.device.name}</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">{capitalizeName(this.props.device.device_name)}</th>\n                        </tr>\n                    </tbody>\n                </Table>\n                {/* on off button */}\n                <div className=\"d-flex align-items-center\">\n                    <label className=\"switch\">\n                        <input type=\"checkbox\" checked={this.props.device.status} onChange={this.props.statusChange} />\n                        <span className=\"slider round\"></span>\n                    </label>\n                    <span className=\"ml-3\">waterpump: {this.props.device.status ? 'ON' : 'OFF'}</span>\n                </div>\n                {/* soil moisture selector */}\n                <FormGroup>\n                    {/* <Label for=\"soilMoistureSelect\">soil moisture modules:</Label> */}\n                    <CustomInput type=\"select\" id=\"soilMoistureSelect\" name=\"soilMoistureSelect\" onChange={this.onSoilMoistureSelect} value={this.state.soilMoistureDevice ? this.state.soilMoistureDevice : ''}>\n                        <option value=\"\">select your module</option>\n                        {options}\n                    </CustomInput>\n                </FormGroup>\n                {/* range time */}\n                <div className=\"range mt-2 min\">\n                    <Label for=\"rangeInput\">time of watering: soil moisture &#60; {this.state.inputRangeTime}%</Label>\n                    <output ref={this.rangeStatusMinRef} name=\"amount\" id=\"amount\" htmlFor=\"rangeInput\">{this.state.inputRangeTime}</output>\n                    <div>\n                        <Input\n                            type=\"range\"\n                            id=\"rangeInput\"\n                            name=\"rangeInput\"\n                            min=\"0\"\n                            max=\"100\"\n                            value={this.state.inputRangeTime}\n                            onChange={e => this.onBtnInputRangeTime(e, this.rangeStatusMinRef)}\n                        />\n                    </div>\n                    <output>100</output>\n                </div>\n                {/* range duration */}\n                <div className=\"range mt-2 max\">\n                    <Label for=\"rangeInput\">duration of watering: {this.state.inputRangeDuration}s</Label>\n                    <output ref={this.rangeStatusMaxRef} name=\"amount\" id=\"amount\" htmlFor=\"rangeInput\">{this.state.inputRangeDuration}</output>\n                    <div>\n                        <Input\n                            type=\"range\"\n                            id=\"rangeInput\"\n                            name=\"rangeInput\"\n                            min=\"0\"\n                            max=\"100\"\n                            value={this.state.inputRangeDuration}\n                            onChange={e => this.onBtnInputRangeDuration(e, this.rangeStatusMaxRef)}\n                        />\n                    </div>\n                    <output>100</output>\n                </div>\n                {/* save button */}\n                {/* <Button\n                    outline color=\"secondary\"\n                    onClick={e => this.props.save(e, this.state.inputRangeTime, this.state.inputRangeDuration, this.state.soilMoistureDevice)}\n                >\n                    save\n                </Button> */}\n            </Fragment>\n        )\n    }\n};\n\n/* ********************************************************* EXPORT ********************************************************* */\nexport default MonitorWater;","/* ********************************************************* IMPORT ********************************************************* */\nimport React from 'react';\nimport Chart from 'chart.js';\n\n/* ******************************************************** CHART STYLE OPTIONS ********************************************************* */\nChart.defaults.global.defaultFontFamily = \"Ubuntu\";\nChart.defaults.global.legend.display = false;\nChart.defaults.global.defaultFontColor = 'white';\n\n/* ******************************************************** COMPONENT ********************************************************* */\n// Generates a multiple line chart, which in our case is used to display the daily average values \n// of the sensors for temperature and humidity at the same time.\nclass LineChartMultiple extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.chartRef = React.createRef();\n    }\n\n    componentDidMount() {\n        // get canvas\n        const myChartRef = this.chartRef.current.getContext(\"2d\");\n        // set gradient line\n        let gradientLine = myChartRef.createLinearGradient(0, 0, 0, 100);\n        gradientLine.addColorStop(0, \"rgb(255, 0, 0)\");\n        gradientLine.addColorStop(.2, \"rgb(0, 168, 230)\");\n        gradientLine.addColorStop(.8, \"rgb(0, 168, 230)\");\n        gradientLine.addColorStop(1, \"rgb(255, 0, 0)\");\n        const hData = this.props.data[0].map(d => d.value);\n        const tData = this.props.data[1].map(d => d.value);\n        this.myChart = new Chart(myChartRef, {\n            type: 'line',\n            options: {\n                scales: {\n                    xAxes: [\n                        {\n                            ticks: {\n                                min: 0,\n                                padding: 10,\n                                fontSize: this.props.chartData.fontSize,\n                                fontColor: 'rgb(29, 44, 34)'\n                            },\n                            type: 'time',\n                            time: {\n                                unit: 'day'\n                            },\n                            gridLines: {\n                                color: 'rgba(29, 44, 34, .3)'\n                            },\n                            drawBorder: true,\n                            borderWidth: .5\n                        }\n                    ],\n                    yAxes: [\n                        {\n                            ticks: {\n                                min: 0,\n                                padding: 10,\n                                fontSize: this.props.chartData.fontSize,\n                                fontColor: 'rgb(29, 44, 34)'\n                            },\n                            gridLines: {\n                                color: 'rgba(29, 44, 34, .3)'\n                            },\n                            borderWidth: .5\n                        }\n                    ]\n                }\n            },\n            data: {\n                labels: this.props.data.map(d => d.time),\n                datasets: [{\n                    label: 'humidity',\n                    data: hData,\n                    fill: 'none',\n                    backgroundColor: 0,\n                    pointRadius: this.props.chartData.pointRadius,\n                    borderColor: gradientLine,\n                    borderWidth: 1,\n                    lineTension: 0\n                },\n                {\n                    label: 'temperature',\n                    data: tData,\n                    fill: 'none',\n                    backgroundColor: 0,\n                    pointRadius: this.props.chartData.pointRadius,\n                    borderColor: gradientLine,\n                    borderWidth: 1,\n                    lineTension: 0\n                }]\n            },\n            plugins: {\n                indexlabels: {\n                    fontSize: function (context) {\n                        var width = context.chart.width;\n                        var size = Math.round(width / 32);\n                        return {\n                            size: size\n                        };\n                    }\n                }\n            }\n        });\n        this.myChart.data.labels = this.props.data[0].map(d => d.time);\n        this.myChart.update();\n    }\n\n/* ******************************************************** RENDER ********************************************************* */\n    render() {\n        return <canvas ref={this.chartRef} />;\n    }\n}\n\n/* ********************************************************* EXPORT ********************************************************* */\nexport default LineChartMultiple;","/* ********************************************************* IMPORT ********************************************************* */\n// react\nimport React, {Component, Fragment} from 'react';\n// reactstrap\nimport {Table} from 'reactstrap';\n// components\nimport LineChartMultiple from '../LineChartMultiple';\n// services\nimport {deviceTempHumDataPost} from '../../services/productsApi';\n// icons\nimport { ReactComponent as Humidity } from '../../imgs/humidity.svg';\nimport { ReactComponent as Temperature } from '../../imgs/temperature.svg';\n\n/* ********************************************************* COMPONENT ********************************************************* */\nclass MonitorTempHum extends Component {\n\n    state = {\n        data: [],\n        deviceID: null\n    }\n    \n    componentDidMount() {\n        deviceTempHumDataPost(this.props.device.id).then(results => {\n            const data = [results.map(result => {return {value : Number(result.humidity), time: new Date(result.time)}}),results.map(result => {return {value : Number(result.temp), time: new Date(result.time)}})];\n            this.setState({data: data, deviceID: this.props.device.id});\n        })\n    }\n    componentDidUpdate() {\n        if(this.props.device.id !== this.state.deviceID) {\n            deviceTempHumDataPost(this.props.device.id).then(results => {\n                const data = [results.map(result => {return {value : Number(result.humidity), time: new Date(result.time)}}),results.map(result => {return {value : Number(result.temp), time: new Date(result.time)}})];\n                this.setState({data: data, deviceID: this.props.device.id});\n            })\n        }\n    }\n    // capitalize name\n    capitalizeTemp() {return this.props.device.device_name.charAt(0).toUpperCase() + this.props.device.device_name.substring(1, this.props.device.device_name.indexOf(' '))};\n    capitalizeHum() {return this.props.device.device_name.charAt(this.props.device.device_name.indexOf('&') + 2).toUpperCase() + this.props.device.device_name.substring(this.props.device.device_name.indexOf('&') + 3)};\n\n/* ********************************************************* RENDER ********************************************************* */\n    render() {\n        let chart = null;\n        if (this.state.data.length) {\n            if(this.state.data[0].length)\n            chart = (\n                <LineChartMultiple \n                    data={this.state.data} \n                    title={this.props.device.name} \n                    color=\"rgb(0, 168, 230)\" \n                    chartData={this.props.chartData}\n                />\n            )\n        }\n        return (\n            <Fragment>\n                <h3 className=\"text-center\">{this.props.hub.name}</h3>\n                <Table borderless size=\"sm\" className=\"mb-5\">\n                    <thead>\n                        <tr>\n                            <th className=\"align-bottom text-uppercase\">{this.props.device.name}</th>\n                            <th></th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">\n                                {this.capitalizeTemp()}\n                                <Temperature width='1rem' height='1.2rem' stroke='#241B12' className=\"temperature ml-2\" />\n                            </th>\n                            <th></th>\n                            <td>\n                                {this.props.device.connected\n                                    ? this.props.data[1]\n                                        ? this.props.data[1] + '°'\n                                        : 'loading'\n                                    : 'not connected'}\n                            </td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">\n                                {this.capitalizeHum()}\n                                <Humidity width='1.4rem' height='1.1rem' stroke='#241B12' className=\"humidity ml-2\" />\n                                </th>\n                            <th></th>\n                            <td>\n                                {this.props.device.connected\n                                    ? this.props.data[0]\n                                        ? this.props.data[0] + '%'\n                                        : 'loading'\n                                    : 'not connected'}\n                            </td>\n                        </tr>\n                    </tbody>\n                </Table>\n                {chart}\n            </Fragment>\n        )\n    }\n};\n\n/* ********************************************************* EXPORT ********************************************************* */\nexport default MonitorTempHum;","/* ********************************************************* IMPORT ********************************************************* */\n// react\nimport React, {Fragment, Component} from 'react';\n// reactstrap\nimport {Table} from 'reactstrap';\n// components\nimport LineChart from '../LineChart';\n// services\nimport {deviceLightDataPost} from '../../services/productsApi';\nimport {capitalizeName} from '../../services/capitalizeName';\n// icons\nimport { ReactComponent as Light } from '../../imgs/light.svg';\n\n/* ********************************************************* COMPONENT ********************************************************* */\nclass MonitorLight extends Component {\n\n    state = {\n        data: [],\n        deviceID: null\n    }\n\n    componentDidMount() {\n        deviceLightDataPost(this.props.device.id).then(results => {\n            const data = results.map(result => {return {value : Number(result.value), time: new Date(result.time)}})\n            this.setState({data: data, deviceID: this.props.device.id})\n        })\n    }\n    componentDidUpdate() {\n        if(this.props.device.id !== this.state.deviceID) {\n            deviceLightDataPost(this.props.device.id).then(results => {\n                const data = results.map(result => {return {value : Number(result.value), time: new Date(result.time)}})\n                this.setState({data: data, deviceID: this.props.device.id})\n            })    \n        }\n    }\n\n/* ********************************************************* RENDER ********************************************************* */\n    render() {\n        let chart = null\n        if (this.state.data.length) {\n            chart = (\n                <LineChart\n                    data={this.state.data}\n                    title={this.props.device.name}\n                    color=\"rgb(0, 168, 230)\"\n                    min=\"10\"\n                    max=\"100\"\n                    chartData={this.props.chartData}\n                />\n            )\n        }\n        return (\n            <Fragment>\n                <h3 className=\"text-center\">{this.props.hub.name}</h3>\n                <Table borderless size=\"sm\" className=\"mb-5\">\n                    <thead>\n                        <tr>\n                            <th className=\"align-bottom text-uppercase\">{this.props.device.name}</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">\n                                {capitalizeName(this.props.device.device_name)}\n                                <Light width='1rem' height='1.2rem' stroke='#241B12' className=\"light ml-2\" />\n                            </th>\n                            <td>\n                                {this.props.device.connected\n                                    ? this.props.data[0]\n                                        ? this.props.data[0] + '%'\n                                        : 'loading'\n                                    : 'not connected'}\n                            </td>\n                        </tr>\n                    </tbody>\n                </Table>\n                {chart}\n            </Fragment>\n        );\n    }\n}\n\n/* ********************************************************* EXPORT ********************************************************* */\nexport default MonitorLight;\n","/* ********************************************************* IMPORT ********************************************************* */\n// react\nimport React, {Fragment} from 'react';\n// reactstrap\nimport {Table} from 'reactstrap';\n// icons\nimport { ReactComponent as Humidity } from '../../imgs/humidity.svg';\nimport { ReactComponent as Temperature } from '../../imgs/temperature.svg';\nimport { ReactComponent as Moisture } from '../../imgs/soil_moisture.svg';\nimport { ReactComponent as Light } from '../../imgs/light.svg';\n\n/* ********************************************************* COMPONENT ********************************************************* */\nconst MonitorKitchen = props => {\n\n    return (\n        <Fragment>\n            <h3 className=\"text-center\">kitchen</h3>\n            <Table style={{tableLayout: \"fixed\"}} borderless size=\"sm\" className=\"mb-4\">\n                <thead>\n                    <tr>\n                        <th className=\"align-bottom text-uppercase\">Devices</th>\n                        <th className=\"align-top\">\n                            <Temperature width='1rem' height='1.2rem' stroke='#241B12' className=\"temperature\" />\n                        </th>\n                        <th className=\"align-top\">\n                            <Humidity width='1.4rem' height='1.1rem' stroke='#241B12' className=\"humidity\" />\n                        </th>\n                        <th className=\"align-top\">\n                            <Moisture width='0.8rem' height='1.2rem' stroke='#241B12' className=\"moisture\" />\n                        </th>\n                        <th className=\"align-top\">\n                            <Light width='1rem' height='1.2rem' stroke='#241B12' className=\"light\" />\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <th scope=\"row\">herbs</th>\n                        <td></td>\n                        <td></td>\n                        <td>51%</td>\n                        <td></td>\n                    </tr>\n                </tbody>\n            </Table>\n        </Fragment>\n    )    \n}\n\n/* ********************************************************* EXPORT ********************************************************* */\nexport default MonitorKitchen;\n","/* ********************************************************* IMPORT ********************************************************* */\n// react\nimport React, {Fragment} from 'react';\n// reactstrap\nimport {Table} from 'reactstrap';\n// icons\nimport { ReactComponent as Humidity } from '../../imgs/humidity.svg';\nimport { ReactComponent as Temperature } from '../../imgs/temperature.svg';\nimport { ReactComponent as Moisture } from '../../imgs/soil_moisture.svg';\nimport { ReactComponent as Light } from '../../imgs/light.svg';\n\n/* ********************************************************* COMPONENT ********************************************************* */\nconst MonitorHomeOffice = props => {\n\n    return (\n        <Fragment>\n            <h3 className=\"text-center\">home office</h3>\n            <Table style={{tableLayout: \"fixed\"}} borderless size=\"sm\" className=\"mb-4\">\n                <thead>\n                    <tr>\n                        <th className=\"align-bottom text-uppercase\">Devices</th>\n                        <th className=\"align-top\">\n                            <Temperature width='1rem' height='1.2rem' stroke='#241B12' className=\"temperature\" />\n                        </th>\n                        <th className=\"align-top\">\n                            <Humidity width='1.4rem' height='1.1rem' stroke='#241B12' className=\"humidity\" />\n                        </th>\n                        <th className=\"align-top\">\n                            <Moisture width='0.8rem' height='1.2rem' stroke='#241B12' className=\"moisture\" />\n                        </th>\n                        <th className=\"align-top\">\n                            <Light width='1rem' height='1.2rem' stroke='#241B12' className=\"light\" />\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <th scope=\"row\">cactus</th>\n                        <td>21°</td>\n                        <td>54%</td>\n                        <td>37%</td>\n                        <td>52%</td>\n                    </tr>\n                </tbody>\n            </Table>\n        </Fragment>\n    )    \n}\n\n/* ********************************************************* EXPORT ********************************************************* */\nexport default MonitorHomeOffice;\n","/* ********************************************************* IMPORT ********************************************************* */\n// react\nimport React, {Fragment} from 'react';\n// reactstrap\nimport {Table} from 'reactstrap';\n// icons\nimport { ReactComponent as Humidity } from '../../imgs/humidity.svg';\nimport { ReactComponent as Temperature } from '../../imgs/temperature.svg';\nimport { ReactComponent as Moisture } from '../../imgs/soil_moisture.svg';\nimport { ReactComponent as Light } from '../../imgs/light.svg';\n\n/* ********************************************************* COMPONENT ********************************************************* */\nconst MonitorGarden = props => {\n\n    return (\n        <Fragment>\n            <h3 className=\"text-center\">garden</h3>\n            <Table style={{tableLayout: \"fixed\"}} borderless size=\"sm\" className=\"mb-4\">\n                <thead>\n                    <tr>\n                        <th className=\"align-bottom text-uppercase\">Devices</th>\n                        <th className=\"align-top\">\n                            <Temperature width='1rem' height='1.2rem' stroke='#241B12' className=\"temperature\" />\n                        </th>\n                        <th className=\"align-top\">\n                            <Humidity width='1.4rem' height='1.1rem' stroke='#241B12' className=\"humidity\" />\n                        </th>\n                        <th className=\"align-top\">\n                            <Moisture width='0.8rem' height='1.2rem' stroke='#241B12' className=\"moisture\" />\n                        </th>\n                        <th className=\"align-top\">\n                            <Light width='1rem' height='1.2rem' stroke='#241B12' className=\"light\" />\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <th scope=\"row\">tomatoes</th>\n                        <td>17°</td>\n                        <td>39%</td>\n                        <td>62%</td>\n                        <td>71%</td>\n                    </tr>\n                </tbody>\n            </Table>\n        </Fragment>\n    )    \n}\n\n/* ********************************************************* EXPORT ********************************************************* */\nexport default MonitorGarden;\n","/* ********************************************************* IMPORT ********************************************************* */\n// react\nimport React, {Fragment} from 'react';\n// reactstrap\nimport {Table} from 'reactstrap';\n// icons\nimport { ReactComponent as Humidity } from '../../imgs/humidity.svg';\nimport { ReactComponent as Temperature } from '../../imgs/temperature.svg';\nimport { ReactComponent as Moisture } from '../../imgs/soil_moisture.svg';\nimport { ReactComponent as Light } from '../../imgs/light.svg';\n\n/* ********************************************************* COMPONENT ********************************************************* */\nconst MonitorBalcony = props => {\n\n    return (\n        <Fragment>\n            <h3 className=\"text-center\">balcony</h3>\n            <Table style={{tableLayout: \"fixed\"}} borderless size=\"sm\" className=\"mb-4\">\n                <thead>\n                    <tr>\n                        <th className=\"align-bottom text-uppercase\">Devices</th>\n                        <th className=\"align-top\">\n                            <Temperature width='1rem' height='1.2rem' stroke='#241B12' className=\"temperature\" />\n                        </th>\n                        <th className=\"align-top\">\n                            <Humidity width='1.4rem' height='1.1rem' stroke='#241B12' className=\"humidity\" />\n                        </th>\n                        <th className=\"align-top\">\n                            <Moisture width='0.8rem' height='1.2rem' stroke='#241B12' className=\"moisture\" />\n                        </th>\n                        <th className=\"align-top\">\n                            <Light width='1rem' height='1.2rem' stroke='#241B12' className=\"light\" />\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <th scope=\"row\">palm</th>\n                        <td></td>\n                        <td></td>\n                        <td>54%</td>\n                        <td></td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\">lavender</th>\n                        <td></td>\n                        <td></td>\n                        <td>58%</td>\n                        <td></td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\">fuchsias</th>\n                        <td></td>\n                        <td></td>\n                        <td>48%</td>\n                        <td></td>\n                    </tr>\n                </tbody>\n            </Table>\n        </Fragment>\n    )    \n}\n\n/* ********************************************************* EXPORT ********************************************************* */\nexport default MonitorBalcony;\n","/* ********************************************************* IMPORT ********************************************************* */\n// react\nimport React, {useState, useEffect, createRef, Fragment} from 'react';\n// router dom\nimport {useHistory, Link} from 'react-router-dom';\n// redux\nimport {connect} from 'react-redux';\nimport {setSocketAction, setBackgroundColor5Action, setBackgroundColor1Action} from '../actions';\n// socket\nimport io from 'socket.io-client';\n// reactstrap\nimport {\n    Row,\n    Col,\n    Button,\n    Input,\n    Container,\n    Collapse,\n    CardBody,\n    Card,\n    CardHeader,\n    CardTitle,\n    CardSubtitle,\n    CardText,\n    Breadcrumb,\n    BreadcrumbItem\n} from 'reactstrap';\n// components\nimport ConfirmModal from './ConfirmModal';\nimport MonitorAll from './monitors/MonitorAll';\nimport MonitorSoil from './monitors/MonitorSoil';\nimport MonitorWater from './monitors/MonitorWater';\nimport MonitorTempHum from './monitors/MonitorTempHum';\nimport MonitorLight from './monitors/MonitorLight';\nimport MonitorKitchen from './monitors/MonitorKitchen';\nimport MonitorHomeOffice from './monitors/MonitorHomeOffice';\nimport MonitorGarden from './monitors/MonitorGarden';\nimport MonitorBalcony from './monitors/MonitorBalcony';\n// window dimension hook\nimport {useWindowDimension} from '../hooks/useWindowDimension';\n// services\nimport {\n    checkHubNumPost,\n    addHubPost,\n    getHubsPost,\n    deleteHubPost,\n    checkDeviceNumPost,\n    addDevicePost,\n    getDevicesPost,\n    deleteDevicePost,\n    deviceOnOffPost,\n    saveRangesPost\n} from '../services/productsApi';\n\n/* ********************************************************* COMPONENT ********************************************************* */\nconst Dashboard = props => {\n\n    const history = useHistory();\n    const [width] = useWindowDimension();\n\n/* ********************************************************* REFERENCES ********************************************************* */\n    const addHubIconRef = createRef();\n    const addDeviceIconRefs = [];\n    const openHubIconRefs = [];\n    const shineHubRefs = [];\n    const shineDeviceRefs = [];\n\n/* ********************************************************* STATE ********************************************************* */\n    const initialState = {\n        // hubs & devices\n        hubs: [],\n        devices: [],\n        hubName: '',\n        deviceName: '',\n        hubNum: '',\n        deviceNum: '',\n        // collapse\n        collapseHub: null,\n        collapseAddHub: false,\n        collapseAddDevice: null,\n        // modal\n        confirmModalShow: false,\n        confirmModalContent: null,\n        confirmModalDelete: null,\n        // monitor\n        realTimeData: {},\n        currentHub: {},\n        currentDevice: {},\n        currentMonitor: 0\n    };\n    const [state, setState] = useState(initialState);\n\n/* ********************************************************* USE EFFECT ********************************************************* */\n    useEffect(() => {\n        // set background color of nav\n        props.setBackgroundColor5Action('color-5');\n        props.setBackgroundColor1Action(null);\n\n        // get the hubs and devices of the user from the database on first rendering\n        let mounted = true;\n        getHubsPost().then(hubs => {\n            if (hubs === 2) {\n                alert('Server error');\n            } else if (hubs === 10) {\n                history.push('/login');\n            } else {\n                getDevicesPost().then(devices => {\n                    if (devices === 2) {\n                        alert('Server error');\n                    } else if (devices === 10) {\n                        history.push('/login');\n                    } else if (mounted) {\n                        setState(state => ({...state, hubs, devices}));\n                    }\n                }).catch(err => {\n                    alert(err);\n                });\n            }\n        }).catch(err => {\n            alert(err);\n        });\n\n        // Socket.io is used for the real-time exchange of hubs and devices.\n        // In this way, the data from the sensors is forwarded to the frontend, but also which devices are connected.\n        const socket = io('http://localhost:5000');\n\n        socket.on('connect', () => {\n            // console.log('connected');\n            props.setSocketAction(socket);\n            socket.emit('user_connect', props.user.id);\n        });\n\n        socket.on('hub_connect', sn => {\n            if (state.hubs) {\n                setState(state => {\n                    const hubs = [...state.hubs];\n                    const hub = hubs.find(hub => hub.sn_number === sn);\n                    const idx = hubs.map(hub => hub.sn_number).indexOf(sn);\n                    if (hub) {\n                        hub.connected = 1;\n                        hubs[idx] = hub;\n                        console.log('hub connected', sn);\n                    }\n                    return {...state, hubs};\n                });\n            }\n        });\n\n        socket.on('hub_disconnect', sn => {\n            if (state.hubs) {\n                setState(state => {\n                    const hubs = [...state.hubs];\n                    const hub = hubs.find(hub => hub.sn_number === sn);\n                    const idx = hubs.map(hub => hub.sn_number).indexOf(sn);\n                    if (hub) {\n                        hub.connected = 0;\n                        hubs[idx] = hub;\n                        console.log('hub disconnected', sn);\n                    }\n                    return {...state, hubs};\n                });\n            }\n        });\n\n        socket.on('device_connect', sn => {\n            if (state.devices) {\n                setState(state => {\n                    let devices = [...state.devices];\n                    const device = devices.find(device => device.sn_number === sn);\n                    const idx = devices.map(device => device.sn_number).indexOf(sn);\n                    if (device) {\n                        device.connected = 1;\n                        devices[idx] = device;\n                        console.log('device connected', sn);\n                    }\n                    return {...state, devices};\n                });\n            }\n        });\n\n        socket.on('device_disconnect', sn => {\n            if (state.devices) {\n                setState(state => {\n                    let devices = [...state.devices];\n                    const device = devices.find(device => device.sn_number === sn);\n                    const idx = devices.map(device => device.sn_number).indexOf(sn);\n                    if (device) {\n                        device.connected = 0;\n                        devices[idx] = device;\n                        console.log('device disconnected', sn);\n                    }\n                    return {...state, devices};\n                });\n            }\n        });\n\n        socket.on('realTimeIncomingData', data => {\n            setState(state => ({...state, realTimeData: data.data}));\n        });\n\n        socket.on('disconnect', () => {\n            // console.log('disconnected');\n            socket.emit('user_disconnect', props.user.id);\n            props.setSocketAction(null);\n            socket.disconnect();\n        });\n\n        // cleanup: the user and socket are disconnected when the user leaves the component\n        return () => {\n            mounted = false;\n            socket.emit('user_disconnect', props.user.id);\n            props.setSocketAction(null);\n            socket.disconnect();\n        };\n    // eslint-disable-next-line\n    }, []);\n\n/* ********************************************************* HIGHLIGHT ********************************************************* */\n    // highlight selected hub\n    const shineHub = (e, idx) => {\n        e.preventDefault();\n        shineHubRefs.forEach((item, index) => {\n            if (idx !== index) {\n                item.current.classList.remove('shine');\n            } else {\n                item.current.classList.add('shine');\n            }\n        });\n    };\n\n    // highlight selected device\n    const shineDevice = (e, deviceSN) => {\n        e.preventDefault();\n        shineDeviceRefs.forEach(item => {\n            if (deviceSN !== item.current.id) {\n                item.current.classList.remove('shine');\n            } else {\n                item.current.classList.add('shine');\n            }\n        });\n    };\n\n    // remove highlighting of the hub\n    const toggleHubs = e => {\n        e.preventDefault();\n        shineHubRefs.forEach(item => {\n            item.current.classList.remove('shine');\n        });\n    };\n\n    // remove highlighting of the device\n    const toggleDevices = e => {\n        e.preventDefault();\n        shineDeviceRefs.forEach(item => {\n            item.current.classList.remove('shine');\n        });\n    };\n\n/* ********************************************************* TOGGLE HUBS ********************************************************* */\n    // pressing the hubs heading collapses all open hubs and shows the overview monitor\n    const resetHubs = e => {\n        e.preventDefault();\n        openHubIconRefs.forEach(item => {\n            item.current.classList.remove('down');\n            item.current.classList.add('up');\n        });\n        setState({\n            ...state,\n            currentMonitor: 0,\n            collapseHub: null\n        });\n    };\n\n    // pressing on a hub heading opens a closed section or closes it if it is already open\n    const toggleHub = (e, idx) => {\n        e.preventDefault();\n        // toggle up & down buttons\n        openHubIconRefs.forEach((item, index) => {\n            if (idx !== index) {\n                item.current.classList.remove('down');\n                item.current.classList.add('up');\n            } else {\n                item.current.classList.toggle('up');\n                item.current.classList.toggle('down');\n            }\n        });\n        // collapse hub and change monitor\n        setState({\n            ...state,\n            collapseHub: state.collapseHub === Number(idx) ? null : Number(idx),\n            currentMonitor: idx + 5\n        });\n    };\n\n/* ********************************************************* DELETE HUB ********************************************************* */\n    // opens or closes the section to delete a hub\n    const toggleDeleteHub = e => {\n        e.preventDefault();\n        // toggle plus visible\n        addHubIconRef.current.classList.toggle('show');\n        addHubIconRef.current.classList.toggle('hidden');\n        setState({...state, collapseAddHub: !state.collapseAddHub});\n    };\n\n    // By clicking the delete button, the user can delete one of his hubs.\n    // He must confirm the deletion before the hub is permanently deleted.\n    const onDeleteHubBtnClick = (e, hubID) => {\n        e.preventDefault();\n        const deleteHub = hubID => {\n            deleteHubPost(hubID).then(data => {\n                if (data !== 2) {\n                    setState({\n                        ...state,\n                        hubs: data,\n                        confirmModalShow: false\n                    });\n                } else {\n                    alert('Server error!');\n                }\n            }).catch(err => {\n                alert(err);\n            });\n        };\n        setState({\n            ...state,\n            confirmModalShow: true,\n            confirmModalContent: (\n                <p>\n                    Are you sure you want to delete this hub?\n                    <br />\n                    All your devices connected to this hub will also be deleted.\n                </p>\n            ),\n            confirmModalDelete: () => deleteHub(hubID)\n        });\n    };\n\n/* ********************************************************* DELETE DEVICE ********************************************************* */\n    // opens or closes the section to delete a device\n    const toggleDeleteDevice = (e, idx) => {\n        e.preventDefault();\n        // toggle plus visible\n        addDeviceIconRefs[idx].current.classList.toggle('show');\n        addDeviceIconRefs[idx].current.classList.toggle('hidden');\n        setState({...state, collapseAddDevice: state.collapseAddDevice === Number(idx) ? null : Number(idx)});\n    };\n\n    // By clicking the delete button, the user can delete one of his devices.\n    // He must confirm the deletion before the device is permanently deleted.\n    const onDeleteDeviceBtnClick = (e, deviceID) => {\n        e.preventDefault();\n        const deleteDevice = deviceID => {\n            deleteDevicePost(deviceID).then(data => {\n                if (data !== 2) {\n                    setState({\n                        ...state,\n                        devices: data,\n                        confirmModalShow: false\n                    });\n                } else {\n                    alert('Server error!');\n                }\n            }).catch(err => {\n                alert(err);\n            });\n        };\n        setState({\n            ...state,\n            confirmModalShow: true,\n            confirmModalContent: <p>Are you sure you want to delete this device?</p>,\n            confirmModalDelete: () => deleteDevice(deviceID)\n        });\n    };\n\n/* ********************************************************* ADD HUB ********************************************************* */\n    // opens or closes the section to add a hub\n    const toggleAddHub = e => {\n        e.preventDefault();\n        // toggle plus hidden\n        addHubIconRef.current.classList.add('hidden');\n        setState({...state, collapseAddHub: !state.collapseAddHub});\n    };\n\n    // The user can add a new hub in his dashboard, for which he must\n    // enter a valid serial number and can also assign a name to the it.\n    const onAddHubBtnClick = e => {\n        e.preventDefault();\n        if (state.hubName.trim() && state.hubNum.trim()) {\n            checkHubNumPost(state.hubNum.trim()).then(data => {\n                // 1 serialnumber found\n                // 2 server error\n                // 3 serialnumber not found\n                // 4 serialnumber already registered\n                switch (data) {\n                    case 1:\n                        addHubPost(state.hubName.trim(), state.hubNum.trim()).then(data => {\n                            if (data !== 2) {\n                                setState({\n                                    ...state,\n                                    hubs: data,\n                                    hubName: '',\n                                    hubNum: ''\n                                });\n                            } else {\n                                alert('Server error!');\n                            }\n                        }).catch(err => {\n                            alert(err);\n                        });\n                        break;\n                    case 2:\n                        alert('Server error!');\n                        break;\n                    case 3:\n                        alert('Serialnumber not found!');\n                        break;\n                    case 4:\n                        alert('Serialnumber already registered!');\n                        break;\n                    default:\n                        break;\n                }\n            }).catch(err => {\n                alert(err);\n            });\n        } else {\n            alert('Please fill out all inputs!');\n        }\n    };\n\n/* ********************************************************* ADD DEVICE ********************************************************* */\n    // opens or closes the section to add a device\n    const toggleAddDevice = (e, idx) => {\n        e.preventDefault();\n        // toggle plus hidden\n        addDeviceIconRefs[idx].current.classList.toggle('show');\n        addDeviceIconRefs[idx].current.classList.toggle('hidden');\n        setState({...state, collapseAddDevice: state.collapseAddDevice === Number(idx) ? null : Number(idx)});\n    };\n\n    // The user can add a new device in his dashboard, for which he must\n    // enter a valid serial number and can also assign a name to the it.\n    const onAddDeviceBtnClick = (e, hubID) => {\n        e.preventDefault();\n        if (state.deviceName.trim() && state.deviceNum.trim()) {\n            checkDeviceNumPost(state.deviceNum.trim()).then(data => {\n                // 1 serialnumber found\n                // 2 server error\n                // 3 serialnumber not found\n                // 4 serialnumber already registered\n                switch (data) {\n                    case 1:\n                        addDevicePost(state.deviceName.trim(), state.deviceNum.trim(), hubID).then(data => {\n                            if (data !== 2) {\n                                setState({\n                                    ...state,\n                                    devices: data,\n                                    deviceName: '',\n                                    deviceNum: ''\n                                });\n                            } else {\n                                alert('Server error!');\n                            }\n                        }).catch(err => {\n                            alert(err);\n                        });\n                        break;\n                    case 2:\n                        alert('Server error!');\n                        break;\n                    case 3:\n                        alert('Serialnumber not found!');\n                        break;\n                    case 4:\n                        alert('Serialnumber already registered!');\n                        break;\n                    default:\n                        break;\n                }\n            }).catch(err => {\n                alert(err);\n            });\n        } else {\n            alert('Please fill out all inputs!');\n        }\n    };\n/* ********************************************************* SHOW DEVICES ********************************************************* */\n    // show the real time data of the devices in the monitor\n    const onShowDeviceDataClick = (e, hub, device) => {\n        e.preventDefault();\n        // send order to raspberry to stop the request from previous device\n        if (state.currentDevice.sn_number && state.currentDevice.connected) {\n            props.socket.emit('stopRealTimeData', {userId: props.user.id, sn: state.currentDevice.sn_number});\n        };\n        // get real time data: socket emit to send the order to raspberry\n        setState({\n            ...state,\n            realTimeData: {},\n            currentHub: hub,\n            currentDevice: device,\n            currentMonitor: device.type_id\n        });\n        if (device.type_id !== 2 && device.connected) {\n            props.socket.emit('getRealTimeData', {userId: props.user.id, sn: device.sn_number});\n        };\n    };\n\n    // turns the water pump on or off\n    const statusChange = () => {\n        deviceOnOffPost(state.currentDevice.sn_number, !state.currentDevice.status).then(() => {\n            props.socket.emit('waterOnOff', {sn: state.currentDevice.sn_number, status: !state.currentDevice.status});\n            const newDevices = [...state.devices];\n            newDevices[newDevices.map(device => device.sn_number).indexOf(state.currentDevice.sn_number)].status = !state.currentDevice.status;\n            setState({...state, devices: newDevices});\n        });\n    };\n\n    // saves the parameters for the water pump control: from which soil moisture value watering should start and for how long\n    const onSaveBtnClick = (e, inputRangeTime, inputRangeDuration, soilMoistureDevice) => {\n        e.preventDefault();\n        saveRangesPost(inputRangeTime, inputRangeDuration, state.currentDevice.sn_number, soilMoistureDevice).then(data => {\n            const newDevices = [...state.devices];\n            newDevices[newDevices.map(device => device.sn_number).indexOf(state.currentDevice.sn_number)].water_time = inputRangeTime;\n            newDevices[newDevices.map(device => device.sn_number).indexOf(state.currentDevice.sn_number)].water_duration = inputRangeDuration;\n            newDevices[newDevices.map(device => device.sn_number).indexOf(state.currentDevice.sn_number)].moisture_device_id = soilMoistureDevice;\n            props.socket.emit('waterConf', {\n                sn: state.currentDevice.sn_number,\n                time: inputRangeTime,\n                duration: inputRangeDuration,\n                soilMoistureDevice: soilMoistureDevice\n            });\n            setState({...state, devices: newDevices});\n        });\n    };\n\n/* ********************************************************* PROFILE ********************************************************* */\n    let userImg;\n    if (props.user.img) {\n        userImg = props.user.img;\n    } else {\n        userImg = '/src/imgs/dummy.svg';\n    }\n    const o_date = new Intl.DateTimeFormat();\n    const f_date = (m_ca, m_it) => Object({...m_ca, [m_it.type]: m_it.value});\n    const m_date = o_date.formatToParts().reduce(f_date, {});\n    const data = m_date.day + '/' + m_date.month + '/' + m_date.year;\n\n/* ********************************************************* RETURN ********************************************************* */\n    if (state.hubs && state.devices && props.user) {\n        return (\n            <Container fluid={true} className=\"pt-5 px-4 px-sm-5 mt-5\">\n\n{/* ********************************************************* MODAL ********************************************************* */}\n                <ConfirmModal\n                    className=\"bg-danger\"\n                    title=\"Confirm Deletion\"\n                    show={state.confirmModalShow}\n                    delete={state.confirmModalDelete}\n                    close={() => setState({...state, confirmModalShow: false})}\n                >\n                    {state.confirmModalContent}\n                </ConfirmModal>\n{/* ********************************************************* BREADCRUMB ********************************************************* */}\n                <Col className=\"p-0 mb-3\">\n                    <Breadcrumb className=\"bg-transparent\">\n                        <BreadcrumbItem className=\"bg-transparent\">\n                            <Link to=\"/\">Home</Link>\n                        </BreadcrumbItem>\n                        <BreadcrumbItem className=\"bg-transparent\">\n                            <Link to=\"/user/profile\">UserProfile</Link>\n                        </BreadcrumbItem>\n                        <BreadcrumbItem className=\"bg-transparent\" active>\n                            DashBoard\n                        </BreadcrumbItem>\n                    </Breadcrumb>\n                </Col>\n{/* ********************************************************* PROFILE ********************************************************* */}\n                <Row className=\"mb-5 d-flex align-items-center\">\n                    <Col className=\"d-flex align-items-center\">\n                        <div className=\"mr-2\">\n                            <span>\n                                <img src={userImg} alt=\"\" style={{width: '32px', height: '32px', borderRadius: '50%'}} />\n                            </span>\n                        </div>\n                        <div className=\"flex-grow-1 p-0 m-0\">\n                            <div>\n                                {props.user.firstName} {props.user.lastName}\n                            </div>\n                            <div>{data}</div>\n                        </div>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col lg=\"5\" className=\"accordion pr-lg-5\">\n                        <Card color=\"transparent\" className=\"border-0\">\n{/* ********************************************************* HUBS ********************************************************* */}\n                            <CardHeader className=\"p-0 mb-3 d-flex align-items-center\">\n                                <CardTitle className=\"m-0 flex-grow-1\">\n                                    <Button className=\"accordion text-uppercase p-0\" onClick={e => {toggleHubs(e); resetHubs(e);}}>\n                                        <h5 style={state.currentMonitor === 0 ? {fontWeight: 'bold'} : {fontWeight: 'normal'}}>\n                                            hubs\n                                        </h5>\n                                    </Button>\n                                </CardTitle>\n                                <CardSubtitle>\n                                    <Button innerRef={addHubIconRef} className=\"badge-pill btn-outline-light bg-transparent ml-3 my-auto p-0 plus\" onClick={toggleAddHub}>\n                                        <span></span><span></span>\n                                    </Button>\n                                    <Button className=\"badge-pill btn-outline-light bg-transparent ml-3 my-auto up\">\n                                        <span></span><span></span>\n                                    </Button>\n                                </CardSubtitle>\n                            </CardHeader>\n{/* ********************************************************* ADD HUB ********************************************************* */}\n                            <Collapse isOpen={state.collapseAddHub}>\n                                <CardHeader className=\"p-0 mb-3 d-flex align-items-center justify-align-space-between\">\n                                    <CardSubtitle>\n                                        <Button className=\"badge-pill btn-outline-light bg-transparent mr-3 p-0 minus\" onClick={toggleDeleteHub}>\n                                            <span></span><span></span>\n                                        </Button>\n                                    </CardSubtitle>\n                                    <CardTitle className=\"flex-grow-1 m-0\">\n                                        <Input\n                                            className=\"badge-pill bg-transparent py-0 mb-3\"\n                                            placeholder=\"Enter a serial number\"\n                                            onChange={e => setState({...state, hubNum: e.target.value})}\n                                            value={state.hubNum}\n                                        />\n                                        <Input\n                                            className=\"badge-pill bg-transparent py-0\"\n                                            placeholder=\"Enter a name for your hub\"\n                                            onChange={e => setState({...state, hubName: e.target.value})}\n                                            value={state.hubName}\n                                        />\n                                    </CardTitle>\n                                    <CardSubtitle>\n                                        <Button className=\"badge-pill btn-outline-light bg-transparent ml-3 p-0 plus\" onClick={onAddHubBtnClick}>\n                                            <span></span><span></span>\n                                        </Button>\n                                    </CardSubtitle>\n                                </CardHeader>\n                            </Collapse>\n                            <CardBody className=\"p-0\">\n                                <Collapse isOpen={true}>\n{/* ********************************************************* LOOP HUBS ********************************************************* */}\n                                    {state.hubs.map((hub, idx) => {\n                                        const openHubIconRef = createRef();\n                                        openHubIconRefs.push(openHubIconRef);\n                                        const addDeviceIconRef = createRef();\n                                        addDeviceIconRefs.push(addDeviceIconRef);\n                                        const shineHubRef = createRef();\n                                        shineHubRefs.push(shineHubRef);\n                                        return (\n                                            <div key={idx} ref={shineHubRef}>\n                                                <CardHeader className=\"p-0 mb-2 d-flex align-items-center\">\n                                                    <Button\n                                                        className=\"accordion p-0 flex-grow-1\"\n                                                        onClick={e => {toggleHub(e, idx); shineHub(e, idx); toggleDevices(e);}}\n                                                    >\n                                                        <CardTitle className=\"m-0 text-left d-flex align-items-center\">\n                                                            {hub.name}\n                                                            <span className={hub.connected ? 'active-lcd mx-2' : 'inactive-lcd mx-2'}></span>\n                                                        </CardTitle>\n                                                    </Button>\n                                                    <CardSubtitle>\n                                                        <Button\n                                                            className=\"badge-pill btn-outline-light bg-transparent ml-3 p-0 minus\"\n                                                            onClick={e => onDeleteHubBtnClick(e, hub.id)}\n                                                        >\n                                                            <span></span><span></span>\n                                                        </Button>\n                                                        <Button\n                                                            className=\"badge-pill btn-outline-light bg-transparent ml-3 p-0 plus\"\n                                                            innerRef={addDeviceIconRef}\n                                                            onClick={e => toggleAddDevice(e, idx)}\n                                                        >\n                                                            <span></span><span></span>\n                                                        </Button>\n                                                        <Button\n                                                            className=\"badge-pill btn-outline-light bg-transparent ml-3 up\"\n                                                            innerRef={openHubIconRef}\n                                                            onClick={e => {toggleHub(e, idx); shineHub(e, idx);}}\n                                                        >\n                                                            <span></span><span></span>\n                                                        </Button>\n                                                    </CardSubtitle>\n                                                </CardHeader>\n{/* ********************************************************* ADD DEVICE ********************************************************* */}\n                                                <CardBody className=\"p-0 pl-2\">\n                                                    <Collapse isOpen={state.collapseAddDevice === idx}>\n                                                        <CardHeader className=\"p-0 mb-3 d-flex align-items-center justify-align-space-between\">\n                                                            <CardSubtitle className=\"p-0\">\n                                                                <Button\n                                                                    className=\"badge-pill btn-outline-light bg-transparent mr-3 p-0 minus\"\n                                                                    onClick={e => toggleDeleteDevice(e, idx)}\n                                                                >\n                                                                    <span></span><span></span>\n                                                                </Button>\n                                                            </CardSubtitle>\n                                                            <CardTitle className=\"flex-grow-1 m-0\">\n                                                                <Input\n                                                                    className=\"badge-pill bg-transparent py-0 mb-3\"\n                                                                    placeholder=\"Enter a serial number\"\n                                                                    onChange={e => setState({...state, deviceNum: e.target.value})}\n                                                                    value={state.deviceNum}\n                                                                />\n                                                                <Input\n                                                                    className=\"badge-pill bg-transparent py-0\"\n                                                                    placeholder=\"Enter a name for your device\"\n                                                                    onChange={e => setState({...state, deviceName: e.target.value})}\n                                                                    value={state.deviceName}\n                                                                />\n                                                            </CardTitle>\n                                                            <CardSubtitle className=\"p-0\">\n                                                                <Button\n                                                                    className=\"badge-pill btn-outline-light bg-transparent ml-3 p-0 plus\"\n                                                                    onClick={e => onAddDeviceBtnClick(e, hub.id)}\n                                                                >\n                                                                    <span></span><span></span>\n                                                                </Button>\n                                                            </CardSubtitle>\n                                                        </CardHeader>\n                                                    </Collapse>\n                                                </CardBody>\n                                                <CardBody className=\"p-0\">\n                                                    <Collapse isOpen={state.collapseHub === idx}>\n{/* ********************************************************* LOOP DEVICE ********************************************************* */}\n                                                        {state.devices.filter(device => device.hub_id === hub.id).map((device, idx) => {\n                                                            const shineDeviceRef = createRef();\n                                                            shineDeviceRefs.push(shineDeviceRef);\n                                                            return (\n                                                                <div key={device.sn_number} id={device.sn_number} ref={shineDeviceRef}>\n                                                                    <CardHeader className=\"p-0 pl-3 d-flex align-items-center\">\n                                                                        <Button className=\"accordion p-0 flex-grow-1\">\n                                                                            <CardTitle\n                                                                                className=\"m-0 text-left d-flex align-items-center\"\n                                                                                onClick={e => {onShowDeviceDataClick(e, hub, device); shineDevice(e, device.sn_number); toggleHubs(e);}}\n                                                                            >\n                                                                                {device.name}\n                                                                                <span className={device.connected ? 'active-lcd mx-2' : 'inactive-lcd mx-2'}></span>\n                                                                            </CardTitle>\n                                                                        </Button>\n                                                                        <CardSubtitle>\n                                                                            <Button\n                                                                                className=\"badge-pill btn-outline-light bg-transparent ml-3 p-0 minus\"\n                                                                                onClick={e => onDeleteDeviceBtnClick(e, device.id)}\n                                                                            >\n                                                                                <span></span><span></span>\n                                                                            </Button>\n                                                                            <Button className=\"badge-pill btn-outline-light bg-transparent ml-3 p-0 plus\">\n                                                                                <span></span><span></span>\n                                                                            </Button>\n                                                                            <Button className=\"badge-pill btn-outline-light bg-transparent ml-3 up\">\n                                                                                <span></span><span></span>\n                                                                            </Button>\n                                                                        </CardSubtitle>\n                                                                    </CardHeader>\n                                                                    <CardBody className=\"p-0 pl-3\">\n                                                                        <CardText className=\"m-0 mb-3\">\n                                                                            {device.device_name}\n                                                                        </CardText>\n                                                                    </CardBody>\n{/* ******************************************************** MONITOR MOBILE ********************************************************* */}\n                                                                    {width <= 991 && (\n                                                                        <Fragment>\n                                                                            {state.currentMonitor === 1 && device.type_id === 1 && device.sn_number === state.currentDevice.sn_number && (\n                                                                                <Col className=\"p-0 mt-lg-0 my-4\" lg=\"7\">\n                                                                                    <Col className=\"p-0 px-sm-3 pt-sm-3\">\n                                                                                        <MonitorSoil\n                                                                                            chartData={{fontSize: 6, pointRadius: 1}}\n                                                                                            data={state.realTimeData}\n                                                                                            hub={state.currentHub}\n                                                                                            device={state.currentDevice}\n                                                                                        />\n                                                                                    </Col>\n                                                                                </Col>\n                                                                            )}\n                                                                            {state.currentMonitor === 2 && device.type_id === 2 && device.sn_number === state.currentDevice.sn_number && (\n                                                                                <Col className=\"p-0 mt-lg-0 my-4\" lg=\"7\">\n                                                                                    <Col className=\"p-0 px-sm-3 pt-sm-3\">\n                                                                                        <MonitorWater\n                                                                                            devices={state.devices}\n                                                                                            hub={state.currentHub}\n                                                                                            device={state.currentDevice}\n                                                                                            statusChange={statusChange}\n                                                                                            save={onSaveBtnClick}\n                                                                                        />\n                                                                                    </Col>\n                                                                                </Col>\n                                                                            )}\n                                                                            {state.currentMonitor === 3 && device.type_id === 3 && device.sn_number === state.currentDevice.sn_number && (\n                                                                                <Col className=\"p-0 mt-lg-0 my-4\" lg=\"7\">\n                                                                                    <Col className=\"p-0 px-sm-3 pt-sm-3\">\n                                                                                        <MonitorTempHum\n                                                                                            chartData={{fontSize: 6, pointRadius: 1}}\n                                                                                            data={state.realTimeData}\n                                                                                            hub={state.currentHub}\n                                                                                            device={state.currentDevice}\n                                                                                        />\n                                                                                    </Col>\n                                                                                </Col>\n                                                                            )}\n                                                                            {state.currentMonitor === 4 && device.type_id === 4 && device.sn_number === state.currentDevice.sn_number && (\n                                                                                <Col className=\"p-0 mt-lg-0 my-4\" lg=\"7\">\n                                                                                    <Col className=\"p-0 px-sm-3 pt-sm-3\">\n                                                                                        <MonitorLight\n                                                                                            chartData={{fontSize: 6, pointRadius: 1}}\n                                                                                            data={state.realTimeData}\n                                                                                            hub={state.currentHub}\n                                                                                            device={state.currentDevice}\n                                                                                        />\n                                                                                    </Col>\n                                                                                </Col>\n                                                                            )}\n                                                                        </Fragment>\n                                                                    )}\n                                                                </div>\n                                                            );\n                                                        })}\n                                                    </Collapse>\n                                                </CardBody>\n                                                {width <= 991 && (\n                                                    <Fragment>\n                                                        {state.currentMonitor === 5 && hub.id === 1 && (\n                                                            <Col className=\"p-0 mt-lg-0 my-4\" lg=\"7\">\n                                                                <Col className=\"p-0 px-sm-3 pt-sm-3\">\n                                                                    <MonitorKitchen />\n                                                                </Col>\n                                                            </Col>\n                                                        )}\n                                                        {state.currentMonitor === 6 && hub.id === 2 && (\n                                                            <Col className=\"p-0 mt-lg-0 my-4\" lg=\"7\">\n                                                                <Col className=\"p-0 px-sm-3 pt-sm-3\">\n                                                                    <MonitorHomeOffice />\n                                                                </Col>\n                                                            </Col>\n                                                        )}\n                                                        {state.currentMonitor === 7 && hub.id === 5 && (\n                                                            <Col className=\"p-0 mt-lg-0 my-4\" lg=\"7\">\n                                                                <Col className=\"p-0 px-sm-3 pt-sm-3\">\n                                                                    <MonitorGarden />\n                                                                </Col>\n                                                            </Col>\n                                                        )}\n                                                        {state.currentMonitor === 8 && hub.id === 7 && (\n                                                            <Col className=\"p-0 mt-lg-0 my-4\" lg=\"7\">\n                                                                <Col className=\"p-0 px-sm-3 pt-sm-3\">\n                                                                    <MonitorBalcony />\n                                                                </Col>\n                                                            </Col>\n                                                        )}\n                                                    </Fragment>\n                                                )}\n                                            </div>\n                                        );\n                                    })}\n                                </Collapse>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                    {width <= 991 && (\n                        <Fragment>\n                            {state.currentMonitor === 0 && (\n                                <Col className=\"mt-lg-0 mt-3 mb-4\" lg=\"7\">\n                                    <Col className=\"p-0 px-sm-3 pt-sm-3\">\n                                        <MonitorAll />\n                                    </Col>\n                                </Col>\n                            )}\n                        </Fragment>\n                    )}\n{/* ******************************************************** MONITOR DESKTOP ********************************************************* */}\n                    {width > 991 && (\n                        <Col className=\"px-3 mt-lg-0 mt-3\" lg=\"7\">\n                            <Col className=\"p-3\">\n                                {state.currentMonitor === 0 && <MonitorAll />}\n                                {state.currentMonitor === 1 && (\n                                    <MonitorSoil\n                                        chartData={{fontSize: 12, pointRadius: 2}}\n                                        data={state.realTimeData}\n                                        hub={state.currentHub}\n                                        device={state.currentDevice}\n                                    />\n                                )}\n                                {state.currentMonitor === 2 && (\n                                    <MonitorWater\n                                        devices={state.devices}\n                                        hub={state.currentHub}\n                                        device={state.currentDevice}\n                                        statusChange={statusChange}\n                                        save={onSaveBtnClick}\n                                    />\n                                )}\n                                {state.currentMonitor === 3 && (\n                                    <MonitorTempHum\n                                        chartData={{fontSize: 12, pointRadius: 2}}\n                                        data={state.realTimeData}\n                                        hub={state.currentHub}\n                                        device={state.currentDevice}\n                                    />\n                                )}\n                                {state.currentMonitor === 4 && (\n                                    <MonitorLight\n                                        chartData={{fontSize: 12, pointRadius: 2}}\n                                        data={state.realTimeData}\n                                        hub={state.currentHub}\n                                        device={state.currentDevice}\n                                    />\n                                )}\n                                {state.currentMonitor === 5 && <MonitorKitchen />}\n                                {state.currentMonitor === 6 && <MonitorHomeOffice />}\n                                {state.currentMonitor === 7 && <MonitorGarden />}\n                                {state.currentMonitor === 8 && <MonitorBalcony />}\n                            </Col>\n                        </Col>\n                    )}\n                </Row>\n            </Container>\n        );\n    } else {\n        return <div>Loading...</div>;\n    }\n};\n\n/* ********************************************************* MAP STATE TO PROPS ********************************************************* */\nconst mapStateToProps = state => {\n    return {\n        user: state.user,\n        socket: state.socket\n    };\n};\n\n/* ********************************************************* EXPORT ********************************************************* */\nexport default connect(mapStateToProps, {setSocketAction, setBackgroundColor5Action, setBackgroundColor1Action})(Dashboard);\n","/* ********************************************************* IMPORT ********************************************************* */\n// react\nimport React, {useState, useEffect, useRef} from 'react';\n// router dom\nimport {Link} from 'react-router-dom';\n// redux\nimport {connect} from 'react-redux';\nimport {setBackgroundColor5Action, setBackgroundColor1Action} from '../actions';\n// reactstrap\nimport {Container, Row, Col, Button, Input, Form, Label, FormGroup, Breadcrumb, BreadcrumbItem} from 'reactstrap';\n// components\nimport PopUpModal from './PopUpModal';\n// services\nimport {editUserPost, getUserPost} from '../services/api';\n// import {useWindowDimension} from '../hooks/useWindowDimension';\n\n/* ********************************************************* COMPONENT ********************************************************* */\nconst UserProfile = props => {\n\n    const imageInpRef = useRef();\n    // const [width] = useWindowDimension();\n\n    const initialState = {\n        userImg: '',\n        firstName: '',\n        lastName: '',\n        city: '',\n        userName: '',\n        password: '',\n        repassword: '',\n        showModal: false,\n        modalContent: null,\n        badgeContent: null\n    };\n    const [state, setState] = useState(initialState);\n\n/* ********************************************************* USE EFFECT ********************************************************* */\n    useEffect(() => {\n        // saves background color in redux\n        props.setBackgroundColor1Action('color-1');\n        props.setBackgroundColor5Action(null);\n\n        // gets user data from database\n        let mounted = true;\n        getUserPost(props.user.id).then(user => {\n            switch (user) {\n                case 2:\n                    alert('Server error!');\n                    break;\n                case 3:\n                    alert('No user found!');\n                    break;\n                default:\n                    if (mounted) {\n                        setState({\n                            ...state,\n                            firstName: user.firstname,\n                            lastName: user.lastname,\n                            userName: user.username,\n                            city: user.city,\n                            userImg: user.img\n                        });      \n                    }\n                    break;\n            }\n        }).catch(err => {\n            console.log(err);\n        });    \n\n        // cleanup\n        return () => {\n            mounted = false;\n        };\n    // eslint-disable-next-line\n    }, []);\n\n/* ********************************************************* EDIT BUTTON ********************************************************* */\n    // The user can change his or her data in the user profile:\n    // The name, the user name and the personal password can be changed and the place of residence can be added.\n    const onEditBtnClick = e => {\n        e.preventDefault();\n        if (state.password !== state.repassword) {\n            setState({\n                ...state,\n                modalContent: <p>Passwords do not match</p>,\n                showModal: true\n            });\n        } else {\n            editUserPost(\n                props.user.id,\n                state.firstName,\n                state.lastName,\n                state.userName,\n                state.city,\n                state.password,\n                state.repassword,\n                imageInpRef.current.files[0]\n            ).then(data => {\n                let badgeClass = '';\n                let badgeMessage = '';\n                switch (data) {\n                    case 2:\n                        badgeClass = 'alert alert-danger';\n                        badgeMessage = 'There was a server side error, please contact the administrator.';\n                        break;\n                    case 3:\n                        badgeClass = 'alert alert-danger';\n                        badgeMessage = 'There is already a user with the same username, please choose another one.';\n                        break;\n                    default:\n                        badgeClass = 'alert alert-success';\n                        badgeMessage = 'Your profile has been changed successfully.';\n                        break;\n                }\n                const badgeContentElement = (\n                    <div className={badgeClass} role=\"alert\">\n                        {badgeMessage}\n                    </div>\n                );\n                setState({...state, badgeContent: badgeContentElement});        \n            }).catch(() => {\n                const badgeContentElement = (\n                    <div className=\"alert alert-danger\" role=\"alert\">\n                        Can not send the data to server.\n                    </div>\n                );\n                setState({...state, badgeContent: badgeContentElement});\n            });\n        }\n    };\n\n/* ********************************************************* RETURN ********************************************************* */\n    return (\n        <Container fluid={true} className=\"px-4 px-sm-5 pt-5 mt-5\">\n{/* ********************************************************* MODAL ********************************************************* */}\n            <PopUpModal \n                className=\"bg-danger\" \n                title=\"Entries Error\"            \n                show={state.showModal} \n                close={() => setState({...state, showModal: false})} \n            >\n                {state.modalContent}\n            </PopUpModal>\n{/* ********************************************************* BREADCRUMB ********************************************************* */}\n            <Col className=\"p-0 mb-3\">\n                <Breadcrumb className=\"bg-transparent\">\n                    <BreadcrumbItem className=\"bg-transparent\">\n                        <Link to=\"/\">Home</Link>\n                    </BreadcrumbItem>\n                    <BreadcrumbItem className=\"bg-transparent\">\n                        <Link to=\"/user/dashboard\">DashBoard</Link>\n                    </BreadcrumbItem>\n                    <BreadcrumbItem className=\"bg-transparent\" active>\n                        UserProfile\n                    </BreadcrumbItem>\n                </Breadcrumb>\n            </Col>\n{/* ********************************************************* HEADLINE ********************************************************* */}\n                <Col className=\"text-center\">\n                    <h3 className=\"text-trans mb-4\">Your Profile</h3>\n                </Col>\n                <Col className=\"avatar text-center\">\n                    <img \n                        src={state.userImg ? state.userImg : '/src/imgs/dummy.svg'}\n                        alt=\"\"\n                        style={{width: '150px', height: '150px', borderRadius: '50%'}}\n                    /> \n                </Col>\n                <Col className=\"d-flex justify-content-center mb-3\">\n                    <Label for=\"upload\" className=\"badge-pill btn-outline-light bg-transparent my-4 btn btn-secondary\">Upload</Label>\n                    <input\n                        id=\"upload\"\n                        ref={imageInpRef}\n                        type=\"file\"\n                        accept=\"image/x-png,image/gif,image/jpeg\"\n                        onChange={e => setState({...state, userImg: URL.createObjectURL(e.target.files[0])})}\n                        style={{visibility: \"hidden\", width: 0}}\n                    />\n                </Col>\n{/* ********************************************************* FORM ********************************************************* */}\n            <Form className=\"pb-md-0 pb-5\">\n                <div className=\"col-lg-12 col-md-12\">{state.badgeContent}</div>\n                <Row>\n                    <Col xs=\"12\" sm={{size: 8, offset: 2}} lg={{size: 6, offset: 3}} xl={{size: 4, offset: 4}} className=\"p-0\">\n                        <FormGroup className=\"mb-md-4 mb-3 text-left\">\n                            <Label className=\"w-100 h5 text-trans mb-2 ml-2\">First Name:</Label>\n                            <Row>\n                                <Col xs=\"10\">\n                                    <Input\n                                        className=\"badge-pill text-trans bg-transparent\"\n                                        type=\"text\"\n                                        placeholder={state.firstName}\n                                        required\n                                        onChange={e => setState({...state, firstName: e.target.value})}\n                                        value={state.firstName}\n                                    />\n                                </Col>\n                                <Col className=\"d-flex justify-content-end\">\n                                    <Button className=\"badge-pill btn-outline-light bg-transparent\" onClick={onEditBtnClick}>\n                                        Edit\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </FormGroup>\n                    </Col>\n                    <Col xs=\"12\" sm={{size: 8, offset: 2}} lg={{size: 6, offset: 3}} xl={{size: 4, offset: 4}} className=\"p-0\">\n                        <FormGroup className=\"mb-4 text-left\">\n                            <Label className=\"w-100 h5 text-trans mb-2 ml-2\">Last Name:</Label>\n                            <Row>\n                                <Col xs=\"10\">\n                                    <Input\n                                        className=\"badge-pill bg-transparent\"\n                                        type=\"text\"\n                                        placeholder={state.lastName}\n                                        required\n                                        onChange={e => setState({...state, lastName: e.target.value})}\n                                        value={state.lastName}\n                                    />\n                                </Col>\n                                <Col className=\"d-flex justify-content-end\">\n                                    <Button className=\"badge-pill btn-outline-light bg-transparent\" onClick={onEditBtnClick}>\n                                        Edit\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </FormGroup>\n                    </Col>\n                    <Col xs=\"12\" sm={{size: 8, offset: 2}} lg={{size: 6, offset: 3}} xl={{size: 4, offset: 4}} className=\"p-0\">\n                        <FormGroup className=\"mb-4 text-left\">\n                            <Label className=\"w-100 h5 text-trans mb-2 ml-2\">User Name:</Label>\n                            <Row>\n                                <Col xs=\"10\">\n                                    <Input\n                                        className=\"badge-pill bg-transparent\"\n                                        type=\"text\"\n                                        placeholder={state.userName}\n                                        required\n                                        onChange={e => setState({...state, userName: e.target.value})}\n                                        value={state.userName}\n                                    />\n                                </Col>\n                                <Col className=\"d-flex justify-content-end\">\n                                    <Button className=\"badge-pill btn-outline-light bg-transparent\" onClick={onEditBtnClick}>\n                                        Edit\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </FormGroup>\n                    </Col>\n                    <Col xs=\"12\" sm={{size: 8, offset: 2}} lg={{size: 6, offset: 3}} xl={{size: 4, offset: 4}} className=\"p-0\">\n                        <FormGroup className=\"mb-4 text-left\">\n                            <Label className=\"w-100 h5 text-trans mb-2 ml-2\">Email:</Label>\n                            <Row>\n                                <Col xs=\"10\">\n                                    <Input\n                                        className=\"badge-pill bg-transparent\"\n                                        type=\"text\"\n                                        placeholder={state.email}\n                                        required\n                                        onChange={e => setState({...state, email: e.target.value})}\n                                        value={state.email}\n                                    />\n                                </Col>\n                                <Col className=\"d-flex justify-content-end\">\n                                    <Button className=\"badge-pill btn-outline-light bg-transparent\" onClick={onEditBtnClick}>\n                                        Edit\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </FormGroup>\n                    </Col>\n                    <Col xs=\"12\" sm={{size: 8, offset: 2}} lg={{size: 6, offset: 3}} xl={{size: 4, offset: 4}} className=\"p-0\">\n                        <FormGroup className=\"mb-4 text-left\">\n                            <Label className=\"w-100 h5 text-trans mb-2 ml-2\">Password:</Label>\n                            <Row>\n                                <Col xs=\"10\">\n                                    <Input\n                                        className=\"badge-pill bg-transparent\"\n                                        type=\"text\"\n                                        placeholder={state.password}\n                                        required\n                                        onChange={e => setState({...state, password: e.target.value})}\n                                        value={state.password}\n                                    />\n                                </Col>\n                                <Col className=\"d-flex justify-content-end\">\n                                    <Button className=\"badge-pill btn-outline-light bg-transparent\" onClick={onEditBtnClick}>\n                                        Edit\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </FormGroup>\n                    </Col>\n                    <Col xs=\"12\" sm={{size: 8, offset: 2}} lg={{size: 6, offset: 3}} xl={{size: 4, offset: 4}} className=\"p-0\">\n                        <FormGroup className=\"mb-4 text-left\">\n                            <Label className=\"w-100 h5 text-trans mb-2 ml-2\">Birthday:</Label>\n                            <Row>\n                                <Col xs=\"10\">\n                                    <Input\n                                        className=\"badge-pill bg-transparent\"\n                                        type=\"text\"\n                                        placeholder={state.Birthday}\n                                        required\n                                        onChange={e => setState({...state, birthday: e.target.value})}\n                                        value={state.birthday}\n                                    />\n                                </Col>\n                                <Col className=\"d-flex justify-content-end\">\n                                    <Button className=\"badge-pill btn-outline-light bg-transparent\" onClick={onEditBtnClick}>\n                                        Edit\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </FormGroup>\n                    </Col>\n                    <Col xs=\"12\" sm={{size: 8, offset: 2}} lg={{size: 6, offset: 3}} xl={{size: 4, offset: 4}} className=\"p-0\">\n                        <FormGroup className=\"mb-4 text-left\">\n                            <Label className=\"w-100 h5 text-trans mb-2 ml-2\">City:</Label>\n                            <Row>\n                                <Col xs=\"10\">\n                                    <Input\n                                        className=\"badge-pill bg-transparent\"\n                                        type=\"text\"\n                                        placeholder={state.city}\n                                        required\n                                        onChange={e => setState({...state, city: e.target.value})}\n                                        value={state.city}\n                                    />\n                                </Col>\n                                <Col className=\"d-flex justify-content-end\">\n                                    <Button className=\"badge-pill btn-outline-light bg-transparent\" onClick={onEditBtnClick}>\n                                        Edit\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </FormGroup>\n                    </Col>\n                    <Col xs=\"12\" sm={{size: 8, offset: 2}} lg={{size: 6, offset: 3}} xl={{size: 4, offset: 4}} className=\"p-0\">\n                        <FormGroup className=\"mb-4 text-left\">\n                            <Label className=\"w-100 h5 text-trans mb-2 ml-2\">Zip Code:</Label>\n                            <Row>\n                                <Col xs=\"10\">\n                                    <Input\n                                        className=\"badge-pill bg-transparent\"\n                                        type=\"text\"\n                                        placeholder={state.zipCode}\n                                        required\n                                        onChange={e => setState({...state, zipCode: e.target.value})}\n                                        value={state.zipCode}\n                                    />\n                                </Col>\n                                <Col className=\"d-flex justify-content-end\">\n                                    <Button className=\"badge-pill btn-outline-light bg-transparent\" onClick={onEditBtnClick}>\n                                        Edit\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </FormGroup>\n                    </Col>\n                    <Col xs=\"12\" sm={{size: 8, offset: 2}} lg={{size: 6, offset: 3}} xl={{size: 4, offset: 4}} className=\"p-0\">\n                        <FormGroup className=\"mb-4 text-left\">\n                            <Label className=\"w-100 h5 text-trans mb-2 ml-2\">Country:</Label>\n                            <Row>\n                                <Col xs=\"10\">\n                                    <Input\n                                        className=\"badge-pill bg-transparent\"\n                                        type=\"text\"\n                                        placeholder={state.country}\n                                        required\n                                        onChange={e => setState({...state, country: e.target.value})}\n                                        value={state.country}\n                                    />\n                                </Col>\n                                <Col className=\"d-flex justify-content-end\">\n                                    <Button className=\"badge-pill btn-outline-light bg-transparent\" onClick={onEditBtnClick}>\n                                        Edit\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </FormGroup>\n                    </Col>\n                    <Col xs=\"12\" sm={{size: 8, offset: 2}} lg={{size: 6, offset: 3}} xl={{size: 4, offset: 4}}>\n                        <FormGroup className=\"mb-4 text-left\">\n                            <Label className=\"w-100 h5 text-trans mb-2 ml-2\">New Password:</Label>\n                            <Input\n                                className=\"badge-pill bg-transparent\"\n                                type=\"password\"\n                                placeholder=\"Choose a new password\"\n                                required\n                                onChange={e => setState({...state, password: e.target.value})}\n                                value={state.password}\n                            />\n                        </FormGroup>\n                    </Col>\n                    <Col xs=\"12\" sm={{size: 8, offset: 2}} lg={{size: 6, offset: 3}} xl={{size: 4, offset: 4}}>\n                        <FormGroup className=\"mb-3 text-left\">\n                            <Label className=\"w-100 h5 text-trans mb-2 ml-2\">Repeat New Password:</Label>\n                            <Input\n                                className=\"badge-pill bg-transparent\"\n                                type=\"password\"\n                                placeholder=\"Repeat your new password\"\n                                required\n                                onChange={e => setState({...state, repassword: e.target.value})}\n                                value={state.repassword}\n                            />\n                        </FormGroup>\n                    </Col>\n                </Row>\n                <Col className=\" text-center\">\n                    <Button className=\"badge-pill btn-outline-light bg-transparent my-4\" onClick={onEditBtnClick}>\n                        Edit\n                    </Button>\n                </Col>\n            </Form>\n        </Container>\n    );\n};\n\n/* ********************************************************* MAP STATE TO PROPS ********************************************************* */\nconst mapStateToProps = state => {\n    return {user: state.user};\n};\n\n/* ********************************************************* EXPORT ********************************************************* */\nexport default connect(mapStateToProps, {setBackgroundColor5Action, setBackgroundColor1Action})(UserProfile);\n","/* ********************************************************* IMPORT ********************************************************* */\n// react\nimport React, {Fragment, useState, useEffect} from 'react';\n// router dom\nimport {Link} from 'react-router-dom';\n// redux\nimport {connect} from 'react-redux';\n// reactstrap\nimport {Container, Row, Col, Button, Table, ButtonGroup, Breadcrumb, BreadcrumbItem} from 'reactstrap';\n// components\nimport ConfirmModal from './ConfirmModal';\n// services\nimport {getAllUsersPost, changeVerificationPost, deleteUserPost, changeUserRolePost} from '../services/api';\n\n/* ********************************************************* COMPONENT ********************************************************* */\nconst Admin = props => {\n\n    const initialState = {\n        users: [],\n        confirmModalShow: false,\n        confirmModalContent: null,\n        confirmModalDelete: null\n    };\n    const [state, setState] = useState(initialState);\n\n/* ********************************************************* USE EFFECT ********************************************************* */\n    // gets the data of all users from the database to display them in the admin panel\n    useEffect(() => {\n        getAllUsersPost().then(data => {\n            switch (data) {\n                case 2:\n                    alert('Server error!');\n                    break;\n                case 3:\n                    alert('No users found!');\n                    break;\n                default:\n                    setState({...state, users: data});\n                    break;\n            }\n        }).catch(err => {\n            console.log(err);\n        });\n    // eslint-disable-next-line\n    }, []);\n\n/* ********************************************************* CHANGE USER VERIFICATION ********************************************************* */\n    // changes the verification of a user by clicking the verified button\n    const onVerifiedBtnClick = (e, userID, email, verified) => {\n        e.preventDefault();\n        // changes the verification of a user in the database\n        changeVerificationPost(userID, email, verified).then(data => {\n            switch (data) {\n                case 1:\n                    // changes the user array in the state after it has been changed in the database\n                    let newUsers = state.users.map(user => {\n                        if (user.id === userID) {\n                            user.verified = !user.verified;\n                        }\n                        return user;\n                    });\n                    setState({...state, users: newUsers});\n                    break;\n                case 2:\n                    alert('Server error!');\n                    break;\n                case 3:\n                    alert('Email has not been sent!');\n                    break;\n                default:\n                    break;\n            }\n        }).catch(err => {\n            console.log(err);\n        });\n    };\n\n/* ********************************************************* CHANGE USER ROLE ********************************************************* */\n    // changes the role of the user by pressing the button from user to admin or vice versa\n    const changeUserRole = (e, role, userID) => {\n        e.preventDefault();\n        // changes the user role in the database\n        changeUserRolePost(userID, role).then(data => {\n            if (data === 1) {\n                // changes the user array in the state after it has been changed in the database\n                let newUsers = state.users.map(user => {\n                    if (user.id === userID) {\n                        user.role = role;\n                    }\n                    return user;\n                });\n                setState({...state, users: newUsers});\n            } else {\n                alert('Server error!');\n            }\n        }).catch(err => {\n            console.log(err);\n        });\n    };\n\n/* ********************************************************* DELETE USER ********************************************************* */\n    // deletes a user by clicking the delete button\n    const onDeleteBtnClick = (e, userID, idx) => {\n        e.preventDefault();\n        const deleteUser = userID => {\n            // deletes a user in the database\n            deleteUserPost(userID).then(data => {\n                if (data === 1) {\n                    state.users.splice(idx, 1);\n                    // changes the user array in the state after it has been changed in the database\n                    setState({\n                        ...state,\n                        users: state.users,\n                        confirmModalShow: false\n                    });\n                } else {\n                    alert('Server error!');\n                }\n            }).catch(err => {\n                console.log(err);\n                alert('Server error!');\n            });\n        };\n        // a modal asks one more time before the user is finally deleted\n        setState({\n            ...state,\n            confirmModalShow: true,\n            confirmModalContent: (\n                <p>\n                    Are you sure you want to delete this user?\n                    <br />\n                    You can't undo it after deletion.\n                </p>\n            ),\n            confirmModalDelete: () => deleteUser(userID)\n        });\n    };\n\n/* ********************************************************* RETURN ********************************************************* */\n    return (\n        <Fragment>\n{/* ********************************************************* MODAL ********************************************************* */}\n            <ConfirmModal\n                className=\"bg-danger\"\n                title=\"Confirm Deletion\"\n                show={state.confirmModalShow}\n                delete={state.confirmModalDelete}\n                close={() => setState({...state, confirmModalShow: false})}\n            >\n                {state.confirmModalContent}\n            </ConfirmModal>\n{/* ********************************************************* BREADCRUMB ********************************************************* */}\n            <Container className=\"pt-4 mt-5\">\n                <Col className=\"p-0 mb-3\">\n                    <Breadcrumb className=\"bg-transparent\">\n                        <BreadcrumbItem className=\"bg-transparent\">\n                            <Link to=\"/\">Home</Link>\n                        </BreadcrumbItem>\n                        <BreadcrumbItem className=\"bg-transparent\">\n                            <Link to=\"/user/profile\">UserProfile</Link>\n                        </BreadcrumbItem>\n                        <BreadcrumbItem className=\"bg-transparent\" active>\n                            AdminPanel\n                        </BreadcrumbItem>\n                    </Breadcrumb>\n                </Col>\n{/* ********************************************************* HEADLINE ********************************************************* */}\n                <Row>\n                    <Col xs={6} md={9}>\n                        <h3 className=\"text-trans mb-4\">Hello admin,</h3>\n                        <p className=\"text-trans mb-4\">here you have access to the user settings:</p>\n                    </Col>\n                </Row>\n{/* ********************************************************* TABLE ********************************************************* */}\n                <Row>\n                    <Table hover dark responsive>\n                        <thead>\n                            <tr>\n                                <th>First Name</th>\n                                <th>Last Name</th>\n                                <th>User Name</th>\n                                <th>Email</th>\n                                <th>Verified</th>\n                                <th>Role</th>\n                                <th>Delete</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {state.users.map((user, idx) => {\n                                let userRole = null;\n                                if (state.users[idx].role === 'admin') {\n                                    userRole = (\n                                        <Button outline color=\"warning\" disabled>\n                                            {\"' \"}Administrator{\" '\"}\n                                        </Button>\n                                    );\n                                } else {\n                                    userRole = (\n                                        <ButtonGroup>\n                                            <Button\n                                                outline={state.users[idx].role === 'user' ? false : true}\n                                                color={state.users[idx].role === 'user' ? 'info' : 'secondary'}\n                                                onClick={e => changeUserRole(e, 'user', user.id, idx)}\n                                                active={state.users[idx].role === 'user' ? true : false}\n                                            >\n                                                User\n                                            </Button>\n                                            <Button\n                                                outline={state.users[idx].role === 'subadmin' ? false : true}\n                                                color={state.users[idx].role === 'subadmin' ? 'info' : 'secondary'}\n                                                onClick={e => changeUserRole(e, 'subadmin', user.id, idx)}\n                                                active={state.users[idx].role === 'subadmin' ? true : false}\n                                            >\n                                                SAdmin\n                                            </Button>\n                                        </ButtonGroup>\n                                    );\n                                }\n                                return (\n                                    <tr key={user.id}>\n                                        <td>{user.firstname}</td>\n                                        <td>{user.lastname}</td>\n                                        <td>{user.username}</td>\n                                        <td>{user.email}</td>\n                                        <td>\n                                            <Button\n                                                outline={user.verified ? false : true}\n                                                color={user.verified ? 'info' : 'secondary'}\n                                                disabled={user.role === 'admin' ? true : false}\n                                                onClick={e => onVerifiedBtnClick(e, user.id, user.email, user.verified)}\n                                            >\n                                                {user.verified ? 'Yes' : 'No'}\n                                            </Button>\n                                        </td>\n                                        <td>{userRole}</td>\n                                        <td>\n                                            <Button\n                                                onClick={e => onDeleteBtnClick(e, user.id, idx)}\n                                                outline\n                                                color=\"danger\"\n                                                disabled={user.role === 'admin' ? true : false}\n                                            >\n                                                Delete\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                );\n                            })}\n                        </tbody>\n                    </Table>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n};\n\n/* ********************************************************* MAP STATE TO PROPS ********************************************************* */\nconst mapStateToProps = state => {\n    return {user: state.user};\n};\n\n/* ********************************************************* EXPORT ********************************************************* */\nexport default connect(mapStateToProps)(Admin);\n","/* ********************************************************* IMPORT ********************************************************* */\n// react\nimport React, {Fragment, useState, useEffect} from 'react';\n// router dom\nimport {Link} from 'react-router-dom';\n// redux\nimport {connect} from 'react-redux';\n// reactstrap\nimport {Container, Row, Col, Button, Table, Breadcrumb, BreadcrumbItem} from 'reactstrap';\n// components\nimport ConfirmModal from './ConfirmModal';\n// services\nimport {getAllUsersPost, changeVerificationPost, deleteUserPost} from '../services/api';\n\n/* ********************************************************* COMPONENT ********************************************************* */\nconst SubAdmin = props => {\n\n    const initialState = {\n        users: [],\n        confirmModalShow: false,\n        confirmModalDelete: null,\n        confirmModalContent: null\n    };\n    const [state, setState] = useState(initialState);\n\n    // gets the data of all users from the database to display them in the admin panel\n    useEffect(() => {\n        getAllUsersPost().then(data => {\n            switch (data) {\n                case 2:\n                    alert('Server Error!');\n                    break;\n                case 3:\n                    alert('No Users Found!');\n                    break;\n                default:\n                    setState({...state, users: data});\n                    break;\n            }\n        }).catch(err => {\n            console.log(err);\n        });\n    // eslint-disable-next-line\n    }, []);\n\n/* ********************************************************* CHANGE USER VERIFICATION ********************************************************* */\n    // changes the verification of a user by clicking the verified button\n    const onVerifiedBtnClick = (e, userID, email, verified) => {\n        e.preventDefault();\n        // changes the verification of a user in the database\n        changeVerificationPost(userID, email, verified).then(data => {\n            switch (data) {\n                case 1:\n                    // changes the user array in the state after it has been changed in the database\n                    let newUsers = state.users.map(user => {\n                        if (user.id === userID) {\n                            user.verified = !user.verified;\n                        }\n                        return user;\n                    });\n                    setState({...state, users: newUsers});\n                    break;\n                case 2:\n                    alert('Server error!');\n                    break;\n                case 3:\n                    alert('Email has not been sent!');\n                    break;\n                default:\n                    break;\n            }    \n        }).catch(err => {\n            console.log(err);\n        });\n    };\n\n/* ********************************************************* DELETE USER ********************************************************* */\n    // deletes a user by clicking the delete button\n    const onDeleteBtnClick = (e, userID, idx) => {\n        e.preventDefault();\n        const deleteUser = userID => {\n            // deletes a user in the database\n            deleteUserPost(userID).then(data => {\n                if (data === 1) {\n                    state.users.splice(idx, 1);\n                    // changes the user array in the state after it has been changed in the database\n                    setState({\n                        ...state,\n                        users: state.users,\n                        confirmModalShow: false\n                    });\n                } else {\n                    alert('Server error!');\n                }\n            }).catch(err => {\n                console.log(err);\n                alert('Server error!');\n            });\n        };\n        // a modal asks one more time before the user is finally deleted\n        setState({\n            ...state,\n            confirmModalShow: true,\n            confirmModalContent: (\n                <p>\n                    Are you sure you want to delete this Users?\n                    <br />\n                    You can't undo it after deletion.\n                </p>\n            ),\n            confirmModalDelete: () => deleteUser(userID)\n        });\n    };\n\n/* ********************************************************* RETURN ********************************************************* */\n    return (\n        <Fragment>\n{/* ********************************************************* MODAL ********************************************************* */}\n            <ConfirmModal\n                className=\"bg-danger\"\n                title=\"Confirm Deletion\"\n                show={state.confirmModalShow}\n                delete={state.confirmModalDelete}\n                close={() => setState({...state, confirmModalShow: false})}\n            >\n                {state.confirmModalContent}\n            </ConfirmModal>\n{/* ********************************************************* BREADCRUMB ********************************************************* */}\n            <Container className=\"pt-4 mt-5\">\n                <Col className=\"p-0 mb-3\">\n                    <Breadcrumb className=\"bg-transparent\">\n                        <BreadcrumbItem className=\"bg-transparent\">\n                            <Link to=\"/\">Home</Link>\n                        </BreadcrumbItem>\n                        <BreadcrumbItem className=\"bg-transparent\">\n                            <Link to=\"/user/profile\">UserProfile</Link>\n                        </BreadcrumbItem>\n                        <BreadcrumbItem className=\"bg-transparent\" active>\n                            SubAdminPanel\n                        </BreadcrumbItem>\n                    </Breadcrumb>\n                </Col>\n{/* ********************************************************* HEADLINE ********************************************************* */}\n                <Row>\n                    <Col xs={6} md={9}>\n                        <h3 className=\"text-trans mb-4\">Hello admin,</h3>\n                        <p className=\"text-trans mb-4\">here you have access to the user settings:</p>\n                    </Col>\n                </Row>\n{/* ********************************************************* TABLE ********************************************************* */}\n                <Row>\n                    <Table hover dark responsive>\n                        <thead>\n                            <tr>\n                                <th>First Name</th>\n                                <th>Last Name</th>\n                                <th>User Name</th>\n                                <th>Email</th>\n                                <th>Verified</th>\n                                <th>Delete</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {state.users.map((user, idx) => {\n                                if (user.role === 'admin' || user.role === 'subadmin') {\n                                    return null;\n                                } else {\n                                    return (\n                                        <tr key={user.id}>\n                                            <td>{user.firstname}</td>\n                                            <td>{user.lastname}</td>\n                                            <td>{user.username}</td>\n                                            <td>{user.email}</td>\n                                            <td>\n                                                <Button\n                                                    outline={user.verified ? false : true}\n                                                    color={user.verified ? 'info' : 'secondary'}\n                                                    disabled={user.role === 'admin' ? true : false}\n                                                    onClick={e => onVerifiedBtnClick(e, user.id, user.email, user.verified)}\n                                                >\n                                                    {user.verified ? 'Yes' : 'No'}\n                                                </Button>\n                                            </td>\n                                            <td>\n                                                <Button\n                                                    onClick={e => onDeleteBtnClick(e, user.id, idx)}\n                                                    outline\n                                                    color=\"danger\"\n                                                    disabled={user.role === 'admin' ? true : false}\n                                                >\n                                                    Delete\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    );\n                                }\n                            })}\n                        </tbody>\n                    </Table>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n};\n\n/* ********************************************************* MAP STATE TO PROPS ********************************************************* */\nconst mapStateToProps = state => {\n    return {user: state.user};\n};\n\n/* ********************************************************* EXPORT ********************************************************* */\nexport default connect(mapStateToProps)(SubAdmin);\n","/* ********************************************************* IMPORT ********************************************************* */\n// react\nimport React, {useEffect} from 'react';\n// redux\nimport {connect} from 'react-redux';\nimport {\n    setBackgroundColor1Action,\n    setBackgroundColor5Action\n} from '../actions';\n// reactstrap\nimport {Container} from 'reactstrap';\n\n/* ******************************************************** COMPONENT ********************************************************* */\nfunction About(props) {\n\n/* ******************************************************** USE EFFECT ********************************************************* */\nuseEffect(() => {\n        // set background color of nav\n        props.setBackgroundColor5Action(null);\n        props.setBackgroundColor1Action('color-1');\n    // eslint-disable-next-line\n    }, []);\n\n/* ******************************************************** RETURN ********************************************************* */\nreturn (\n        <Container fluid={true} className=\"px-5 pb-0 pt-5 mt-5\">\n            <h1 className=\"adsimple-321232425\">Impressum</h1>\n            <p className=\"adsimple-321232425\">Informationspflicht laut § 5 TMG.</p>\n            <p className=\"adsimple-321232425\"><strong>\n                MusterFirma\n                <br />\n                Musterstrasse 1, Stiege 1 Tür 1, <br />\n                12345 Musterhausen, <br />\n                Deutschland\n            </strong></p>\n            <p className=\"adsimple-321232425\">\n                <strong>UID-Nummer:</strong> DE12345678\n                <br />\n                <strong>Wirtschafts-ID:</strong> DE123456789\n                <br />\n            </p>\n            <p className=\"adsimple-321232425\">\n                <strong>Tel.:</strong> 01234/56789\n                <br />\n                <strong>Fax:</strong> 01234/56789-0\n                <br />\n                <strong>E-Mail:</strong> <a href=\"mailto:office@musterfirma.de\">office@musterfirma.de</a>\n            </p>\n            <p className=\"adsimple-321232425\">\n                <strong>Aufsichtsbehörde</strong>\n                <br />\n                Bezirkshauptmannschaft Musterhausen\n                <br />\n                <strong>Webseite der Aufsichtsbehörde</strong>\n                <br />\n                <a href=\"https://www.aufsichtsbeoerde-musterhausen.de/\">\n                    https://www.aufsichtsbeoerde-musterhausen.de/\n                </a>\n                <br />\n                <strong>Anschrift der Aufsichtsbehörde</strong>\n                <br /> Musterweg 1, 12345 Musterhausen\n                <br />\n            </p>\n            <p className=\"adsimple-321232425\">\n                <strong>Berufsbezeichnung:</strong> Webdesigner, Grafiker\n            </p>\n            <p className=\"adsimple-321232425\">\n                <strong>Vertreten durch</strong>\n                <br />\n                Markus Muster\n            </p>\n            <p>\n                Quelle: Erstellt mit dem{' '}\n                <a\n                    title=\"Impressum Generator Deutschland\"\n                    href=\"https://www.adsimple.de/impressum-generator/\"\n                    rel=\"follow\"\n                >\n                    Impressum Generator\n                </a>{' '}\n                von AdSimple in Kooperation mit{' '}\n                <a href=\"https://www.justmed.de\" rel=\"follow\" title=\"\">\n                    justmed.de\n                </a>\n            </p>\n            <br />\n            <h2 className=\"adsimple-321232425\">EU-Streitschlichtung</h2>\n            <p>\n                Gemäß Verordnung über Online-Streitbeilegung in Verbraucherangelegenheiten (ODR-Verordnung) möchten\n                wir Sie über die Online-Streitbeilegungsplattform (OS-Plattform) informieren.\n                <br />\n                Verbraucher haben die Möglichkeit, Beschwerden an die Online Streitbeilegungsplattform der\n                Europäischen Kommission unter{' '}\n                <a\n                    className=\"adsimple-321232425\"\n                    href=\"https://ec.europa.eu/consumers/odr/main/index.cfm?event=main.home2.show&amp;lng=DE\"\n                    rel=\"noopener\"\n                >\n                    http://ec.europa.eu/odr?tid=321232425\n                </a>{' '}\n                zu richten. Die dafür notwendigen Kontaktdaten finden Sie oberhalb in unserem Impressum.\n            </p>\n            <p>\n                Wir möchten Sie jedoch darauf hinweisen, dass wir nicht bereit oder verpflichtet sind, an\n                Streitbeilegungsverfahren vor einer Verbraucherschlichtungsstelle teilzunehmen.\n            </p>\n            <h2 className=\"adsimple-321232425\">Haftung für Inhalte dieser Website</h2>\n            <p>\n                Wir entwickeln die Inhalte dieser Webseite ständig weiter und bemühen uns korrekte und aktuelle\n                Informationen bereitzustellen. Laut Telemediengesetz{' '}\n                <a\n                    className=\"adsimple-321232425\"\n                    href=\"https://www.gesetze-im-internet.de/tmg/__7.html?tid=321232425\"\n                    rel=\"noopener\"\n                >\n                    (TMG) §7 (1)\n                </a>{' '}\n                sind wir als Diensteanbieter für eigene Informationen, die wir zur Nutzung bereitstellen, nach den\n                allgemeinen Gesetzen verantwortlich. Leider können wir keine Haftung für die Korrektheit aller\n                Inhalte auf dieser Webseite übernehmen, speziell für jene die seitens Dritter bereitgestellt wurden.\n                Als Diensteanbieter im Sinne der §§ 8 bis 10 sind wir nicht verpflichtet, die von ihnen\n                übermittelten oder gespeicherten Informationen zu überwachen oder nach Umständen zu forschen, die\n                auf eine rechtswidrige Tätigkeit hinweisen.\n            </p>\n            <p>\n                Unsere Verpflichtungen zur Entfernung von Informationen oder zur Sperrung der Nutzung von\n                Informationen nach den allgemeinen Gesetzen aufgrund von gerichtlichen oder behördlichen Anordnungen\n                bleiben auch im Falle unserer Nichtverantwortlichkeit nach den §§ 8 bis 10 unberührt.{' '}\n            </p>\n            <p>\n                Sollten Ihnen problematische oder rechtswidrige Inhalte auffallen, bitte wir Sie uns umgehend zu\n                kontaktieren, damit wir die rechtswidrigen Inhalte entfernen können. Sie finden die Kontaktdaten im\n                Impressum.\n            </p>\n            <h2 className=\"adsimple-321232425\">Haftung für Links auf dieser Website</h2>\n            <p>\n                Unsere Webseite enthält Links zu anderen Webseiten für deren Inhalt wir nicht verantwortlich sind.\n                Haftung für verlinkte Websites besteht für uns nicht, da wir keine Kenntnis rechtswidriger\n                Tätigkeiten hatten und haben, uns solche Rechtswidrigkeiten auch bisher nicht aufgefallen sind und\n                wir Links sofort entfernen würden, wenn uns Rechtswidrigkeiten bekannt werden.\n            </p>\n            <p>\n                Wenn Ihnen rechtswidrige Links auf unserer Website auffallen, bitte wir Sie uns zu kontaktieren. Sie\n                finden die Kontaktdaten im Impressum.\n            </p>\n            <br />\n            <h2 className=\"adsimple-321232425\">Urheberrechtshinweis</h2>\n            <p>\n                Alle Inhalte dieser Webseite (Bilder, Fotos, Texte, Videos) unterliegen dem Urheberrecht der\n                Bundesrepublik Deutschland. Bitte fragen Sie uns bevor Sie die Inhalte dieser Website verbreiten,\n                vervielfältigen oder verwerten wie zum Beispiel auf anderen Websites erneut veröffentlichen. Falls\n                notwendig, werden wir die unerlaubte Nutzung von Teilen der Inhalte unserer Seite rechtlich\n                verfolgen.\n            </p>\n            <p>\n                Sollten Sie auf dieser Webseite Inhalte finden, die das Urheberrecht verletzen, bitten wir Sie uns\n                zu kontaktieren.\n            </p>\n            <h2 className=\"adsimple-321232425\">Bildernachweis</h2>\n            <p>Die Bilder, Fotos und Grafiken auf dieser Webseite sind urheberrechtlich geschützt.</p>\n            <p>Die Bilderrechte liegen bei den folgenden Fotografen und Unternehmen:</p>\n            <ul className=\"adsimple-321232425 ml-4\">\n                <li className=\"adsimple-321232425\">Fotograf Mustermann</li>\n            </ul>\n            <br />\n            <br />\n        </Container>\n    );\n}\n\n/* ********************************************************* EXPORT ********************************************************* */\nexport default connect(null, {setBackgroundColor5Action, setBackgroundColor1Action})(About);\n","/* ********************************************************* IMPORT ********************************************************* */\n// react\nimport React, {Fragment, useEffect, useState} from 'react';\n// redux\nimport {connect} from 'react-redux';\nimport {setBackgroundColor1Action, setBackgroundColor5Action} from '../actions';\n// reactstrap\nimport {Container, Col, Form, FormGroup, Label, Input, Button} from 'reactstrap';\nimport PopUpModal from './PopUpModal';\n// services\nimport {sendMessagePost} from '../services/api';\n// validator\nimport validator from 'validator';\n\n/* ******************************************************** COMPONENT ********************************************************* */\nfunction Contact(props) {\n\n    const initialState = {\n        email: '',\n        message: '',\n        showModal: false,\n        modalClass: '',\n        modalTitle: '',\n        modalContent: null\n    };\n    const [state, setState] = useState(initialState);\n\n/* ******************************************************** USE EFFECT ********************************************************* */\nuseEffect(() => {\n    // set background color of nav\n    props.setBackgroundColor5Action(null);\n    props.setBackgroundColor1Action('color-1');\n// eslint-disable-next-line\n}, []);\n\n/* ******************************************************** SEND BUTTON ********************************************************* */\n    // sends a message written in the contact form\n    const onSendBtnClick = e => {\n        e.preventDefault();\n        // the user receives a message if the fields have not been filled in correctly\n        if (!validator.isEmail(state.email.trim()) || state.email.trim() === '' || state.message === '') {\n            const modalContentElement = (\n                <ul>\n                    {!validator.isEmail(state.email.trim()) ? <li>Please enter a valid email</li> : null}\n                    {state.email.trim() === '' ? <li>Please enter your email</li> : null}\n                    {state.message === '' ? <li>Please enter your message</li> : null}\n                </ul>\n            );\n            setState({\n                ...state,\n                showModal: true,\n                modalClass: 'bg-danger',\n                modalTitle: 'Entry Error',\n                modalContent: modalContentElement\n            });\n        } else {\n            sendMessagePost(state.email, state.message).then(data => {\n                switch (data) {\n                    case 2:\n                        setState({\n                            ...state,\n                            modalClass: 'bg-danger',\n                            showModal: true,\n                            modalTitle: 'Server Error',\n                            modalContent: <p>There was a server error</p>\n                        });\n                        break;\n                    default:\n                        setState({\n                            ...state,\n                            modalClass: 'bg-success',\n                            showModal: true,\n                            modalTitle: 'Message sent successfully',\n                            modalContent: (\n                                <p>\n                                    Your message has been sent.<br /> \n                                    Thank you for your message.\n                                </p>\n                            )\n                        });\n                        break;\n                    }\n                }).catch(() => {\n                    setState({\n                        ...state,\n                        showModal: true,\n                        modalTitle: 'Unknown Error',\n                        modalContent: <p>Can not send the data</p>\n                    });\n                });\n        }\n    };\n\n/* *********************************************************** RETURN ********************************************************* */\n    return (\n        <Fragment>\n{/* *********************************************************** MODAL ********************************************************* */}\n            <PopUpModal\n                className={state.modalClass}\n                title={state.modalTitle}         \n                show={state.showModal}\n                close={() => setState({...state, showModal: false})}\n            >\n                {state.modalContent}\n            </PopUpModal>\n{/* *********************************************************** HEADLINE ********************************************************* */}\n            <Container className=\"px-4 px-md-0 pb-0 pt-5 mt-5\">\n                <Col sm=\"12\" md={{size: 6, offset: 3}} className=\"p-0\">\n                    <h1 className=\"text-trans mb-4\">Contact Us</h1>\n                </Col>\n{/* *********************************************************** FORM ********************************************************* */}\n                <Col sm=\"12\" md={{size: 6, offset: 3}} className=\"p-0\">\n                    <Form>\n                        <FormGroup className=\"mb-md-4 mb-3 text-left\">\n                            <Label className=\"w-100 h5 text-trans mb-2 ml-2\">Email / User Name:</Label>\n                            <Input\n                                className=\"badge-pill bg-transparent\"\n                                type=\"email\"\n                                placeholder=\"Enter your email or user name\"\n                                required\n                                onChange={e => setState({...state, email: e.target.value})}\n                                value={state.email}\n                            />\n                        </FormGroup>\n                        <FormGroup className=\"mb-4 text-left\">\n                            <Label className=\"w-100 h5 text-trans mb-2 ml-2\">\n                                Message:\n                            </Label>\n                            <textarea\n                                className=\"bg-transparent p-2\"\n                                type=\"text\"\n                                placeholder=\"Write your message\"\n                                required\n                                rows=\"7\"\n                                onChange={e => setState({...state, message: e.target.value})}\n                                value={state.message}\n                            />\n                        </FormGroup>\n                        <Col  sm=\"12\" md={{size: 6, offset: 3}} className=\"p-0 text-center\">\n                            <Button\n                                className=\"badge-pill btn-outline-light bg-transparent my-4\"\n                                onClick={onSendBtnClick}\n                            >\n                                Send\n                            </Button>\n                        </Col>\n                    </Form>\n                </Col>\n            </Container>\n        </Fragment>\n    );\n}\n\n/* ********************************************************* MAP STATE TO PROPS ********************************************************* */\nconst mapStateToProps = state => {\n    return {user: state.user};\n};\n\n/* ********************************************************* EXPORT ********************************************************* */\nexport default connect(mapStateToProps, {setBackgroundColor5Action, setBackgroundColor1Action})(Contact);\n","/* ********************************************************* IMPORT ********************************************************* */\n// react\nimport React, {useEffect} from 'react';\n// redux\nimport {connect} from 'react-redux';\nimport {setBackgroundColor1Action, setBackgroundColor5Action} from '../actions';\n// reactstrap\nimport {Container} from 'reactstrap';\n// window dimension hook\nimport {useWindowDimension} from '../hooks/useWindowDimension';\n\n/* ********************************************************* COMPONENT ********************************************************* */\nfunction Terms(props) {\n    // width of window\n    const [width] = useWindowDimension();\n\n/* ******************************************************** BACKGROUND COLOR ********************************************************* */\n    useEffect(() => {\n        // set background color of nav\n        props.setBackgroundColor5Action(null);\n        props.setBackgroundColor1Action('color-1');\n    // eslint-disable-next-line\n    }, []);\n\n/* ******************************************************** RETURN ********************************************************* */\n    return (\n        <Container fluid={true} className=\"px-5 pt-5 pb-0 mt-5\">\n            {width < 360 ? (\n                <h1>Allgemeine Geschäfts-{'\\n'}bedingungen</h1>\n            ) : (\n                <h1>Allgemeine Geschäftsbedingungen</h1>\n            )}\n            <br />\n            <p>§1 Geltung gegenüber Unternehmern und Begriffsdefinitionen</p>\n            (1) Die nachfolgenden Allgemeinen Geschäftbedingungen gelten für alle Lieferungen zwischen uns und einem\n            Verbraucher in ihrer zum Zeitpunkt der Bestellung gültigen Fassung.\n            <br />\n            <br />\n            Verbraucher ist jede natürliche Person, die ein Rechtsgeschäft zu Zwecken abschließt, die überwiegend\n            weder ihrer gewerblichen noch ihrer selbständigen beruflichen Tätigkeit zugerechnet werden können (§ 13\n            BGB).\n            <br />\n            <br />\n            <p>§2 Zustandekommen eines Vertrages, Speicherung des Vertragstextes</p>\n            (1) Die folgenden Regelungen über den Vertragsabschluss gelten für Bestellungen über unseren\n            Internetshop http://www.beispielshop-online.de .<br />\n            <br />\n            <b>\n                (2) Im Falle des Vertragsschlusses kommt der Vertrag mit\n                <br />\n                <div>\n                    <br />\n                    BeispielShop Online\n                    <br />\n                    Klaus Muster\n                    <br />\n                    Beispielstraße 42\n                    <br />\n                    D-98765 Musterstadt\n                    <br />\n                    Registernummer 12131415\n                    <br />\n                    Registergericht Amtsgericht Musterstadt\n                    <br />\n                    <br />\n                </div>\n                zustande.\n                <br />\n            </b>\n            <br />\n            (3) Die Präsentation der Waren in unserem Internetshop stellen kein rechtlich bindendes Vertragsangebot\n            unsererseits dar, sondern sind nur eine unverbindliche Aufforderungen an den Verbraucher, Waren zu\n            bestellen. Mit der Bestellung der gewünschten Ware gibt der Verbraucher ein für ihn verbindliches\n            Angebot auf Abschluss eines Kaufvertrages ab.\n            <br />\n            (4) Bei Eingang einer Bestellung in unserem Internetshop gelten folgende Regelungen: Der Verbraucher\n            gibt ein bindendes Vertragsangebot ab, indem er die in unserem Internetshop vorgesehene Bestellprozedur\n            erfolgreich durchläuft.\n            <br />\n            <br />\n            Die Bestellung erfolgt in folgenden Schritten:\n            <br />\n            <br />\n            <div className=\"ml20\">\n                1 Auswahl der gewünschten Ware\n                <br />\n                2 Bestätigen durch Anklicken der Buttons „Bestellen“ <br />\n                3 Prüfung der Angaben im Warenkorb\n                <br />\n                4 Betätigung des Buttons „zur Kasse“ <br />\n                5 Anmeldung im Internetshop nach Registrierung und Eingabe der Anmelderangaben (E-Mail-Adresse und\n                Passwort). <br />\n                6 Nochmalige Prüfung bzw. Berichtigung der jeweiligen eingegebenen Daten.\n                <br />\n                7 Verbindliche Absendung der Bestellung durch Anklicken des Buttons „kostenpflichtig bestellen“ bzw.\n                „kaufen“\n                <br />\n                <br />\n            </div>\n            Der Verbraucher kann vor dem verbindlichen Absenden der Bestellung durch Betätigen der in dem von ihm\n            verwendeten Internet-Browser enthaltenen „Zurück“-Taste nach Kontrolle seiner Angaben wieder zu der\n            Internetseite gelangen, auf der die Angaben des Kunden erfasst werden und Eingabefehler berichtigen bzw.\n            durch Schließen des Internetbrowsers den Bestellvorgang abbrechen. Wir bestätigen den Eingang der\n            Bestellung unmittelbar durch eine automatisch generierte E-Mail („Auftragsbestätigung“). Mit dieser\n            nehmen wir Ihr Angebot an.\n            <br />\n            <br />\n            (5) Speicherung des Vertragstextes bei Bestellungen über unseren Internetshop : Wir senden Ihnen die\n            Bestelldaten und unsere AGB per E-Mail zu. Die AGB können Sie jederzeit auch unter\n            http://www.beispielshop-online.de/agb.html einsehen. Ihre Bestelldaten sind aus Sicherheitsgründen nicht\n            mehr über das Internet zugänglich.\n            <br />\n            <br />\n            <p>§3 Preise, Versandkosten, Zahlung, Fälligkeit</p>\n            (1) Die angegebenen Preise enthalten die gesetzliche Umsatzsteuer und sonstige Preisbestandteile. Hinzu\n            kommen etwaige Versandkosten.\n            <br />\n            <br />\n            (2) Der Verbraucher hat die Möglichkeit der Zahlung per Vorkasse, Kreditkarte( Visa ) .<br />\n            <br />\n            (3) Hat der Verbraucher die Zahlung per Vorkasse gewählt, so verpflichtet er sich, den Kaufpreis\n            unverzüglich nach Vertragsschluss zu zahlen.\n            <br />\n            <br />\n            <p>§4 Lieferung</p>\n            (1) Sofern wir dies in der Produktbeschreibung nicht deutlich anders angegeben haben, sind alle von uns\n            angebotenen Artikel sofort versandfertig. Die Lieferung erfolgt hier spätesten innerhalb von 5\n            Werktagen. Dabei beginnt die Frist für die Lieferung im Falle der Zahlung per Vorkasse am Tag nach\n            Zahlungsauftrag an die mit der Überweisung beauftragte Bank und bei allen anderen Zahlungsarten am Tag\n            nach Vertragsschluss zu laufen. Fällt das Fristende auf einen Samstag, Sonntag oder gesetzlichen\n            Feiertag am Lieferort, so endet die Frist am nächsten Werktag.\n            <br />\n            <br />\n            (2) Die Gefahr des zufälligen Untergangs und der zufälligen Verschlechterung der verkauften Sache geht\n            auch beim Versendungskauf erst mit der Übergabe der Sache an den Käufer auf diesen über. <br />\n            <br />\n            <p>§5 Eigentumsvorbehalt</p>\n            Wir behalten uns das Eigentum an der Ware bis zur vollständigen Bezahlung des Kaufpreises vor. <br />\n            <br />\n            <br />\n            <p>§6 Widerrufsrecht des Kunden als Verbraucher:</p>\n            <b>Widerrufsrecht für Verbraucher</b>\n            <br />\n            <br />\n            Verbrauchern steht ein Widerrufsrecht nach folgender Maßgabe zu, wobei Verbraucher jede natürliche\n            Person ist, die ein Rechtsgeschäft zu Zwecken abschließt, die überwiegend weder ihrer gewerblichen noch\n            ihrer selbständigen beruflichen Tätigkeit zugerechnet werden können:\n            <br />\n            <br />\n            <p>Widerrufsbelehrung</p>\n            <br />\n            <b>Widerrufsrecht</b>\n            <br />\n            <br />\n            Sie haben das Recht, binnen vierzehn Tagen ohne Angabe von Gründen diesen Vertrag zu widerrufen.\n            <br />\n            <br />\n            Die Widerrufsfrist beträgt vierzehn Tage, ab dem Tag, an dem Sie oder ein von Ihnen benannter Dritter,\n            der nicht der Beförderer ist, die Waren in Besitz genommen haben bzw. hat.\n            <br />\n            <br />\n            Um Ihr Widerrufsrecht auszuüben, müssen Sie uns\n            <br />\n            <div>\n                BeispielShop Online\n                <br />\n                Klaus Muster\n                <br />\n                Beispielstraße 42\n                <br />\n                D-98765 Musterstadt\n                <br />\n                E-Mail shop@beispielshop.com\n                <br />\n                Telefax 05123 45678910\n                <br />\n            </div>\n            mittels einer eindeutigen Erklärung (z.B. ein mit der Post versandter Brief, Telefax oder E-Mail) über\n            Ihren Entschluss, diesen Vertrag zu widerrufen, informieren. Sie können dafür das beigefügte\n            Muster-Widerrufsformular verwenden, das jedoch nicht vorgeschrieben ist.\n            <br />\n            <br />\n            <b>Widerrufsfolgen</b>\n            <br />\n            <br />\n            Wenn Sie diesen Vertrag widerrufen, haben wir Ihnen alle Zahlungen, die wir von Ihnen erhalten haben,\n            einschließlich der Lieferkosten (mit Ausnahme der zusätzlichen Kosten, die sich daraus ergeben, dass Sie\n            eine andere Art der Lieferung als die von uns angebotene, günstigste Standardlieferung gewählt haben),\n            unverzüglich und spätestens binnen vierzehn Tagen ab dem Tag zurückzuzahlen, an dem die Mitteilung über\n            Ihren Widerruf dieses Vertrags bei uns eingegangen ist. Für diese Rückzahlung verwenden wir dasselbe\n            Zahlungsmittel, das Sie bei der ursprünglichen Transaktion eingesetzt haben, es sei denn, mit Ihnen\n            wurde ausdrücklich etwas anderes vereinbart; in keinem Fall werden Ihnen wegen dieser Rückzahlung\n            Entgelte berechnet.\n            <br />\n            <br />\n            Wir können die Rückzahlung verweigern, bis wir die Waren wieder zurückerhalten haben oder bis Sie den\n            Nachweis erbracht haben, dass Sie die Waren zurückgesandt haben, je nachdem, welches der frühere\n            Zeitpunkt ist.\n            <br />\n            <br />\n            Sie haben die Waren unverzüglich und in jedem Fall spätestens binnen vierzehn Tagen ab dem Tag, an dem\n            Sie uns über den Widerruf dieses Vertrages unterrichten, an uns zurückzusenden oder zu übergeben. Die\n            Frist ist gewahrt, wenn Sie die Waren vor Ablauf der Frist von vierzehn Tagen absenden.\n            <br />\n            <br />\n            Sie tragen die unmittelbaren Kosten der Rücksendung der Waren.\n            <br />\n            <br />\n            <b>Ende der Widerrufsbelehrung</b>\n            <br />\n            <br />\n            <p>§7 Widerrufsformular</p>\n            <p>Muster-Widerrufsformular</p>\n            (Wenn Sie den Vertrag widerrufen wollen, dann füllen Sie bitte dieses Formular aus und senden Sie es\n            zurück.)\n            <br />\n            <br />\n            <p>§8 Gewährleistung</p>\n            Es gelten die gesetzlichen Gewährleistungsregelungen.\n            <br />\n            <br />\n            <p>§9 Verhaltenskodex</p>\n            Wir haben uns den Verhaltenskodizes der folgenden Einrichtungen unterworfen:\n            <br />\n            <p>\n                Euro-Label Germany\n                <br />\n                EHI-EuroHandelsinstitut GmbH\n                <br />\n                Spichernstraße 55\n                <br />\n                50672 Köln\n                <br />\n            </p>\n            Den Euro-Label Verhaltenskodex können Sie durch Anklicken des auf unserer Webseite angebrachten\n            Euro-Label-Siegels oder unter http://www.euro-label.com abrufen.\n            <br />\n            <br />\n            und <br />\n            <br />\n            <p>\n                Trusted Shops GmbH\n                <br />\n                Colonius Carré\n                <br />\n                Subbelrather Straße 15c\n                <br />\n                50823 Köln\n                <br />\n            </p>\n            Den Trusted Shops Verhaltenskodex können Sie durch Anklicken des auf unserer Webseite angebrachten\n            Trusted-Shops-Siegels oder unter www.trustedshops.de abrufen.\n            <br />\n            <br />\n            <p>§10 Vertragssprache</p>\n            Als Vertragssprache steht ausschließlich Deutsch zur Verfügung.\n            <br />\n            <br />\n            <p>§11 Kundendienst</p>\n            <b>\n                Unser Kundendienst für Fragen, Reklamationen und Beanstandungen steht Ihnen werktags von 9:00 Uhr\n                bis 17:30 Uhr unter\n                <br />\n                <br />\n                <p>\n                    Telefon: 05123 45678911\n                    <br />\n                    Telefax: 05123 45678912\n                    <br />\n                    E-Mail: service@beispielshop.de\n                    <br />\n                </p>\n                zur Verfügung.\n            </b>\n            <br />\n            <br />\n            <p>Stand der AGB Nov.2020</p>\n            <p>\n                <i>\n                    <a href=\"http://www.agb.de\">Gratis AGB</a> erstellt von agb.de\n                </i>\n            </p>\n            <br />\n            <br />\n        </Container>\n    );\n}\n\n/* ********************************************************* EXPORT ********************************************************* */\nexport default connect(null, {setBackgroundColor5Action, setBackgroundColor1Action})(Terms);\n","/* ********************************************************* IMPORT ********************************************************* */\n// react\nimport React, {useEffect} from 'react';\n// redux\nimport {connect} from 'react-redux';\nimport {setBackgroundColor1Action, setBackgroundColor5Action} from '../actions';\n// reactstrap\nimport {Container} from 'reactstrap';\n// window dimension hook\nimport {useWindowDimension} from '../hooks/useWindowDimension';\n\n/* ******************************************************** COMPONENT ********************************************************* */\nfunction Protection(props) {\n    // width of window\n    const [width] = useWindowDimension();\n\n    useEffect(() => {\n        // set background color of nav\n        props.setBackgroundColor5Action(null);\n        props.setBackgroundColor1Action('color-1');\n    // eslint-disable-next-line\n    }, []);\n\n/* ******************************************************** RETURN ********************************************************* */\n    return (\n        <Container fluid={true} className=\"px-5 pb-0 pt-5 mt-5\">\n            {width < 360 ? (\n                <h1 className=\"adsimple-311242123\">Datenschutz-{'\\n'}erklärung</h1>\n            ) : (\n                <h1 className=\"adsimple-311242123\">Datenschutzerklärung</h1>\n            )}\n            <br />\n            <h2 className=\"adsimple-311242123\">Datenschutz</h2>\n            <p>Wir haben diese Datenschutzerklärung (Fassung 17.12.2020-311242123) verfasst, um Ihnen gemäß der Vorgaben der <a className=\"adsimple-311242123\" href=\"https://eur-lex.europa.eu/legal-content/DE/ALL/?uri=celex%3A32016R0679&amp;tid=311242123\" target=\"_blank\" rel=\"noopener noreferrer\">Datenschutz-Grundverordnung (EU) 2016/679</a> zu erklären, welche Informationen wir sammeln, wie wir Daten verwenden und welche Entscheidungsmöglichkeiten Sie als Besucher dieser Webseite haben.</p>\n            <p>Leider liegt es in der Natur der Sache, dass diese Erklärungen sehr technisch klingen, wir haben uns bei der Erstellung jedoch bemüht die wichtigsten Dinge so einfach und klar wie möglich zu beschreiben.</p>\n            <p style={{marginTop: 15 + 'px'}}>Quelle: Erstellt mit dem <a title=\"Datenschutz Generator Deutschland\" href=\"https://www.adsimple.de/datenschutz-generator/\" target=\"_blank\" rel=\"noopener noreferrer\" style={{textDecoration: 'none'}}>Datenschutz Generator</a> von AdSimple in Kooperation mit <a href=\"https://www.hashtagmann.de\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"\">hashtagmann.de</a></p>\n        </Container>\n    );\n}\n\n/* ********************************************************* EXPORT ********************************************************* */\nexport default connect(null, {setBackgroundColor5Action, setBackgroundColor1Action})(Protection);\n","import React from 'react';\nimport {Container} from 'reactstrap';\n\nclass Register extends React.Component {\n    render() {\n        return (\n            <Container className=\"pt-4 mt-5\">\n                <div>Sorry, this page does not exist! Make sure you have used the correct link.</div>\n            </Container>\n        );\n    }\n}\n\nexport default Register;\n","/* ********************************************************* IMPORT ********************************************************* */\n// react\nimport React, {useEffect} from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\n// redux\nimport {connect} from 'react-redux';\nimport {setUserAction} from '../actions';\n// services\nimport {checkLoginPost} from '../services/api';\n// components\nimport Navigation from './Navigation';\nimport Footer from './Footer';\nimport Fader from './Fader';\nimport ScrollTop from './ScrollTop';\n\nimport Main from './Main';\n\nimport Register from './Register';\nimport Login from './Login';\nimport CheckLogin from './CheckLogin';\n\nimport UserVerification from './UserVerification';\nimport ForgotPassword from './ForgotPassword'\nimport ResetPassword from './ResetPassword'\n\nimport Dashboard from './Dashboard';\nimport UserProfile from './UserProfile';\n\nimport Admin from './Admin';\nimport SubAdmin from './SubAdmin';\n\nimport About from './About';\nimport Contact from './Contact';\nimport Terms from './Terms';\nimport Protection from './Protection';\n\nimport ErrorPage from './ErrorPage';\n\n/* ******************************************************** COMPONENT ********************************************************* */\nconst Router = props => {\n\n    const {setUserAction} = props;\n\n    useEffect(() => {\n        // The system checks whether the user is properly logged in.  \n        // If so, the user data is written to the mainstate of redux.\n        checkLoginPost().then(data => {\n            if (data !== 10) {\n                setUserAction(data);\n            }\n        });\n    // eslint-disable-next-line\n    }, []);\n\n/* ******************************************************** RETURN ********************************************************* */\nreturn (\n        <BrowserRouter>\n            <ScrollTop />\n            <Fader>\n                <Navigation />\n                <Switch>\n                    <Route path=\"/\" exact component={Main} />\n                    <Route path=\"/register\" exact component={Register} />\n                    <Route path=\"/login\" exact component={Login} />\n                    <Route path=\"/verify/:email\" exact component={UserVerification} />\n                    <Route path='/password' exact component={ForgotPassword} />\n                    <Route path='/reset/:id/:email' exact component={ResetPassword} />\n                    <Route path=\"/user/profile\" exact component={() => <CheckLogin><UserProfile /></CheckLogin>} />\n                    <Route path=\"/user/admin\" exact component={() => <CheckLogin><Admin /></CheckLogin>} />\n                    <Route path=\"/user/subadmin\" exact component={() => <CheckLogin><SubAdmin /></CheckLogin>} />\n                    <Route path=\"/user/dashboard\" exact component={() => <CheckLogin><Dashboard /></CheckLogin>} />\n                    <Route path=\"/about\" exact component={About} />\n                    <Route path=\"/contact\" exact component={Contact} />\n                    <Route path=\"/terms\" exact component={Terms} />\n                    <Route path=\"/protection\" exact component={Protection} />\n                    <Route path=\"/\" component={ErrorPage} />\n                </Switch>\n                <Footer />\n            </Fader>\n        </BrowserRouter>\n    );\n}\n\n/* ********************************************************* MAP STATE TO PROPS ********************************************************* */\nconst mapStateToProps = state => {\n    return {\n        backgroundUrl: state.backgroundUrl,\n        backgroundColor1: state.backgroundColor1,\n        backgroundColor5: state.backgroundColor5,\n        nav: state.nav\n    };\n};\n\n/* ********************************************************* EXPORT ********************************************************* */\nexport default connect(mapStateToProps, {setUserAction})(Router);\n","import React, {Fragment} from 'react';\nimport Router from './components/Router';\n\nfunction App() {\n    return (\n        <Fragment>\n            <Router />\n        </Fragment>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers} from 'redux';\n\nconst userReducer = (user = null, action) => {\n    if (action.type === 'CHANGE_USER') {\n        // if action contains payload the main state has changed\n        return action.payload;\n    }\n    return user;\n};\n\nconst socketReducer = (socket = null, action) => {\n    if (action.type === 'CHANGE_SOCKET') {\n        return action.payload;\n    }\n    return socket;\n};\n\nconst backgroundImageReducer = (backgroundUrl = null, action) => {\n    if (action.type === 'CHANGE_BGIMG') {\n        return action.payload;\n    }\n    return backgroundUrl;\n};\n\nconst backgroundColor5Reducer = (backgroundColor5 = null, action) => {\n    if (action.type === 'CHANGE_BGCOLOR_5') {\n        return action.payload;\n    }\n    return backgroundColor5;\n};\n\nconst backgroundColor1Reducer = (backgroundColor1 = null, action) => {\n    if (action.type === 'CHANGE_BGCOLOR_1') {\n        return action.payload;\n    }\n    return backgroundColor1;\n};\n\nconst navReducer = (nav = null, action) => {\n    if (action.type === 'CHANGE_NAV') {\n        return action.payload;\n    }\n    return nav;\n};\n\n// take in actions and update part of applications state\nexport default combineReducers({\n    user: userReducer,\n    socket: socketReducer,\n    backgroundUrl: backgroundImageReducer,\n    backgroundColor5: backgroundColor5Reducer,\n    backgroundColor1: backgroundColor1Reducer,\n    nav: navReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import '../public/css/style.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// redux\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport reducers from './reducers';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nReactDOM.render(\n    <Provider store={\n                      createStore(reducers,\n                      window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )}>\n      <App />\n    </Provider>,\n  document.querySelector('#root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}